(58*b1^3*k1^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (240*b1^2*b11*k1^10*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4077*b1^2*b2*k1^10*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (38*b1^2*b3*k1^10*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (27722*b1^2*b4*k1^10*q^(-2 + \[Nu]))/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (59*b1^2*b5*k1^10*q^(-2 + \[Nu]))/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (228*b1^2*b7*k1^10*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (38*b1^2*b8*k1^10*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24641*b1^2*b9*k1^10*q^(-2 + \[Nu]))/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (23*b1^3*k1^12*q^(-2 + \[Nu]))/(105*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*k1^12*q^(-2 + \[Nu]))/
  (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^2*b3*k1^12*q^(-2 + \[Nu]))/(35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b4*k1^12*q^(-2 + \[Nu]))/
  (35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b7*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1^2*b8*k1^12*q^(-2 + \[Nu]))/
  (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9*b1^2*b9*k1^12*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (76*b1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (720*b1^2*b11*k1^8*k2^2*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (13701*b1^2*b2*k1^8*k2^2*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (122*b1^2*b3*k1^8*k2^2*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (21254*b1^2*b4*k1^8*k2^2*q^(-2 + \[Nu]))/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (177*b1^2*b5*k1^8*k2^2*q^(-2 + \[Nu]))/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (404*b1^2*b7*k1^8*k2^2*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (366*b1^2*b8*k1^8*k2^2*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (6119*b1^2*b9*k1^8*k2^2*q^(-2 + \[Nu]))/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (307*b1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (480*b1^2*b11*k1^6*k2^4*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9379*b1^2*b2*k1^6*k2^4*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (286*b1^2*b3*k1^6*k2^4*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (39274*b1^2*b4*k1^6*k2^4*q^(-2 + \[Nu]))/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (118*b1^2*b5*k1^6*k2^4*q^(-2 + \[Nu]))/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (668*b1^2*b7*k1^6*k2^4*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (286*b1^2*b8*k1^6*k2^4*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2977*b1^2*b9*k1^6*k2^4*q^(-2 + \[Nu]))/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (307*b1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (480*b1^2*b11*k1^4*k2^6*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9379*b1^2*b2*k1^4*k2^6*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (286*b1^2*b3*k1^4*k2^6*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (39274*b1^2*b4*k1^4*k2^6*q^(-2 + \[Nu]))/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (118*b1^2*b5*k1^4*k2^6*q^(-2 + \[Nu]))/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (668*b1^2*b7*k1^4*k2^6*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (286*b1^2*b8*k1^4*k2^6*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2977*b1^2*b9*k1^4*k2^6*q^(-2 + \[Nu]))/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (76*b1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (720*b1^2*b11*k1^2*k2^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (13701*b1^2*b2*k1^2*k2^8*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (122*b1^2*b3*k1^2*k2^8*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (21254*b1^2*b4*k1^2*k2^8*q^(-2 + \[Nu]))/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (177*b1^2*b5*k1^2*k2^8*q^(-2 + \[Nu]))/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (404*b1^2*b7*k1^2*k2^8*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (366*b1^2*b8*k1^2*k2^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (6119*b1^2*b9*k1^2*k2^8*q^(-2 + \[Nu]))/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (58*b1^3*k2^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (240*b1^2*b11*k2^10*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4077*b1^2*b2*k2^10*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (38*b1^2*b3*k2^10*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (27722*b1^2*b4*k2^10*q^(-2 + \[Nu]))/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (59*b1^2*b5*k2^10*q^(-2 + \[Nu]))/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (228*b1^2*b7*k2^10*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (38*b1^2*b8*k2^10*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24641*b1^2*b9*k2^10*q^(-2 + \[Nu]))/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (23*b1^3*k2^12*q^(-2 + \[Nu]))/(105*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*k2^12*q^(-2 + \[Nu]))/
  (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^2*b3*k2^12*q^(-2 + \[Nu]))/(35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b4*k2^12*q^(-2 + \[Nu]))/
  (35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b7*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1^2*b8*k2^12*q^(-2 + \[Nu]))/
  (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9*b1^2*b9*k2^12*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1^3*k1^12*q^(-2 + \[Nu]))/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b4*k1^12*q^(-2 + \[Nu]))/(385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*b9*k1^12*q^(-2 + \[Nu]))/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (b1^3*k1^14*q^(-2 + \[Nu]))/(35*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b4*k1^14*q^(-2 + \[Nu]))/
  (385*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^2*b9*k1^14*q^(-2 + \[Nu]))/(5*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b4*k1^10*k2^2*q^(-2 + \[Nu]))/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^10*k2^2*q^(-2 + \[Nu]))/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k1^8*k2^4*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*b4*k1^8*k2^4*q^(-2 + \[Nu]))/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^8*k2^4*q^(-2 + \[Nu]))/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^3*k1^6*k2^6*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*b4*k1^6*k2^6*q^(-2 + \[Nu]))/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2*b1^2*b9*k1^6*k2^6*q^(-2 + \[Nu]))/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k1^4*k2^8*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*b4*k1^4*k2^8*q^(-2 + \[Nu]))/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^4*k2^8*q^(-2 + \[Nu]))/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b4*k1^2*k2^10*q^(-2 + \[Nu]))/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^2*k2^10*q^(-2 + \[Nu]))/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^3*k2^12*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b4*k2^12*q^(-2 + \[Nu]))/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b9*k2^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (b1^3*k2^14*q^(-2 + \[Nu]))/
  (35*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^2*b4*k2^14*q^(-2 + \[Nu]))/(385*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b9*k2^14*q^(-2 + \[Nu]))/
  (5*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2683*b1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
  (4410*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (320*b1^2*b11*k1^8*k3^2*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5154*b1^2*b2*k1^8*k3^2*q^(-2 + \[Nu]))/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (824*b1^2*b3*k1^8*k3^2*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (41392*b1^2*b4*k1^8*k3^2*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (416*b1^2*b5*k1^8*k3^2*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b7*k1^8*k3^2*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (824*b1^2*b8*k1^8*k3^2*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (353896*b1^2*b9*k1^8*k3^2*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (547*b1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
  (1260*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5*b1^2*b2*k1^10*k3^2*q^(-2 + \[Nu]))/
  (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b3*k1^10*k3^2*q^(-2 + \[Nu]))/
  (105*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b4*k1^10*k3^2*q^(-2 + \[Nu]))/
  (495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (40*b1^2*b7*k1^10*k3^2*q^(-2 + \[Nu]))/
  (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b8*k1^10*k3^2*q^(-2 + \[Nu]))/
  (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (152*b1^2*b9*k1^10*k3^2*q^(-2 + \[Nu]))/
  (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1891*b1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (1260*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4351*b1^2*b2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (52928*b1^2*b4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (48*b1^2*b5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (40*b1^2*b7*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b8*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32552*b1^2*b9*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2021*b1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (640*b1^2*b11*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1836*b1^2*b2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1648*b1^2*b3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (735968*b1^2*b4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (608*b1^2*b5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (608*b1^2*b7*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1648*b1^2*b8*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (335024*b1^2*b9*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
  (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1891*b1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (1260*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4351*b1^2*b2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (52928*b1^2*b4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (48*b1^2*b5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (40*b1^2*b7*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b8*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32552*b1^2*b9*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2683*b1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
  (4410*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (320*b1^2*b11*k2^8*k3^2*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5154*b1^2*b2*k2^8*k3^2*q^(-2 + \[Nu]))/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (824*b1^2*b3*k2^8*k3^2*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (41392*b1^2*b4*k2^8*k3^2*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (416*b1^2*b5*k2^8*k3^2*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b7*k2^8*k3^2*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (824*b1^2*b8*k2^8*k3^2*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (353896*b1^2*b9*k2^8*k3^2*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (547*b1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
  (1260*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5*b1^2*b2*k2^10*k3^2*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b3*k2^10*k3^2*q^(-2 + \[Nu]))/
  (105*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b4*k2^10*k3^2*q^(-2 + \[Nu]))/
  (495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (40*b1^2*b7*k2^10*k3^2*q^(-2 + \[Nu]))/
  (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b8*k2^10*k3^2*q^(-2 + \[Nu]))/
  (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (152*b1^2*b9*k2^10*k3^2*q^(-2 + \[Nu]))/
  (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1907*b1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
  (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (160*b1^2*b11*k1^6*k3^4*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2063*b1^2*b2*k1^6*k3^4*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (398*b1^2*b3*k1^6*k3^4*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (67778*b1^2*b4*k1^6*k3^4*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (122*b1^2*b5*k1^6*k3^4*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (524*b1^2*b7*k1^6*k3^4*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (398*b1^2*b8*k1^6*k3^4*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (88439*b1^2*b9*k1^6*k3^4*q^(-2 + \[Nu]))/
  (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (47*b1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
  (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3*b1^2*b2*k1^8*k3^4*q^(-2 + \[Nu]))/
  (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (58*b1^2*b3*k1^8*k3^4*q^(-2 + \[Nu]))/
  (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (122*b1^2*b4*k1^8*k3^4*q^(-2 + \[Nu]))/
  (385*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b7*k1^8*k3^4*q^(-2 + \[Nu]))/
  (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (58*b1^2*b8*k1^8*k3^4*q^(-2 + \[Nu]))/
  (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^2*b9*k1^8*k3^4*q^(-2 + \[Nu]))/
  (5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (619*b1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (126*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (160*b1^2*b11*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (6659*b1^2*b2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (452*b1^2*b3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5452*b1^2*b4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1066*b1^2*b5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b7*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (452*b1^2*b8*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (26638*b1^2*b9*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (619*b1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (126*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (160*b1^2*b11*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (6659*b1^2*b2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (452*b1^2*b3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5452*b1^2*b4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1066*b1^2*b5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b7*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (452*b1^2*b8*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (26638*b1^2*b9*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1907*b1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
  (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (160*b1^2*b11*k2^6*k3^4*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2063*b1^2*b2*k2^6*k3^4*q^(-2 + \[Nu]))/
  (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (398*b1^2*b3*k2^6*k3^4*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (67778*b1^2*b4*k2^6*k3^4*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (122*b1^2*b5*k2^6*k3^4*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (524*b1^2*b7*k2^6*k3^4*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (398*b1^2*b8*k2^6*k3^4*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (88439*b1^2*b9*k2^6*k3^4*q^(-2 + \[Nu]))/
  (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (47*b1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
  (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3*b1^2*b2*k2^8*k3^4*q^(-2 + \[Nu]))/
  (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (58*b1^2*b3*k2^8*k3^4*q^(-2 + \[Nu]))/
  (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (122*b1^2*b4*k2^8*k3^4*q^(-2 + \[Nu]))/
  (385*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b7*k2^8*k3^4*q^(-2 + \[Nu]))/
  (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (58*b1^2*b8*k2^8*k3^4*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^2*b9*k2^8*k3^4*q^(-2 + \[Nu]))/
  (5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5258*b1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (320*b1^2*b11*k1^4*k3^6*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (19396*b1^2*b2*k1^4*k3^6*q^(-2 + \[Nu]))/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b3*k1^4*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (37160*b1^2*b4*k1^4*k3^6*q^(-2 + \[Nu]))/
  (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (356*b1^2*b5*k1^4*k3^6*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4544*b1^2*b7*k1^4*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b8*k1^4*k3^6*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (74876*b1^2*b9*k1^4*k3^6*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (151*b1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
  (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2*b1^2*b2*k1^6*k3^6*q^(-2 + \[Nu]))/
  (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b3*k1^6*k3^6*q^(-2 + \[Nu]))/
  (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b4*k1^6*k3^6*q^(-2 + \[Nu]))/
  (3465*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16*b1^2*b7*k1^6*k3^6*q^(-2 + \[Nu]))/
  (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b8*k1^6*k3^6*q^(-2 + \[Nu]))/
  (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (236*b1^2*b9*k1^6*k3^6*q^(-2 + \[Nu]))/
  (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2498*b1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (640*b1^2*b11*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3820*b1^2*b2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (517984*b1^2*b4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1192*b1^2*b5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2656*b1^2*b7*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b8*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (858992*b1^2*b9*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5258*b1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (320*b1^2*b11*k2^4*k3^6*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (19396*b1^2*b2*k2^4*k3^6*q^(-2 + \[Nu]))/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b3*k2^4*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (37160*b1^2*b4*k2^4*k3^6*q^(-2 + \[Nu]))/
  (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (356*b1^2*b5*k2^4*k3^6*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4544*b1^2*b7*k2^4*k3^6*q^(-2 + \[Nu]))/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b8*k2^4*k3^6*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (74876*b1^2*b9*k2^4*k3^6*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (151*b1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
  (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2*b1^2*b2*k2^6*k3^6*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b3*k2^6*k3^6*q^(-2 + \[Nu]))/
  (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b4*k2^6*k3^6*q^(-2 + \[Nu]))/
  (3465*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16*b1^2*b7*k2^6*k3^6*q^(-2 + \[Nu]))/
  (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b8*k2^6*k3^6*q^(-2 + \[Nu]))/
  (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (236*b1^2*b9*k2^6*k3^6*q^(-2 + \[Nu]))/
  (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (653*b1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
  (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (80*b1^2*b11*k1^2*k3^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2257*b1^2*b2*k1^2*k3^8*q^(-2 + \[Nu]))/
  (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (74*b1^2*b3*k1^2*k3^8*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (316538*b1^2*b4*k1^2*k3^8*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (299*b1^2*b5*k1^2*k3^8*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1732*b1^2*b7*k1^2*k3^8*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (370*b1^2*b8*k1^2*k3^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (381319*b1^2*b9*k1^2*k3^8*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (271*b1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
  (630*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (11*b1^2*b2*k1^4*k3^8*q^(-2 + \[Nu]))/
  (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^2*b3*k1^4*k3^8*q^(-2 + \[Nu]))/
  (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (206*b1^2*b4*k1^4*k3^8*q^(-2 + \[Nu]))/
  (693*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44*b1^2*b7*k1^4*k3^8*q^(-2 + \[Nu]))/
  (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10*b1^2*b8*k1^4*k3^8*q^(-2 + \[Nu]))/
  (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (29*b1^2*b9*k1^4*k3^8*q^(-2 + \[Nu]))/
  (9*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (653*b1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
  (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (80*b1^2*b11*k2^2*k3^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2257*b1^2*b2*k2^2*k3^8*q^(-2 + \[Nu]))/
  (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (74*b1^2*b3*k2^2*k3^8*q^(-2 + \[Nu]))/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (316538*b1^2*b4*k2^2*k3^8*q^(-2 + \[Nu]))/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (299*b1^2*b5*k2^2*k3^8*q^(-2 + \[Nu]))/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1732*b1^2*b7*k2^2*k3^8*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (370*b1^2*b8*k2^2*k3^8*q^(-2 + \[Nu]))/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (381319*b1^2*b9*k2^2*k3^8*q^(-2 + \[Nu]))/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (271*b1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
  (630*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (11*b1^2*b2*k2^4*k3^8*q^(-2 + \[Nu]))/
  (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^2*b3*k2^4*k3^8*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (206*b1^2*b4*k2^4*k3^8*q^(-2 + \[Nu]))/
  (693*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44*b1^2*b7*k2^4*k3^8*q^(-2 + \[Nu]))/
  (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10*b1^2*b8*k2^4*k3^8*q^(-2 + \[Nu]))/
  (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (29*b1^2*b9*k2^4*k3^8*q^(-2 + \[Nu]))/
  (9*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (11*b1^3*k3^10*q^(-2 + \[Nu]))/(126*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (186*b1^2*b2*k3^10*q^(-2 + \[Nu]))/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (88*b1^2*b3*k3^10*q^(-2 + \[Nu]))/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5776*b1^2*b4*k3^10*q^(-2 + \[Nu]))/
  (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b5*k3^10*q^(-2 + \[Nu]))/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16*b1^2*b7*k3^10*q^(-2 + \[Nu]))/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (88*b1^2*b8*k3^10*q^(-2 + \[Nu]))/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8648*b1^2*b9*k3^10*q^(-2 + \[Nu]))/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^3*k1^2*k3^10*q^(-2 + \[Nu]))/(140*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*k1^2*k3^10*q^(-2 + \[Nu]))/
  (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44*b1^2*b3*k1^2*k3^10*q^(-2 + \[Nu]))/
  (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b4*k1^2*k3^10*q^(-2 + \[Nu]))/
  (33*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b7*k1^2*k3^10*q^(-2 + \[Nu]))/
  (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44*b1^2*b8*k1^2*k3^10*q^(-2 + \[Nu]))/
  (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^2*k3^10*q^(-2 + \[Nu]))/
  (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^3*k2^2*k3^10*q^(-2 + \[Nu]))/(140*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*k2^2*k3^10*q^(-2 + \[Nu]))/
  (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44*b1^2*b3*k2^2*k3^10*q^(-2 + \[Nu]))/
  (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b4*k2^2*k3^10*q^(-2 + \[Nu]))/
  (33*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b7*k2^2*k3^10*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44*b1^2*b8*k2^2*k3^10*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k2^2*k3^10*q^(-2 + \[Nu]))/
  (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (25*b1^3*k3^12*q^(-2 + \[Nu]))/(252*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b2*k3^12*q^(-2 + \[Nu]))/
  (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2*b1^2*b3*k3^12*q^(-2 + \[Nu]))/(63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (38*b1^2*b4*k3^12*q^(-2 + \[Nu]))/
  (495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b7*k3^12*q^(-2 + \[Nu]))/(63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1^2*b8*k3^12*q^(-2 + \[Nu]))/
  (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (73*b1^2*b9*k3^12*q^(-2 + \[Nu]))/(45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (25*b1^3*k3^12*q^(-2 + \[Nu]))/
  (252*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^2*b2*k3^12*q^(-2 + \[Nu]))/(42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b3*k3^12*q^(-2 + \[Nu]))/
  (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (38*b1^2*b4*k3^12*q^(-2 + \[Nu]))/(495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*b7*k3^12*q^(-2 + \[Nu]))/
  (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10*b1^2*b8*k3^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (73*b1^2*b9*k3^12*q^(-2 + \[Nu]))/
  (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (b1^3*k3^14*q^(-2 + \[Nu]))/(42*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b4*k3^14*q^(-2 + \[Nu]))/
  (231*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (b1^2*b9*k3^14*q^(-2 + \[Nu]))/(3*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^3*q^\[Nu])/105 - 9*b1^2*b10*q^\[Nu] + 
 (34*b1^2*b11*q^\[Nu])/5 - (262*b1^2*b2*q^\[Nu])/735 - 
 (614*b1^2*b3*q^\[Nu])/105 + (4588*b1^2*b4*q^\[Nu])/735 - 
 (10*b1^2*b5*q^\[Nu])/21 - (106*b1^2*b6*q^\[Nu])/7 + 
 (18238*b1^2*b7*q^\[Nu])/735 - (134*b1^2*b8*q^\[Nu])/21 + 
 (766*b1^2*b9*q^\[Nu])/49 + (16*b1^3*k1^2*q^\[Nu])/(63*k2^2) - 
 (3*b1^2*b10*k1^2*q^\[Nu])/(2*k2^2) + (5*b1^2*b11*k1^2*q^\[Nu])/(7*k2^2) + 
 (17*b1^2*b2*k1^2*q^\[Nu])/(21*k2^2) - (83*b1^2*b3*k1^2*q^\[Nu])/(63*k2^2) + 
 (16*b1^2*b4*k1^2*q^\[Nu])/(63*k2^2) + (b1^2*b5*k1^2*q^\[Nu])/k2^2 - 
 (61*b1^2*b6*k1^2*q^\[Nu])/(21*k2^2) + (43*b1^2*b7*k1^2*q^\[Nu])/(63*k2^2) - 
 (17*b1^2*b8*k1^2*q^\[Nu])/(7*k2^2) + (55*b1^2*b9*k1^2*q^\[Nu])/(63*k2^2) + 
 (16*b1^3*k2^2*q^\[Nu])/(63*k1^2) - (3*b1^2*b10*k2^2*q^\[Nu])/(2*k1^2) + 
 (5*b1^2*b11*k2^2*q^\[Nu])/(7*k1^2) + (17*b1^2*b2*k2^2*q^\[Nu])/(21*k1^2) - 
 (83*b1^2*b3*k2^2*q^\[Nu])/(63*k1^2) + (16*b1^2*b4*k2^2*q^\[Nu])/(63*k1^2) + 
 (b1^2*b5*k2^2*q^\[Nu])/k1^2 - (61*b1^2*b6*k2^2*q^\[Nu])/(21*k1^2) + 
 (43*b1^2*b7*k2^2*q^\[Nu])/(63*k1^2) - (17*b1^2*b8*k2^2*q^\[Nu])/(7*k1^2) + 
 (55*b1^2*b9*k2^2*q^\[Nu])/(63*k1^2) - (b1^3*k1^2*q^\[Nu])/(63*k3^2) + 
 (5*b1^2*b11*k1^2*q^\[Nu])/(14*k3^2) - (b1^2*b3*k1^2*q^\[Nu])/(63*k3^2) + 
 (2*b1^2*b4*k1^2*q^\[Nu])/(63*k3^2) + (2*b1^2*b7*k1^2*q^\[Nu])/(63*k3^2) - 
 (5*b1^2*b8*k1^2*q^\[Nu])/(21*k3^2) + (17*b1^2*b9*k1^2*q^\[Nu])/(63*k3^2) + 
 (b1^3*k1^4*q^\[Nu])/(63*k2^2*k3^2) - (5*b1^2*b11*k1^4*q^\[Nu])/
  (14*k2^2*k3^2) + (b1^2*b3*k1^4*q^\[Nu])/(63*k2^2*k3^2) - 
 (2*b1^2*b4*k1^4*q^\[Nu])/(63*k2^2*k3^2) - (2*b1^2*b7*k1^4*q^\[Nu])/
  (63*k2^2*k3^2) + (5*b1^2*b8*k1^4*q^\[Nu])/(21*k2^2*k3^2) - 
 (17*b1^2*b9*k1^4*q^\[Nu])/(63*k2^2*k3^2) - (b1^3*k2^2*q^\[Nu])/(63*k3^2) + 
 (5*b1^2*b11*k2^2*q^\[Nu])/(14*k3^2) - (b1^2*b3*k2^2*q^\[Nu])/(63*k3^2) + 
 (2*b1^2*b4*k2^2*q^\[Nu])/(63*k3^2) + (2*b1^2*b7*k2^2*q^\[Nu])/(63*k3^2) - 
 (5*b1^2*b8*k2^2*q^\[Nu])/(21*k3^2) + (17*b1^2*b9*k2^2*q^\[Nu])/(63*k3^2) + 
 (b1^3*k2^4*q^\[Nu])/(63*k1^2*k3^2) - (5*b1^2*b11*k2^4*q^\[Nu])/
  (14*k1^2*k3^2) + (b1^2*b3*k2^4*q^\[Nu])/(63*k1^2*k3^2) - 
 (2*b1^2*b4*k2^4*q^\[Nu])/(63*k1^2*k3^2) - (2*b1^2*b7*k2^4*q^\[Nu])/
  (63*k1^2*k3^2) + (5*b1^2*b8*k2^4*q^\[Nu])/(21*k1^2*k3^2) - 
 (17*b1^2*b9*k2^4*q^\[Nu])/(63*k1^2*k3^2) - (31*b1^3*k3^2*q^\[Nu])/
  (126*k1^2) + (3*b1^2*b10*k3^2*q^\[Nu])/(2*k1^2) - 
 (5*b1^2*b11*k3^2*q^\[Nu])/(14*k1^2) - (17*b1^2*b2*k3^2*q^\[Nu])/(21*k1^2) + 
 (185*b1^2*b3*k3^2*q^\[Nu])/(126*k1^2) - (26*b1^2*b4*k3^2*q^\[Nu])/
  (63*k1^2) - (b1^2*b5*k3^2*q^\[Nu])/k1^2 + (67*b1^2*b6*k3^2*q^\[Nu])/
  (21*k1^2) - (80*b1^2*b7*k3^2*q^\[Nu])/(63*k1^2) + 
 (46*b1^2*b8*k3^2*q^\[Nu])/(21*k1^2) - (59*b1^2*b9*k3^2*q^\[Nu])/(63*k1^2) - 
 (31*b1^3*k3^2*q^\[Nu])/(126*k2^2) + (3*b1^2*b10*k3^2*q^\[Nu])/(2*k2^2) - 
 (5*b1^2*b11*k3^2*q^\[Nu])/(14*k2^2) - (17*b1^2*b2*k3^2*q^\[Nu])/(21*k2^2) + 
 (185*b1^2*b3*k3^2*q^\[Nu])/(126*k2^2) - (26*b1^2*b4*k3^2*q^\[Nu])/
  (63*k2^2) - (b1^2*b5*k3^2*q^\[Nu])/k2^2 + (67*b1^2*b6*k3^2*q^\[Nu])/
  (21*k2^2) - (80*b1^2*b7*k3^2*q^\[Nu])/(63*k2^2) + 
 (46*b1^2*b8*k3^2*q^\[Nu])/(21*k2^2) - (59*b1^2*b9*k3^2*q^\[Nu])/(63*k2^2) - 
 (b1^3*k3^4*q^\[Nu])/(42*k1^2*k2^2) - (b1^2*b3*k3^4*q^\[Nu])/(6*k1^2*k2^2) + 
 (4*b1^2*b4*k3^4*q^\[Nu])/(21*k1^2*k2^2) - (2*b1^2*b6*k3^4*q^\[Nu])/
  (7*k1^2*k2^2) + (13*b1^2*b7*k3^4*q^\[Nu])/(21*k1^2*k2^2) + 
 (b1^2*b9*k3^4*q^\[Nu])/(3*k1^2*k2^2) + (62*b1^3*k1^11*q^(-2 + \[Nu])*y)/
  (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (12*b1^2*b11*k1^11*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (b1^2*b2*k1^11*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b3*k1^11*q^(-2 + \[Nu])*y)/
  (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (212*b1^2*b4*k1^11*q^(-2 + \[Nu])*y)/
  (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b7*k1^11*q^(-2 + \[Nu])*y)/
  (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b8*k1^11*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (74*b1^2*b9*k1^11*q^(-2 + \[Nu])*y)/
  (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1438*b1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (24*b1^2*b11*k1^9*k2*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4216*b1^2*b2*k1^9*k2*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b3*k1^9*k2*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1992*b1^2*b4*k1^9*k2*q^(-2 + \[Nu])*y)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (118*b1^2*b5*k1^9*k2*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b7*k1^9*k2*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b8*k1^9*k2*q^(-2 + \[Nu])*y)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (19812*b1^2*b9*k1^9*k2*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1846*b1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (12*b1^2*b11*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (19069*b1^2*b2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (712*b1^2*b3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (23196*b1^2*b4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (472*b1^2*b5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b7*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (712*b1^2*b8*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (13674*b1^2*b9*k1^7*k2^3*q^(-2 + \[Nu])*y)/
  (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1684*b1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (48*b1^2*b11*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (29216*b1^2*b2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (928*b1^2*b3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (130352*b1^2*b4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (708*b1^2*b5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b7*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (928*b1^2*b8*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (59720*b1^2*b9*k1^5*k2^5*q^(-2 + \[Nu])*y)/
  (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1846*b1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (12*b1^2*b11*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (19069*b1^2*b2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (712*b1^2*b3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (23196*b1^2*b4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (472*b1^2*b5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b7*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (712*b1^2*b8*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (13674*b1^2*b9*k1^3*k2^7*q^(-2 + \[Nu])*y)/
  (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1438*b1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (24*b1^2*b11*k1*k2^9*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4216*b1^2*b2*k1*k2^9*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b3*k1*k2^9*q^(-2 + \[Nu])*y)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1992*b1^2*b4*k1*k2^9*q^(-2 + \[Nu])*y)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (118*b1^2*b5*k1*k2^9*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b7*k1*k2^9*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (304*b1^2*b8*k1*k2^9*q^(-2 + \[Nu])*y)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (19812*b1^2*b9*k1*k2^9*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (62*b1^3*k2^11*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1^2*b11*k2^11*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (b1^2*b2*k2^11*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b3*k2^11*q^(-2 + \[Nu])*y)/
  (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (212*b1^2*b4*k2^11*q^(-2 + \[Nu])*y)/
  (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b7*k2^11*q^(-2 + \[Nu])*y)/
  (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b8*k2^11*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (74*b1^2*b9*k2^11*q^(-2 + \[Nu])*y)/
  (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k1^13*q^(-2 + \[Nu])*y)/(35*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*b4*k1^13*q^(-2 + \[Nu])*y)/
  (385*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^13*q^(-2 + \[Nu])*y)/
  (5*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b4*k1^11*k2*q^(-2 + \[Nu])*y)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b9*k1^11*k2*q^(-2 + \[Nu])*y)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (36*b1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (72*b1^2*b4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (36*b1^2*b9*k1^9*k2^3*q^(-2 + \[Nu])*y)/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b9*k1^7*k2^5*q^(-2 + \[Nu])*y)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b9*k1^5*k2^7*q^(-2 + \[Nu])*y)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (36*b1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (72*b1^2*b4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (36*b1^2*b9*k1^3*k2^9*q^(-2 + \[Nu])*y)/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b4*k1*k2^11*q^(-2 + \[Nu])*y)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b9*k1*k2^11*q^(-2 + \[Nu])*y)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k2^13*q^(-2 + \[Nu])*y)/(35*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*b4*k2^13*q^(-2 + \[Nu])*y)/
  (385*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k2^13*q^(-2 + \[Nu])*y)/
  (5*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (239*b1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b11*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10*b1^2*b2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2248*b1^2*b4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b7*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b8*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (308*b1^2*b9*k1^9*k3^2*q^(-2 + \[Nu])*y)/
  (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1963*b1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (4410*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (20*b1^2*b11*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (15394*b1^2*b2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1048*b1^2*b3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (61144*b1^2*b4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (472*b1^2*b5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b7*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1048*b1^2*b8*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (12548*b1^2*b9*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (29*b1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b11*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (5948*b1^2*b2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (656*b1^2*b3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16336*b1^2*b4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (472*b1^2*b5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b7*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (656*b1^2*b8*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10344*b1^2*b9*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (29*b1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b11*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (5948*b1^2*b2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (656*b1^2*b3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16336*b1^2*b4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (472*b1^2*b5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b7*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (656*b1^2*b8*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10344*b1^2*b9*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1963*b1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (4410*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (20*b1^2*b11*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (15394*b1^2*b2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1048*b1^2*b3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (61144*b1^2*b4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (472*b1^2*b5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b7*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1048*b1^2*b8*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (12548*b1^2*b9*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (239*b1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b11*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10*b1^2*b2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2248*b1^2*b4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b7*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b8*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (308*b1^2*b9*k2^9*k3^2*q^(-2 + \[Nu])*y)/
  (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (673*b1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b11*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3*b1^2*b2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (332*b1^2*b4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (693*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b7*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b8*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4178*b1^2*b9*k1^7*k3^4*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (22*b1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b11*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5424*b1^2*b2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (512*b1^2*b3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (101072*b1^2*b4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (236*b1^2*b5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (512*b1^2*b7*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (512*b1^2*b8*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9384*b1^2*b9*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
  (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (6733*b1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (144*b1^2*b11*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (62842*b1^2*b2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (558232*b1^2*b4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (472*b1^2*b5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b7*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (96*b1^2*b8*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (518996*b1^2*b9*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (22*b1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b11*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (5424*b1^2*b2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (512*b1^2*b3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (101072*b1^2*b4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (236*b1^2*b5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (512*b1^2*b7*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (512*b1^2*b8*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9384*b1^2*b9*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
  (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (673*b1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b11*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3*b1^2*b2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (332*b1^2*b4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (693*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b7*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b8*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4178*b1^2*b9*k2^7*k3^4*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (359*b1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24*b1^2*b11*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1208*b1^2*b4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b7*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b8*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (668*b1^2*b9*k1^5*k3^6*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1153*b1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (104*b1^2*b11*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9868*b1^2*b2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (688*b1^2*b3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (170392*b1^2*b4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (472*b1^2*b5*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (832*b1^2*b7*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (688*b1^2*b8*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (83452*b1^2*b9*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1153*b1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (104*b1^2*b11*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (9868*b1^2*b2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (688*b1^2*b3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (170392*b1^2*b4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (472*b1^2*b5*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (832*b1^2*b7*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (688*b1^2*b8*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (83452*b1^2*b9*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (359*b1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24*b1^2*b11*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1208*b1^2*b4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b7*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b8*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (668*b1^2*b9*k2^5*k3^6*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (103*b1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (20*b1^2*b11*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (11*b1^2*b2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (28*b1^2*b4*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b7*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (40*b1^2*b8*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3466*b1^2*b9*k1^3*k3^8*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4672*b1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (40*b1^2*b11*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (12056*b1^2*b2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (368*b1^2*b3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (93656*b1^2*b4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (118*b1^2*b5*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b7*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (368*b1^2*b8*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (194644*b1^2*b9*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (103*b1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (20*b1^2*b11*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (11*b1^2*b2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (28*b1^2*b4*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b7*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (40*b1^2*b8*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (3466*b1^2*b9*k2^3*k3^8*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (407*b1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
  (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b11*k1*k3^10*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2*b1^2*b2*k1*k3^10*q^(-2 + \[Nu])*y)/
  (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b3*k1*k3^10*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (88*b1^2*b4*k1*k3^10*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b7*k1*k3^10*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b8*k1*k3^10*q^(-2 + \[Nu])*y)/
  (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2572*b1^2*b9*k1*k3^10*q^(-2 + \[Nu])*y)/
  (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (407*b1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
  (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b11*k2*k3^10*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2*b1^2*b2*k2*k3^10*q^(-2 + \[Nu])*y)/
  (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b3*k2*k3^10*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (88*b1^2*b4*k2*k3^10*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b7*k2*k3^10*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (8*b1^2*b8*k2*k3^10*q^(-2 + \[Nu])*y)/
  (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2572*b1^2*b9*k2*k3^10*q^(-2 + \[Nu])*y)/
  (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (19*b1^3*k3^12*q^(-2 + \[Nu])*y)/(126*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b2*k3^12*q^(-2 + \[Nu])*y)/
  (21*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^2*b4*k3^12*q^(-2 + \[Nu])*y)/
  (99*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (14*b1^2*b9*k3^12*q^(-2 + \[Nu])*y)/
  (9*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (10*b1^3*k1*q^\[Nu]*y)/(63*k2) - (18*b1^2*b11*k1*q^\[Nu]*y)/(7*k2) + 
 (10*b1^2*b3*k1*q^\[Nu]*y)/(63*k2) - (20*b1^2*b4*k1*q^\[Nu]*y)/(63*k2) - 
 (20*b1^2*b7*k1*q^\[Nu]*y)/(63*k2) + (22*b1^2*b8*k1*q^\[Nu]*y)/(21*k2) - 
 (86*b1^2*b9*k1*q^\[Nu]*y)/(63*k2) + (10*b1^3*k2*q^\[Nu]*y)/(63*k1) - 
 (18*b1^2*b11*k2*q^\[Nu]*y)/(7*k1) + (10*b1^2*b3*k2*q^\[Nu]*y)/(63*k1) - 
 (20*b1^2*b4*k2*q^\[Nu]*y)/(63*k1) - (20*b1^2*b7*k2*q^\[Nu]*y)/(63*k1) + 
 (22*b1^2*b8*k2*q^\[Nu]*y)/(21*k1) - (86*b1^2*b9*k2*q^\[Nu]*y)/(63*k1) + 
 (2*b1^3*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (5*b1^2*b11*k1^3*q^\[Nu]*y)/
  (7*k2*k3^2) + (2*b1^2*b3*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - 
 (4*b1^2*b4*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1^2*b7*k1^3*q^\[Nu]*y)/
  (63*k2*k3^2) + (10*b1^2*b8*k1^3*q^\[Nu]*y)/(21*k2*k3^2) - 
 (34*b1^2*b9*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1^3*k1*k2*q^\[Nu]*y)/
  (63*k3^2) + (10*b1^2*b11*k1*k2*q^\[Nu]*y)/(7*k3^2) - 
 (4*b1^2*b3*k1*k2*q^\[Nu]*y)/(63*k3^2) + (8*b1^2*b4*k1*k2*q^\[Nu]*y)/
  (63*k3^2) + (8*b1^2*b7*k1*k2*q^\[Nu]*y)/(63*k3^2) - 
 (20*b1^2*b8*k1*k2*q^\[Nu]*y)/(21*k3^2) + (68*b1^2*b9*k1*k2*q^\[Nu]*y)/
  (63*k3^2) + (2*b1^3*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
 (5*b1^2*b11*k2^3*q^\[Nu]*y)/(7*k1*k3^2) + (2*b1^2*b3*k2^3*q^\[Nu]*y)/
  (63*k1*k3^2) - (4*b1^2*b4*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
 (4*b1^2*b7*k2^3*q^\[Nu]*y)/(63*k1*k3^2) + (10*b1^2*b8*k2^3*q^\[Nu]*y)/
  (21*k1*k3^2) - (34*b1^2*b9*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
 (4*b1^3*k3^2*q^\[Nu]*y)/(21*k1*k2) + (23*b1^2*b11*k3^2*q^\[Nu]*y)/
  (7*k1*k2) - (4*b1^2*b3*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
 (8*b1^2*b4*k3^2*q^\[Nu]*y)/(21*k1*k2) + (8*b1^2*b7*k3^2*q^\[Nu]*y)/
  (21*k1*k2) - (32*b1^2*b8*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
 (40*b1^2*b9*k3^2*q^\[Nu]*y)/(21*k1*k2) - (88*b1^3*k1^10*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (216*b1^2*b11*k1^10*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (48*b1^2*b2*k1^10*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (184*b1^2*b3*k1^10*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8192*b1^2*b4*k1^10*q^(-2 + \[Nu])*y^2)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (176*b1^2*b7*k1^10*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (184*b1^2*b8*k1^10*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (13936*b1^2*b9*k1^10*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (88*b1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (648*b1^2*b11*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (144*b1^2*b2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (184*b1^2*b3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (24576*b1^2*b4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (176*b1^2*b7*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (552*b1^2*b8*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (41808*b1^2*b9*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (176*b1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (432*b1^2*b11*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (96*b1^2*b2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (368*b1^2*b3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16384*b1^2*b4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (352*b1^2*b7*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (368*b1^2*b8*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (27872*b1^2*b9*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (176*b1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (432*b1^2*b11*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (96*b1^2*b2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (368*b1^2*b3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16384*b1^2*b4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (352*b1^2*b7*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (368*b1^2*b8*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (27872*b1^2*b9*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (88*b1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (648*b1^2*b11*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (144*b1^2*b2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (184*b1^2*b3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (24576*b1^2*b4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (176*b1^2*b7*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (552*b1^2*b8*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (41808*b1^2*b9*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (88*b1^3*k2^10*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (216*b1^2*b11*k2^10*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (48*b1^2*b2*k2^10*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (184*b1^2*b3*k2^10*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8192*b1^2*b4*k2^10*q^(-2 + \[Nu])*y^2)/
  (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (176*b1^2*b7*k2^10*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (184*b1^2*b8*k2^10*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (13936*b1^2*b9*k2^10*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k1^12*q^(-2 + \[Nu])*y^2)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*b4*k1^12*q^(-2 + \[Nu])*y^2)/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k1^12*q^(-2 + \[Nu])*y^2)/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24*b1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (48*b1^2*b4*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (24*b1^2*b9*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (12*b1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24*b1^2*b4*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (12*b1^2*b9*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16*b1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b4*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b9*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (12*b1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
  (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24*b1^2*b4*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
  (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (12*b1^2*b9*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
  (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (24*b1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
  (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (48*b1^2*b4*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (24*b1^2*b9*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4*b1^3*k2^12*q^(-2 + \[Nu])*y^2)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
    2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
    k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*b4*k2^12*q^(-2 + \[Nu])*y^2)/
  (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (4*b1^2*b9*k2^12*q^(-2 + \[Nu])*y^2)/
  (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (516*b1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (288*b1^2*b11*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (104*b1^2*b2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1072*b1^2*b3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (148256*b1^2*b4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (704*b1^2*b7*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1072*b1^2*b8*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (346096*b1^2*b9*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (80*b1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (96*b1^2*b2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (7424*b1^2*b4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
  (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b8*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (26752*b1^2*b9*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2504*b1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (576*b1^2*b11*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1136*b1^2*b2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (15296*b1^2*b4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1408*b1^2*b7*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b8*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (431392*b1^2*b9*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (80*b1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (96*b1^2*b2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
  (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (7424*b1^2*b4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
  (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b8*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (26752*b1^2*b9*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (516*b1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (288*b1^2*b11*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (104*b1^2*b2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1072*b1^2*b3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (148256*b1^2*b4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (704*b1^2*b7*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1072*b1^2*b8*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (346096*b1^2*b9*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (752*b1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (144*b1^2*b11*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (256*b1^2*b2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1504*b1^2*b4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (352*b1^2*b7*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (80*b1^2*b8*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (120112*b1^2*b9*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (176*b1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (144*b1^2*b11*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (48*b1^2*b3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (60832*b1^2*b4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (352*b1^2*b7*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (144*b1^2*b8*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (125264*b1^2*b9*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (176*b1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (144*b1^2*b11*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (48*b1^2*b3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (60832*b1^2*b4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (352*b1^2*b7*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (144*b1^2*b8*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (125264*b1^2*b9*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (752*b1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (144*b1^2*b11*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (256*b1^2*b2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1504*b1^2*b4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (352*b1^2*b7*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (80*b1^2*b8*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (120112*b1^2*b9*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (404*b1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (288*b1^2*b11*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (48*b1^2*b2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (130952*b1^2*b4*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (704*b1^2*b7*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (320*b1^2*b8*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (284188*b1^2*b9*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (4552*b1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (576*b1^2*b11*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (544*b1^2*b2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2816*b1^2*b3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (34256*b1^2*b4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1408*b1^2*b7*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2816*b1^2*b8*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (196264*b1^2*b9*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
  (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (404*b1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (288*b1^2*b11*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (48*b1^2*b2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (64*b1^2*b3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (130952*b1^2*b4*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (704*b1^2*b7*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (320*b1^2*b8*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (284188*b1^2*b9*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1192*b1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (72*b1^2*b11*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (208*b1^2*b2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (632*b1^2*b3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (81248*b1^2*b4*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (176*b1^2*b7*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (632*b1^2*b8*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (245536*b1^2*b9*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1192*b1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (72*b1^2*b11*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (208*b1^2*b2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (632*b1^2*b3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (81248*b1^2*b4*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (176*b1^2*b7*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (632*b1^2*b8*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (245536*b1^2*b9*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
  (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (12*b1^3*k3^10*q^(-2 + \[Nu])*y^2)/
  (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (8*b1^2*b2*k3^10*q^(-2 + \[Nu])*y^2)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b3*k3^10*q^(-2 + \[Nu])*y^2)/
  (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (656*b1^2*b4*k3^10*q^(-2 + \[Nu])*y^2)/
  (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (16*b1^2*b8*k3^10*q^(-2 + \[Nu])*y^2)/
  (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (472*b1^2*b9*k3^10*q^(-2 + \[Nu])*y^2)/
  (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (16*b1^3*q^\[Nu]*y^2)/315 - (24*b1^2*b11*q^\[Nu]*y^2)/35 - 
 (64*b1^2*b2*q^\[Nu]*y^2)/735 + (16*b1^2*b3*q^\[Nu]*y^2)/315 - 
 (32*b1^2*b4*q^\[Nu]*y^2)/2205 - (32*b1^2*b7*q^\[Nu]*y^2)/2205 + 
 (16*b1^2*b8*q^\[Nu]*y^2)/21 - (208*b1^2*b9*q^\[Nu]*y^2)/441 - 
 (192*b1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (288*b1^2*b2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (608*b1^2*b4*k1^9*k2*q^(-2 + \[Nu])*y^3)/
  (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (96*b1^2*b8*k1^9*k2*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (11024*b1^2*b9*k1^9*k2*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (768*b1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1152*b1^2*b2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2432*b1^2*b4*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
  (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b8*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44096*b1^2*b9*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1152*b1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (1728*b1^2*b2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (192*b1^2*b3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (3648*b1^2*b4*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
  (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (576*b1^2*b8*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (66144*b1^2*b9*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (768*b1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1152*b1^2*b2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2432*b1^2*b4*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
  (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b8*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44096*b1^2*b9*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (192*b1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (288*b1^2*b2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (32*b1^2*b3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (608*b1^2*b4*k1*k2^9*q^(-2 + \[Nu])*y^3)/
  (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (96*b1^2*b8*k1*k2^9*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (11024*b1^2*b9*k1*k2^9*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (256*b1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (384*b1^2*b2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2432*b1^2*b4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b8*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44096*b1^2*b9*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (256*b1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2432*b1^2*b4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b8*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (44096*b1^2*b9*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (256*b1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2432*b1^2*b4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b8*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (44096*b1^2*b9*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (256*b1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (384*b1^2*b2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2432*b1^2*b4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b8*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44096*b1^2*b9*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (192*b1^2*b2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1216*b1^2*b4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b8*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (22048*b1^2*b9*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (768*b1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1152*b1^2*b2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^2*b3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (2432*b1^2*b4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
  (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b8*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (44096*b1^2*b9*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (128*b1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (192*b1^2*b2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (1216*b1^2*b4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^2*b8*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (22048*b1^2*b9*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (256*b1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2432*b1^2*b4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b8*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (44096*b1^2*b9*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (256*b1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (384*b1^2*b2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (2432*b1^2*b4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (128*b1^2*b8*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (44096*b1^2*b9*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (64*b1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
  (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (96*b1^2*b2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
  (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b3*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
  (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (608*b1^2*b4*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
  (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (32*b1^2*b8*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
  (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
 (11024*b1^2*b9*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
  (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
   (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
 (y*((4*b1*f1^5*k1^11*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^5*k1^9*k2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k1^9*k3^2*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^5*k1^7*k3^4*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^5*k1^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/
  11 + (y*((4*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^5*k1*k2^9*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^5*k2^11*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k2^9*k3^2*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^5*k2^7*k3^4*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^5*k2^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*
      y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/
  11 + ((128*b1*f1^4*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^4*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (194*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^4*k1^14*q^(-2 + \[Nu]))/
    (7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (138*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^11*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (24*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (92*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/9 + 
 (1/99 + (8*y^2)/99)*((128*f1^5*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34*b1*f1^5*k1^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*f1^5*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/(15*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (26*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (194*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (34*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^5*k1^14*q^(-2 + \[Nu]))/
    (7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1^10*k2^2*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/(5*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (22*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^5*k1^10*k3^2*q^(-2 + \[Nu]))/(7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (138*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (38*b1*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^5*k1^8*k3^4*q^(-2 + \[Nu]))/(7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (18*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^6*k3^6*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*f1^5*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (68*b1*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*f1^5*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^5*k2^7*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*f1^5*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (92*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^10*q^(-2 + \[Nu])*y^2)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 (y*((92*b1*f1^4*k1^11*q^(-2 + \[Nu]))/(15*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1^2*f1^4*k1^11*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1*f1^5*k1^11*q^(-2 + \[Nu]))/(6*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (324*b1*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (50*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^9*k2*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (272*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (356*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (62*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1364*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (22*b1*f1^4*k1^13*q^(-2 + \[Nu]))/
     (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (18*b1*f1^4*k1^11*k2*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (18*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/(15*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1^2*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^9*k3^2*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (956*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (212*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (92*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1516*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (50*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (88*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
     (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1*f1^5*k1^7*k3^4*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (68*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (56*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^5*k3^6*q^(-2 + \[Nu]))/(k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^5*k1^3*k3^8*q^(-2 + \[Nu]))/
     (2*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (106*b1*f1^4*k1^10*q^(-2 + \[Nu])*y)/(15*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1^2*f1^4*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (86*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (506*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1798*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*f1^4*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (80*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (598*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (676*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (362*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (194*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (96*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (576*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (96*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/9 + 
 (y*((1364*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (356*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (62*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (272*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (324*b1*f1^4*k1*k2^9*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (50*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1*k2^9*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (92*b1*f1^4*k2^11*q^(-2 + \[Nu]))/
     (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^4*k2^11*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^5*k2^11*q^(-2 + \[Nu]))/
     (6*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (18*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (18*b1*f1^4*k1*k2^11*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (22*b1*f1^4*k2^13*q^(-2 + \[Nu]))/
     (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1516*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (50*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (212*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (92*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (956*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/(15*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1^2*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k2^9*k3^2*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (56*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (88*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
     (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1*f1^5*k2^7*k3^4*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k2^5*k3^6*q^(-2 + \[Nu]))/(k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^5*k2^3*k3^8*q^(-2 + \[Nu]))/(2*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (1798*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (506*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (86*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (106*b1*f1^4*k2^10*q^(-2 + \[Nu])*y)/(15*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1^2*f1^4*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k2^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (44*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*f1^4*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (362*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*
      y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (676*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (598*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (194*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^5*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^5*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (96*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (576*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (96*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/9 + 
 ((194*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*f1^4*k2^10*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1^2*f1^4*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^4*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k2^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^4*k2^14*q^(-2 + \[Nu]))/
    (7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (138*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k2^13*q^(-2 + \[Nu])*y)/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (92*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*
     y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/9 + 
 (1/99 + (8*y^2)/99)*((194*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/(15*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (26*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k2^10*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (34*b1*f1^5*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*f1^5*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1^2*k2^10*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^5*k2^12*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k2^14*q^(-2 + \[Nu]))/(7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (86*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (138*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/(5*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (22*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^5*k2^10*k3^2*q^(-2 + \[Nu]))/(7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (18*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (38*b1*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^5*k2^8*k3^4*q^(-2 + \[Nu]))/(7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k2^6*k3^6*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (232*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (68*b1*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*f1^5*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^3*k2^9*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*f1^5*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (92*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*f1^5*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k2^10*q^(-2 + \[Nu])*y^2)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 ((4*f1^6*k1^11*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^6*k1^9*k2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1^7*k2^3*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^9*k3^2*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*f1^6*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1^7*k3^4*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^6*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*f1^6*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  ((3*y)/143 + (8*y^3)/143) + 
 ((4*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^6*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1*k2^9*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^6*k2^11*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^6*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k2^9*k3^2*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^6*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k2^7*k3^4*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*f1^6*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^6*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k2^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  ((3*y)/143 + (8*y^3)/143) + 
 ((92*f1^5*k1^11*q^(-2 + \[Nu]))/(15*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*f1^5*k1^11*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^6*k1^11*q^(-2 + \[Nu]))/(6*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (324*f1^5*k1^9*k2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (134*b1*f1^5*k1^9*k2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^9*k2*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (272*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*f1^6*k1^7*k2^3*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (356*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (218*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1364*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (110*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^6*k1^3*k2^7*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (22*f1^5*k1^13*q^(-2 + \[Nu]))/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*f1^5*k1^11*k2*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^5*k1^9*k2^3*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1^7*k2^5*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (18*f1^5*k1^5*k2^7*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*f1^5*k1^3*k2^9*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*f1^5*k1^9*k3^2*q^(-2 + \[Nu]))/
    (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^5*k1^9*k3^2*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^9*k3^2*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (956*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (242*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (212*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1516*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*f1^5*k1^7*k3^4*q^(-2 + \[Nu]))/(15*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*f1^5*k1^7*k3^4*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*f1^6*k1^7*k3^4*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (68*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*f1^6*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*f1^5*k1^5*k3^6*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^6*k1^5*k3^6*q^(-2 + \[Nu]))/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^3*k3^8*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^6*k1^3*k3^8*q^(-2 + \[Nu]))/
    (2*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (106*f1^5*k1^10*q^(-2 + \[Nu])*y)/(15*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*f1^5*k1^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (86*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (84*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (506*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1798*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (220*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^5*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (80*f1^5*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*f1^5*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*f1^5*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^5*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (676*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (362*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^5*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*f1^5*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*f1^5*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (y/33 + (2*y^3)/33) + 
 ((1364*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (110*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^6*k1^7*k2^3*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (356*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (218*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (272*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*f1^6*k1^3*k2^7*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (324*f1^5*k1*k2^9*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (134*b1*f1^5*k1*k2^9*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1*k2^9*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (92*f1^5*k2^11*q^(-2 + \[Nu]))/
    (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^5*k2^11*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (f1^6*k2^11*q^(-2 + \[Nu]))/
    (6*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*f1^5*k1^9*k2^3*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (18*f1^5*k1^7*k2^5*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1^5*k2^7*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^5*k1^3*k2^9*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*f1^5*k1*k2^11*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (22*f1^5*k2^13*q^(-2 + \[Nu]))/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1516*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (212*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (956*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (242*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k2^9*k3^2*q^(-2 + \[Nu]))/(15*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1*f1^5*k2^9*k3^2*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k2^9*k3^2*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (56*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*f1^6*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*f1^5*k2^7*k3^4*q^(-2 + \[Nu]))/(15*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*f1^5*k2^7*k3^4*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*f1^6*k2^7*k3^4*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*f1^5*k2^5*k3^6*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^6*k2^5*k3^6*q^(-2 + \[Nu]))/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k2^3*k3^8*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^6*k2^3*k3^8*q^(-2 + \[Nu]))/
    (2*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1798*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (220*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (506*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (86*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (84*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (106*f1^5*k2^10*q^(-2 + \[Nu])*y)/(15*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*f1^5*k2^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k2^10*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (44*f1^5*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*f1^5*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*f1^5*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*f1^5*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^5*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (362*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (676*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^5*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*f1^5*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*f1^5*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (y/33 + (2*y^3)/33) + 
 ((54169*b1*f1^3*k1^10*q^(-2 + \[Nu]))/(20580*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (46*b1^2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1*b2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*b1*f1^4*k1^10*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^4*k1^10*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (691*b1*f1^3*k1^12*q^(-2 + \[Nu]))/(420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (13*b1*f1^4*k1^12*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (397*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (899*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54169*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1061*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (691*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (166*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (79*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^14*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1*f1^3*k1^16*q^(-2 + \[Nu]))/
    (28*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1*f1^3*k1^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (9*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^12*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (23*b1*f1^3*k1^14*q^(-2 + \[Nu]))/
    (105*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^14*q^(-2 + \[Nu]))/(7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^4*k1^14*q^(-2 + \[Nu]))/
    (28*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (101*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (101*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (796*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (101*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (191*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (23*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5696*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/(2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (988*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5696*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10657*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (257*b1*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10657*b1*f1^3*k1^4*k2^2*k3^4*
     q^(-2 + \[Nu]))/(20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (263*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (257*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (446*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (181*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*b1*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59*b1*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/(28*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (28*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^4*k1^4*k3^8*q^(-2 + \[Nu]))/
    (28*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k1^2*k3^10*q^(-2 + \[Nu]))/(7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (103*b1*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^11*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (41486*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2745*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32078*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (323*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^3*k1^15*q^(-2 + \[Nu])*y)/(14*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (9*b1*f1^3*k1^13*k2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^3*k1^13*q^(-2 + \[Nu])*y)/(3*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^3*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (484*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (564*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (356*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13060*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (652*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10708*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1492*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (156*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (799*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (953*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (607*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1*f1^4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (242*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7472*b1*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (232*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7472*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (87904*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9472*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/7 + 
 (1/63 + (2*y^2)/21)*((54169*f1^4*k1^10*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2644*b1*f1^4*k1^10*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1^2*f1^4*k1^10*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b5*f1^4*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*f1^5*k1^10*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*b1*f1^5*k1^10*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (691*f1^4*k1^12*q^(-2 + \[Nu]))/(420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^4*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (13*f1^5*k1^12*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3176*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (190*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (397*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (808*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (899*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (55*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54169*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (836*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1061*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (691*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1196*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (79*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^14*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k1^16*q^(-2 + \[Nu]))/
    (28*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*f1^4*k1^12*k2^2*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^10*k2^4*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^8*k2^6*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (27*f1^4*k1^6*k2^8*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^4*k2^10*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k1^2*k2^12*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*f1^4*k1^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (79*b1*f1^4*k1^12*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^12*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (23*f1^4*k1^14*q^(-2 + \[Nu]))/
    (105*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^14*q^(-2 + \[Nu]))/(7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^5*k1^14*q^(-2 + \[Nu]))/
    (28*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (101*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^10*k2^2*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (796*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (101*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (324*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (26*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (641*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (23*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (409*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k1^2*k2^10*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5696*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (116*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/(35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^10*k3^2*q^(-2 + \[Nu]))/(2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (988*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2218*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (98*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b5*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5696*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (362*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (186*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10657*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (516*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/(70*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (35*b1*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (257*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/(420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*b1*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k1^8*k3^4*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10657*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (268*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (263*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (257*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (181*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (35*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (235*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59*f1^5*k1^6*k3^6*q^(-2 + \[Nu]))/(84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/(28*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^2*k3^8*q^(-2 + \[Nu]))/(28*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^5*k1^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*f1^4*k1^4*k3^8*q^(-2 + \[Nu]))/(28*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b2*f1^4*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^5*k1^4*k3^8*q^(-2 + \[Nu]))/(28*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^5*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (103*f1^4*k1^11*q^(-2 + \[Nu])*y)/(42*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*b1*f1^4*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^11*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*f1^5*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41486*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b5*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2745*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (904*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (260*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32078*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (323*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (324*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^4*k1^15*q^(-2 + \[Nu])*y)/(14*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (9*f1^4*k1^13*k2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*f1^4*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30*f1^4*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*f1^4*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*f1^4*k1^5*k2^9*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^4*k1^13*q^(-2 + \[Nu])*y)/(3*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^4*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (794*b1*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^5*k1^11*k2*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (236*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^9*k2^3*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (484*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2364*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^7*k2^5*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (18*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1956*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^5*k1^5*k2^7*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (794*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^3*k2^9*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^9*k3^2*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13060*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (112*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10708*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4124*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (799*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^7*k3^4*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (953*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3208*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (607*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (804*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*f1^4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*f1^5*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (242*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^4*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^3*k3^8*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (7472*f1^4*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^10*q^(-2 + \[Nu])*y^2)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3888*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (544*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1424*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7472*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*f1^4*k1^12*q^(-2 + \[Nu])*y^2)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (87904*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9472*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 ((-691*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (166*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (79*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54169*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1061*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (899*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (397*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54169*b1*f1^3*k2^10*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1^2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k2^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1*b2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*b1*f1^4*k2^10*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^4*k2^10*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (691*b1*f1^3*k2^12*q^(-2 + \[Nu]))/(420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (13*b1*f1^4*k2^12*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k2^14*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1*f1^3*k2^16*q^(-2 + \[Nu]))/
    (28*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (26*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (191*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (101*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (796*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (101*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (101*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1*f1^3*k2^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (9*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k2^12*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (23*b1*f1^3*k2^14*q^(-2 + \[Nu]))/
    (105*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k2^14*q^(-2 + \[Nu]))/(7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^4*k2^14*q^(-2 + \[Nu]))/
    (28*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5696*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (988*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5696*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/(2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (257*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (446*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (181*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10657*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (263*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10657*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (257*b1*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*b1*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59*b1*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/(28*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (28*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^4*k2^4*k3^8*q^(-2 + \[Nu]))/
    (28*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k2^2*k3^10*q^(-2 + \[Nu]))/(7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (323*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32078*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2745*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41486*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (103*b1*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*f1^3*k1*k2^13*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^3*k2^15*q^(-2 + \[Nu])*y)/(14*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (356*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (484*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (564*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^3*k2^13*q^(-2 + \[Nu])*y)/(3*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^3*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k2^13*q^(-2 + \[Nu])*y)/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (52*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*
     y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (156*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10708*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1492*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13060*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (652*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (607*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (953*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (799*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (242*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1*f1^4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7472*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (232*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7472*b1*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (87904*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9472*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/7 + 
 (1/63 + (2*y^2)/21)*((-691*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1196*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (79*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54169*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (836*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1061*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (808*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (899*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (55*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9301*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3176*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (190*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (397*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54169*f1^4*k2^10*q^(-2 + \[Nu]))/(20580*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2644*b1*f1^4*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*f1^4*k2^10*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k2^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b5*f1^4*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*f1^5*k2^10*q^(-2 + \[Nu]))/(420*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*b1*f1^5*k2^10*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (691*f1^4*k2^12*q^(-2 + \[Nu]))/(420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^4*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (13*f1^5*k2^12*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^4*k1^12*k2^2*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^10*k2^4*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*f1^4*k1^8*k2^6*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^6*k2^8*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^4*k2^10*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (27*f1^4*k1^2*k2^12*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k2^14*q^(-2 + \[Nu]))/(28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k2^16*q^(-2 + \[Nu]))/
    (28*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (409*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k1^10*k2^2*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (26*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (641*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/(2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (101*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (324*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (796*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (101*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^2*k2^10*q^(-2 + \[Nu]))/(28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (26*f1^4*k2^12*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (79*b1*f1^4*k2^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (f1^5*k2^12*q^(-2 + \[Nu]))/
    (2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23*f1^4*k2^14*q^(-2 + \[Nu]))/(105*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^4*k2^14*q^(-2 + \[Nu]))/
    (7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k2^14*q^(-2 + \[Nu]))/(28*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (78*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (186*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5696*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (362*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (988*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2218*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (98*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b5*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5696*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (116*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (78*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/(35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k2^10*k3^2*q^(-2 + \[Nu]))/(2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (257*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (181*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (35*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10657*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (268*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (46*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (263*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10657*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (516*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/(70*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (35*b1*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (257*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/(420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*b1*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k2^8*k3^4*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (235*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59*f1^5*k2^6*k3^6*q^(-2 + \[Nu]))/(84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k2^2*k3^8*q^(-2 + \[Nu]))/(28*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^5*k2^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*f1^4*k2^4*k3^8*q^(-2 + \[Nu]))/(28*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b2*f1^4*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^5*k2^4*k3^8*q^(-2 + \[Nu]))/(28*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^5*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (323*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (324*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32078*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2745*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (904*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (260*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41486*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b5*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (103*f1^4*k2^11*q^(-2 + \[Nu])*y)/(42*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*b1*f1^4*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*f1^5*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^4*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*f1^4*k1^9*k2^5*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (45*f1^4*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30*f1^4*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*f1^4*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*f1^4*k1*k2^13*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k2^15*q^(-2 + \[Nu])*y)/
    (14*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (794*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^5*k1^9*k2^3*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (18*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1956*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^5*k1^7*k2^5*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (484*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2364*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^5*k2^7*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (236*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^3*k2^9*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (794*b1*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^5*k1*k2^11*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*f1^4*k2^13*q^(-2 + \[Nu])*y)/
    (3*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k2^13*q^(-2 + \[Nu])*y)/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (f1^5*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10708*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4124*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13060*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (112*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (76*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k2^9*k3^2*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (607*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (804*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (953*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3208*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (799*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k2^7*k3^4*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (242*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*f1^4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*f1^5*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^4*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k2^3*k3^8*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (7472*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1424*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3888*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (544*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7472*f1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k2^10*q^(-2 + \[Nu])*y^2)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (36*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*f1^4*k2^12*q^(-2 + \[Nu])*y^2)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10992*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*
     y^2)/(1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (87904*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10992*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7456*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9472*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 (y*((-253*b1*f1^3*k1^11*q^(-2 + \[Nu]))/(30*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (45*b1^2*f1^3*k1^11*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k1^11*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*b2*f1^3*k1^11*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (29*b1*f1^4*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^4*k1^11*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (168113*b1*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (133*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (233*b1*f1^4*k1^9*k2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (7*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (117*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (838*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (146*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (117*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (734*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (58*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (230*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (168113*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (851*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (157*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (253*b1*f1^3*k1*k2^9*q^(-2 + \[Nu]))/(30*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (503*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (43*b1*f1^4*k1*k2^9*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1*f1^3*k1^15*q^(-2 + \[Nu]))/(7*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (15*b1*f1^3*k1^13*k2*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1*f1^3*k1*k2^13*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*f1^3*k1^13*q^(-2 + \[Nu]))/
     (21*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (169*b1^2*f1^3*k1^13*q^(-2 + \[Nu]))/(35*k2*k3^2*
      (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^4*k1^13*q^(-2 + \[Nu]))/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (556*b1*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (186*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^4*k1^11*k2*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (286*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
     (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3112*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (124*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (286*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (471*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (556*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
     (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (177*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^4*k1*k2^11*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (1268*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (194*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
     (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15256*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8152*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (324*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (172*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15256*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1264*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (50*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (352*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1268*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1234*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (118*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (458*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2162*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
     (5*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14*b1^2*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47458*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (186*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (34*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (262*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47458*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (934*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (438*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (56*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (458*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2018*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (274*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1249*b1^2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (11*b1*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (856*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (94*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (977*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (85*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (293*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1^2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13*b1*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/(k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (293*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1^2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^3*k1*k3^10*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^4*k1*k3^10*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^3*k1*q^\[Nu])/k2 + 
    (b1*b2*f1^3*k1*q^\[Nu])/k2 + (b1*b5*f1^3*k1*q^\[Nu])/k2 - 
    (361*b1*f1^3*k1^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (116*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (208*b1*f1^4*k1^10*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1^2*f1^4*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (42332*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1226*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (68*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (23018*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2018*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192844*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (306*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (297*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (358*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (304*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1*f1^3*k1^14*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (36*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (90*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (120*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (90*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (36*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^3*k1^12*q^(-2 + \[Nu])*y)/(3*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (314*b1^2*f1^3*k1^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (72*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (494*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (368*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (204*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1072*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (916*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (814*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (282*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (752*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (184*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (53932*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (574*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (56*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (328*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (26*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (49228*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (324*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (232*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (92*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (678*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (308*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (230936*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (222*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (344*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (176*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1628*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2038*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (494*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (212*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (92*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (164*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (116*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (65*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52208*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (176*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14064*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (144*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14064*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (528*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52208*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (496*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58224*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (110624*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58224*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (126832*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (126832*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1384*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26048*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4736*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26048*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/7 + 
 (y/21 + (4*y^3)/63)*((-253*f1^4*k1^11*q^(-2 + \[Nu]))/
    (30*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45*b1*f1^4*k1^11*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1^2*f1^4*k1^11*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1^11*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (29*f1^5*k1^11*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^5*k1^11*q^(-2 + \[Nu]))/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (168113*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5003*b1*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (60*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (102*b2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b5*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (233*f1^5*k1^9*k2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^5*k1^9*k2*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (117*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/(343*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5818*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (382*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (32*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (117*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/(343*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5822*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (418*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (230*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (168113*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (277*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (102*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (157*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (253*f1^4*k1*k2^9*q^(-2 + \[Nu]))/(30*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (305*b1*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*f1^5*k1*k2^9*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^5*k1*k2^9*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^4*k1^15*q^(-2 + \[Nu]))/(7*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^13*k2*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*f1^4*k1^11*k2^3*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^9*k2^5*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^7*k2^7*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (27*f1^4*k1^5*k2^9*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^3*k2^11*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k1*k2^13*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k1^13*q^(-2 + \[Nu]))/(21*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (169*b1*f1^4*k1^13*q^(-2 + \[Nu]))/
    (35*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k1^13*q^(-2 + \[Nu]))/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (556*f1^4*k1^11*k2*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (314*b1*f1^4*k1^11*k2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^11*k2*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (286*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (107*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^9*k2^3*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3112*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*f1^5*k1^7*k2^5*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (286*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (671*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^5*k2^7*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (556*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1158*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^3*k2^9*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*f1^4*k1*k2^11*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (677*b1*f1^4*k1*k2^11*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k1*k2^11*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1268*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (194*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b2*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*f1^5*k1^9*k3^2*q^(-2 + \[Nu]))/(35*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^5*k1^9*k3^2*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15256*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (112*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (692*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b5*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8152*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (566*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (324*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15256*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (248*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (156*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (692*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1268*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1574*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (458*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2162*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*f1^5*k1^7*k3^4*q^(-2 + \[Nu]))/(5*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (14*b1*f1^5*k1^7*k3^4*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47458*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1058*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (584*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b5*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (262*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (91*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47458*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1006*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (584*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b5*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (438*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (458*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2402*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (274*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/(15*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1249*b1*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*b2*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^5*k1^5*k3^6*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^5*k1^5*k3^6*q^(-2 + \[Nu]))/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (856*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (478*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1957*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (85*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (293*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/(210*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*b1*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b2*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*f1^5*k1^3*k3^8*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^5*k1^3*k3^8*q^(-2 + \[Nu]))/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (293*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*f1^5*k1*k2*k3^8*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1*f1^5*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^4*k1*k3^10*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b2*f1^4*k1*k3^10*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k1*k3^10*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k1*q^\[Nu])/k2 + 
   (b2*f1^4*k1*q^\[Nu])/k2 + (b5*f1^4*k1*q^\[Nu])/k2 - 
   (361*f1^4*k1^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (116*b1*f1^4*k1^10*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k1^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*f1^5*k1^10*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^5*k1^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42332*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1334*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b5*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23018*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1382*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (412*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192844*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (424*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (297*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1934*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^4*k1^14*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (36*f1^4*k1^12*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*f1^4*k1^10*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (120*f1^4*k1^8*k2^6*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*f1^4*k1^6*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^4*k1^4*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^4*k1^2*k2^12*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1^12*q^(-2 + \[Nu])*y)/(3*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (314*b1*f1^4*k1^12*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (72*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (506*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^5*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (372*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^8*k2^4*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1072*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3716*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^6*k2^6*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (24*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3214*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^5*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1282*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (752*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b2*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (53932*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (222*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b5*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (328*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (49228*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8788*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (232*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2678*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b2*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^5*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (230936*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6406*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (344*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1628*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5114*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (494*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b2*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*f1^5*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^5*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (92*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52208*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14064*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14064*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2192*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52208*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (528*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^4*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (496*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58224*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110624*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58224*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (126832*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (126832*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1384*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26048*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26048*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7104*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 (y*((-253*b1*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (30*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (503*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (43*b1*f1^4*k1^9*k2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (168113*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (851*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (157*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (117*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (734*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (58*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (230*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (117*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (838*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (146*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (168113*b1*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (133*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (233*b1*f1^4*k1*k2^9*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (7*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (253*b1*f1^3*k2^11*q^(-2 + \[Nu]))/(30*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (45*b1^2*f1^3*k2^11*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k2^11*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*b2*f1^3*k2^11*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (29*b1*f1^4*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^4*k2^11*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1*f1^3*k1^13*k2*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (15*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1*f1^3*k1*k2^13*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1*f1^3*k2^15*q^(-2 + \[Nu]))/
     (7*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*f1^3*k1^11*k2*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (177*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^4*k1^11*k2*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (556*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (286*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (471*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3112*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (124*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (286*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
     (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (556*b1*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (186*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*f1^4*k1*k2^11*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*f1^3*k2^13*q^(-2 + \[Nu]))/
     (21*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (169*b1^2*f1^3*k2^13*q^(-2 + \[Nu]))/(35*k1*k3^2*
      (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^4*k2^13*q^(-2 + \[Nu]))/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (1268*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1234*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (118*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15256*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1264*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (50*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (352*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8152*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (324*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (172*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15256*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1268*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (194*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
     (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (458*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2018*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (274*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47458*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (934*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (438*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (56*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47458*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (186*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (34*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (262*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (458*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2162*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
     (5*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14*b1^2*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (977*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (85*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (856*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (94*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1249*b1^2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (11*b1*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (293*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1^2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (293*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15*b1^2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13*b1*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/(k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^4*k2*k3^10*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^3*k2*q^\[Nu])/k1 + 
    (b1*b2*f1^3*k2*q^\[Nu])/k1 + (b1*b5*f1^3*k2*q^\[Nu])/k1 - 
    (297*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (358*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (304*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192844*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (306*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (23018*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2018*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (42332*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1226*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (68*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (361*b1*f1^3*k2^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (116*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (208*b1*f1^4*k2^10*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1^2*f1^4*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (36*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (90*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (120*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (90*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (36*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1*f1^3*k2^14*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (136*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (282*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (814*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1072*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (916*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (368*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (204*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (494*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^3*k2^12*q^(-2 + \[Nu])*y)/(3*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (314*b1^2*f1^3*k2^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^4*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (92*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*
      y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (678*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (49228*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (324*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (232*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (53932*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (574*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (56*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (328*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (26*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (752*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (184*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1628*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2038*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (230936*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (222*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (344*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (176*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (308*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (92*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (164*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (116*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (494*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (212*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (65*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52208*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14064*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (528*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14064*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (144*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52208*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (176*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (496*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58224*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (110624*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58224*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (126832*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (126832*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1384*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26048*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4736*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26048*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/7 + 
 (y/21 + (4*y^3)/63)*((-253*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (30*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (305*b1*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43*f1^5*k1^9*k2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^5*k1^9*k2*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (168113*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (277*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (102*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (157*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (117*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/(343*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5822*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (418*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (230*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (117*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/(343*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5818*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (382*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (32*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (168113*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5003*b1*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (60*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (102*b2*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b5*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (233*f1^5*k1*k2^9*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^5*k1*k2^9*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (253*f1^4*k2^11*q^(-2 + \[Nu]))/(30*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (45*b1*f1^4*k2^11*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k2^11*q^(-2 + \[Nu]))/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*b2*f1^4*k2^11*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*f1^5*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^5*k2^11*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^4*k1^13*k2*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^11*k2^3*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*f1^4*k1^9*k2^5*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*f1^4*k1^7*k2^7*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^5*k2^9*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (27*f1^4*k1^3*k2^11*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1*k2^13*q^(-2 + \[Nu]))/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^4*k2^15*q^(-2 + \[Nu]))/
    (7*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k1^11*k2*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (677*b1*f1^4*k1^11*k2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^5*k1^11*k2*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (556*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1158*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1^9*k2^3*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (286*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (671*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^7*k2^5*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3112*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*f1^5*k1^5*k2^7*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (286*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (107*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*f1^5*k1^3*k2^9*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (556*f1^4*k1*k2^11*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (314*b1*f1^4*k1*k2^11*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^5*k1*k2^11*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*f1^4*k2^13*q^(-2 + \[Nu]))/
    (21*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (169*b1*f1^4*k2^13*q^(-2 + \[Nu]))/(35*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^5*k2^13*q^(-2 + \[Nu]))/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1268*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1574*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15256*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (248*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (156*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (692*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8152*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (566*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (324*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15256*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (112*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (692*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b5*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1268*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (194*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b2*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*f1^5*k2^9*k3^2*q^(-2 + \[Nu]))/(35*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^5*k2^9*k3^2*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (458*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2402*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (274*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47458*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1006*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (584*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b5*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (438*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47458*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1058*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (584*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b5*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (262*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (91*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (458*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2162*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*f1^5*k2^7*k3^4*q^(-2 + \[Nu]))/(5*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (14*b1*f1^5*k2^7*k3^4*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1957*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (85*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (856*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (478*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/(15*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1249*b1*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*b2*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^5*k2^5*k3^6*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^5*k2^5*k3^6*q^(-2 + \[Nu]))/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (293*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*f1^5*k1*k2*k3^8*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1*f1^5*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (293*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/(210*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (15*b1*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b2*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*f1^5*k2^3*k3^8*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^5*k2^3*k3^8*q^(-2 + \[Nu]))/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^4*k2*k3^10*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b2*f1^4*k2*k3^10*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^5*k2*k3^10*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k2*q^\[Nu])/k1 + 
   (b2*f1^4*k2*q^\[Nu])/k1 + (b5*f1^4*k2*q^\[Nu])/k1 - 
   (297*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1934*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192844*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (424*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23018*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1382*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (412*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42332*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1334*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (568*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b5*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (361*f1^4*k2^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (116*b1*f1^4*k2^10*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^4*k2^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k2^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*f1^5*k2^10*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*f1^5*k2^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^4*k1^12*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^4*k1^10*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*f1^4*k1^8*k2^6*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (120*f1^4*k1^6*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*f1^4*k1^4*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^4*k1^2*k2^12*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^4*k2^14*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (136*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1282*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3214*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^5*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1072*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3716*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^6*k2^6*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (368*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (372*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^4*k2^8*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (72*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (506*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^5*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k2^12*q^(-2 + \[Nu])*y)/(3*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (314*b1*f1^4*k2^12*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (92*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2678*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (49228*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8788*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (232*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (53932*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (222*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b5*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (328*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (752*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b2*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1628*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5114*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (230936*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6406*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (344*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b2*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^5*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (92*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (494*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b2*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*f1^5*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^5*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52208*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (528*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14064*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2192*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14064*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52208*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (496*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^4*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58224*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110624*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58224*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (126832*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (126832*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1384*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26048*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4736*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26048*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7104*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 ((-44799*b1*f1^2*k1^10*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45809*b1^2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (6860*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34*b1^3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1*b2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b1*b3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b5*f1^2*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b1*b8*f1^2*k1^10*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1*f1^3*k1^10*q^(-2 + \[Nu]))/(5145*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (39*b1^2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^3*k1^10*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b5*f1^3*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2263*b1*f1^2*k1^12*q^(-2 + \[Nu]))/(13860*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (47*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (12*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k1^12*q^(-2 + \[Nu]))/(3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k1^12*q^(-2 + \[Nu]))/(210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k1^12*q^(-2 + \[Nu]))/(42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (396959*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5399*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (893*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (347203*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (379*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (2058*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3672*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216*b1*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1986*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (759*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (396959*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26239*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (134*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (491*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6889*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (166*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (207*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2263*b1*f1^2*k2^10*q^(-2 + \[Nu]))/(13860*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (79*b1^2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b8*f1^2*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k2^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k2^10*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*f1^2*k1^14*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*b1^2*f1^2*k1^14*q^(-2 + \[Nu]))/(140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^2*k1^16*q^(-2 + \[Nu]))/
    (385*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^2*k1^16*q^(-2 + \[Nu]))/(140*k2^2*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (123*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu]))/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (123*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu]))/
    (20*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^2*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^2*f1^2*k2^14*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*b1*f1^2*k1^12*q^(-2 + \[Nu]))/(18865*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12109*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1^12*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4077*b1*b2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1^2*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1*f1^3*k1^12*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^2*k1^14*q^(-2 + \[Nu]))/(21*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (491*b1^2*f1^2*k1^14*q^(-2 + \[Nu]))/
    (420*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^2*k1^14*q^(-2 + \[Nu]))/(7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k1^14*q^(-2 + \[Nu]))/
    (210*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^14*q^(-2 + \[Nu]))/(28*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20666*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22789*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (81*b1^3*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1*b5*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25261*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^3*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11167*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (214*b1^3*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20666*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5009*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (201*b1^3*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1*b5*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1565*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (588*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1^3*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^2*k2^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (20*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^2*k2^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k2^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36479*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (6860*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1^2*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1*b5*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*b1*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (4620*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1439*b1^2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10525*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2058*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (110*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (769*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (57697*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (142*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (563*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5771*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (107*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (33*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152309*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (458*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b5*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^3*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*b1*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (3465*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (171*b1^2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (140*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*b1*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (70*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2498*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47581*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (4116*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (694*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7640*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2384*b1*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10127*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (369*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18269*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (446*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4160*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (129*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (383*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5177*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (980*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1^3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*b5*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*b1*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1247*b1^2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (241*b1^2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15559*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (979*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26123*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (372*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b5*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*b1*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (4620*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (12*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*b1^2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*b2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*b1*f1^2*k3^10*q^(-2 + \[Nu]))/(13860*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^2*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*b1*f1^3*k3^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k3^10*q^(-2 + \[Nu]))/(4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*b2*f1^3*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*b1*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (13860*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (28*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*f1^2*k3^12*q^(-2 + \[Nu]))/(462*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^3*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23*b1^2*f1^2*q^\[Nu])/42 + 3*b1*b10*f1^2*q^\[Nu] - 
   (71*b1*b2*f1^2*q^\[Nu])/42 + (47*b1*b3*f1^2*q^\[Nu])/21 - 
   (29*b1*b5*f1^2*q^\[Nu])/14 + (110*b1*b6*f1^2*q^\[Nu])/21 + 
   (82*b1*b8*f1^2*q^\[Nu])/21 + (b1^2*f1^2*k1^2*q^\[Nu])/(14*k2^2) - 
   (b1*b2*f1^2*k1^2*q^\[Nu])/(14*k2^2) - (b1*b5*f1^2*k1^2*q^\[Nu])/
    (14*k2^2) - (3*b1^2*f1^2*k1^2*q^\[Nu])/(7*k3^2) + 
   (3*b1*b2*f1^2*k1^2*q^\[Nu])/(7*k3^2) + (3*b1*b5*f1^2*k1^2*q^\[Nu])/
    (7*k3^2) + (3*b1^2*f1^2*k1^4*q^\[Nu])/(14*k2^2*k3^2) - 
   (3*b1*b2*f1^2*k1^4*q^\[Nu])/(14*k2^2*k3^2) - (3*b1*b5*f1^2*k1^4*q^\[Nu])/
    (14*k2^2*k3^2) + (3*b1^2*f1^2*k2^2*q^\[Nu])/(14*k3^2) - 
   (3*b1*b2*f1^2*k2^2*q^\[Nu])/(14*k3^2) - (3*b1*b5*f1^2*k2^2*q^\[Nu])/
    (14*k3^2) - (2*b1^2*f1^2*k3^2*q^\[Nu])/(7*k2^2) + 
   (2*b1*b2*f1^2*k3^2*q^\[Nu])/(7*k2^2) + (2*b1*b5*f1^2*k3^2*q^\[Nu])/
    (7*k2^2) - (461*b1*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (113*b1^2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^3*k1^11*q^(-2 + \[Nu])*y)/(35*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36376*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b5*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (73529*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22298*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (134*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8669*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (149*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (461*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^15*q^(-2 + \[Nu])*y)/(385*k2*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1^2*f1^2*k1^15*q^(-2 + \[Nu])*y)/(70*k2*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^13*k2*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (70*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (69*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (153*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1*k2^13*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^2*k1^13*q^(-2 + \[Nu])*y)/(1155*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (431*b1^2*f1^2*k1^13*q^(-2 + \[Nu])*y)/(210*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^13*q^(-2 + \[Nu])*y)/(105*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k1^13*q^(-2 + \[Nu])*y)/(15*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^3*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82864*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1459*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14947*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1^3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (315296*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9574*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (564*b1^3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58432*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1416*b1*b5*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (148*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5141*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1^3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82864*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3761*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (70*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (787*b1*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (1386*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (719*b1^2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^3*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43306*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93953*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88421*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (528*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125684*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1440*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2684*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (202*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (156*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1386*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*b1*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (271*b1^2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3887*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (656*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6941*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (191*b1^2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b8*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54146*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (757*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26174*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (131*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*b1*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (379*b1^2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (630*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (154*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*b1*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37516*b1^2*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1*b8*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67048*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (115832*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2272*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20656*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (51328*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^14*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*b1*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (496*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1264*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1308*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10000*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6304*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36016*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (124*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9208*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68296*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14016*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10112*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4096*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4416*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3456*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11392*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/5 + 
 (1/35 + (4*y^2)/35)*((-44799*f1^3*k1^10*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (141971*b1*f1^3*k1^10*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (422*b1^2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^3*f1^3*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b3*f1^3*k1^10*q^(-2 + \[Nu]))/(2205*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (832*b5*f1^3*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b8*f1^3*k1^10*q^(-2 + \[Nu]))/(147*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6833*f1^4*k1^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (209*b1*f1^4*k1^10*q^(-2 + \[Nu]))/(140*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^4*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b5*f1^4*k1^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2263*f1^3*k1^12*q^(-2 + \[Nu]))/
    (13860*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (47*b1*f1^3*k1^12*q^(-2 + \[Nu]))/(12*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^3*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*b2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k1^12*q^(-2 + \[Nu]))/(210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^4*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^4*k1^12*q^(-2 + \[Nu]))/(42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (396959*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (138329*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2258*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (112*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (652*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b8*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (273*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (20*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (347203*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7909*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1364*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3672*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (976*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b8*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1986*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1261*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (396959*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1667*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (1372*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (292*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (612337*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (496*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b8*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (811*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b5*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2263*f1^3*k2^10*q^(-2 + \[Nu]))/
    (13860*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (95*b1*f1^3*k2^10*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (146*b1^2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^3*k2^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*b2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k2^10*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b8*f1^3*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k2^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k2^10*q^(-2 + \[Nu]))/
    (60*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^4*k2^10*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b2*f1^4*k2^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1*f1^3*k1^14*q^(-2 + \[Nu]))/
    (20*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^3*k1^16*q^(-2 + \[Nu]))/(385*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1*f1^3*k1^16*q^(-2 + \[Nu]))/
    (140*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^12*k2^2*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (363*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^10*k2^4*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (687*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^3*k1^8*k2^6*q^(-2 + \[Nu]))/(77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (81*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^6*k2^8*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (363*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^4*k2^10*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (687*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^2*k2^12*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (387*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^3*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (39*b1*f1^3*k2^14*q^(-2 + \[Nu]))/
    (70*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*f1^3*k1^12*q^(-2 + \[Nu]))/(18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (7237*b1*f1^3*k1^12*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (562*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b2*f1^3*k1^12*q^(-2 + \[Nu]))/(1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (256*b3*f1^3*k1^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^3*k1^12*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (256*b8*f1^3*k1^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*f1^4*k1^12*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^4*k1^12*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^3*k1^14*q^(-2 + \[Nu]))/(21*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (491*b1*f1^3*k1^14*q^(-2 + \[Nu]))/
    (420*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^3*k1^14*q^(-2 + \[Nu]))/(7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k1^14*q^(-2 + \[Nu]))/
    (210*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k1^14*q^(-2 + \[Nu]))/(28*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20666*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1067*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (147*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b5*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b8*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/(10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (37*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58571*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (473*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (107*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118529*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (361*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20666*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88841*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b5*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b8*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/(10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (67*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31681*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (83*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^3*k2^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (73*b1*f1^3*k2^12*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (177*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^3*k2^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k2^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^4*k2^12*q^(-2 + \[Nu]))/(14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1216679*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (295891*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (974*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50*b1^3*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b5*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1391*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (4620*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1439*b1*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/(210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^4*k1^10*k3^2*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6497*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70971*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1352*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b8*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1537*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1601*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3476*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (66*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1576*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (449*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (30*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (360973*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1112*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b8*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1429*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8767*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (242*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (577*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8702*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2041*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4444*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^3*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b3*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b5*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b8*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (593*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b5*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/(3465*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (171*b1*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (140*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/(70*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k1^8*k3^4*q^(-2 + \[Nu]))/(2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2498*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (119251*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (4116*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1874*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7640*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2384*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b8*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10127*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1419*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (133*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (486233*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (224*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (968*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4160*b8*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1179*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (98*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b5*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (596*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2908*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/(70*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (453*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (395819*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22867*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b5*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b8*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/(1470*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (7*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/(6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1247*b1*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/(42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (241*b1*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b2*f1^4*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46327*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (397*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (424*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b8*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (199*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2027*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1637*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26123*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (389*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (372*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (93*b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b5*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/(4620*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (11*b1*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (12*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*f1^4*k1^4*k3^8*q^(-2 + \[Nu]))/(42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*b1*f1^4*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b2*f1^4*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (115*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (89*b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*f1^3*k3^10*q^(-2 + \[Nu]))/(13860*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (31*b1*f1^3*k3^10*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^3*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*b2*f1^3*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*f1^4*k3^10*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1*f1^4*k3^10*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^4*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (859*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (13860*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*f1^4*k1^2*k3^10*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^4*k1^2*k3^10*q^(-2 + \[Nu]))/
    (28*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^4*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*f1^3*k3^12*q^(-2 + \[Nu]))/(462*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^3*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^4*k3^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b2*f1^4*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23*b1*f1^3*q^\[Nu])/42 - 2*b1^2*f1^3*q^\[Nu] + 3*b10*f1^3*q^\[Nu] - 
   (71*b2*f1^3*q^\[Nu])/42 + 2*b1*b2*f1^3*q^\[Nu] + (47*b3*f1^3*q^\[Nu])/21 - 
   (29*b5*f1^3*q^\[Nu])/14 + 2*b1*b5*f1^3*q^\[Nu] + 
   (110*b6*f1^3*q^\[Nu])/21 + (82*b8*f1^3*q^\[Nu])/21 + 
   (b1*f1^3*k1^2*q^\[Nu])/(14*k2^2) - (b2*f1^3*k1^2*q^\[Nu])/(14*k2^2) - 
   (b5*f1^3*k1^2*q^\[Nu])/(14*k2^2) - (3*b1*f1^3*k1^2*q^\[Nu])/(7*k3^2) + 
   (3*b2*f1^3*k1^2*q^\[Nu])/(7*k3^2) + (3*b5*f1^3*k1^2*q^\[Nu])/(7*k3^2) + 
   (3*b1*f1^3*k1^4*q^\[Nu])/(14*k2^2*k3^2) - (3*b2*f1^3*k1^4*q^\[Nu])/
    (14*k2^2*k3^2) - (3*b5*f1^3*k1^4*q^\[Nu])/(14*k2^2*k3^2) + 
   (3*b1*f1^3*k2^2*q^\[Nu])/(14*k3^2) - (3*b2*f1^3*k2^2*q^\[Nu])/(14*k3^2) - 
   (3*b5*f1^3*k2^2*q^\[Nu])/(14*k3^2) - (2*b1*f1^3*k3^2*q^\[Nu])/(7*k2^2) + 
   (2*b2*f1^3*k3^2*q^\[Nu])/(7*k2^2) + (2*b5*f1^3*k3^2*q^\[Nu])/(7*k2^2) - 
   (461*f1^3*k1^11*q^(-2 + \[Nu])*y)/(6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (113*b1*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^3*k1^11*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*b2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k1^11*q^(-2 + \[Nu])*y)/(45*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b8*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^4*k1^11*q^(-2 + \[Nu])*y)/(35*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^4*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^4*k1^11*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (316727*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13273*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1052*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b8*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (433*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (134823*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b8*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (394*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (956*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4384*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (112*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b8*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (722563*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (920*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b8*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (211*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (461*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/(6930*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (251*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b8*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (349*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^15*q^(-2 + \[Nu])*y)/(385*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (9*b1*f1^3*k1^15*q^(-2 + \[Nu])*y)/
    (70*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^13*k2*q^(-2 + \[Nu])*y)/(77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*f1^3*k1^13*k2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (531*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (70*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (117*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (291*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (522*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1*k2^13*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (33*b1*f1^3*k1*k2^13*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^3*k1^13*q^(-2 + \[Nu])*y)/(1155*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (431*b1*f1^3*k1^13*q^(-2 + \[Nu])*y)/
    (210*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b3*f1^3*k1^13*q^(-2 + \[Nu])*y)/
    (105*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k1^13*q^(-2 + \[Nu])*y)/
    (15*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k1^13*q^(-2 + \[Nu])*y)/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (82864*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (647*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1076*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b8*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16459*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2822*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b3*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b8*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (315296*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12766*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2928*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58432*b2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b3*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1416*b5*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b8*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (148*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3013*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1412*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b3*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b8*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82864*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (601*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b8*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (47*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (1386*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (719*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41738*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4696*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (120*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b8*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (198*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93953*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (485381*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10552*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125684*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (408*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1440*b8*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2684*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (395546*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6568*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1096*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b8*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1386*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (191*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (271*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23102*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (276*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b8*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (785543*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6596*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b8*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1047*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2668*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (191*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b8*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*f1^4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54146*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13829*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1556*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b8*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26174*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (149*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1577*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (234*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b8*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (386*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (379*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^4*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1*f1^4*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^4*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (630*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (437*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/(154*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^4*k1*k3^10*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b2*f1^4*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37516*b1*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b8*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*f1^4*k1^10*q^(-2 + \[Nu])*y^2)/(5145*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1*f1^4*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29664*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67048*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (421112*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (408*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2272*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b8*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20656*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (253952*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (119516*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b8*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^14*q^(-2 + \[Nu])*y^2)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (12*b1*f1^3*k1^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/(18865*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k1^12*q^(-2 + \[Nu])*y^2)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8352*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2344*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b3*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b8*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4792*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3396*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b3*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b8*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1496*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10000*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100768*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4304*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (300416*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (124*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b3*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b8*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9208*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140632*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b8*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14016*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12396*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b8*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10112*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9344*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3968*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9600*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4416*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3456*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b3*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b8*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26496*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7040*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8832*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 (y*((2263*b1^2*f1*k1^11*q^(-2 + \[Nu]))/(6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (317*b1^3*f1*k1^11*q^(-2 + \[Nu]))/
     (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1^2*b2*f1*k1^11*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1^2*b3*f1*k1^11*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^2*b8*f1*k1^11*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^2*f1^2*k1^11*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^2*k1^11*q^(-2 + \[Nu]))/(6*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*f1^2*k1^11*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44799*b1^2*f1*k1^9*k2*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1181*b1^3*f1*k1^9*k2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20616*b1^2*b2*f1*k1^9*k2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^2*b3*f1*k1^9*k2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1664*b1^2*b5*f1*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^2*b8*f1*k1^9*k2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13666*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (271*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*b5*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (396959*b1^2*f1*k1^7*k2^3*q^(-2 + \[Nu]))/
     (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39*b1^3*f1*k1^7*k2^3*q^(-2 + \[Nu]))/
     (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1^2*b2*f1*k1^7*k2^3*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^7*k2^3*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b5*f1*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6089*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (377*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (121*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (694406*b1^2*f1*k1^5*k2^5*q^(-2 + \[Nu]))/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1058*b1^3*f1*k1^5*k2^5*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7344*b1^2*b2*f1*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1408*b1^2*b3*f1*k1^5*k2^5*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2432*b1^2*b5*f1*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1408*b1^2*b8*f1*k1^5*k2^5*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3972*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1378*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (396959*b1^2*f1*k1^3*k2^7*q^(-2 + \[Nu]))/
     (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39*b1^3*f1*k1^3*k2^7*q^(-2 + \[Nu]))/
     (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1^2*b2*f1*k1^3*k2^7*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^3*k2^7*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b5*f1*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6089*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (377*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (121*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44799*b1^2*f1*k1*k2^9*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1181*b1^3*f1*k1*k2^9*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20616*b1^2*b2*f1*k1*k2^9*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^2*b3*f1*k1*k2^9*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1664*b1^2*b5*f1*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^2*b8*f1*k1*k2^9*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13666*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (271*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*b5*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2263*b1^2*f1*k2^11*q^(-2 + \[Nu]))/(6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (317*b1^3*f1*k2^11*q^(-2 + \[Nu]))/
     (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1^2*b2*f1*k2^11*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1^2*b3*f1*k2^11*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^2*b8*f1*k2^11*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^2*f1^2*k2^11*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^2*k2^11*q^(-2 + \[Nu]))/(6*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*f1^2*k2^11*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1*k1^15*q^(-2 + \[Nu]))/(385*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1^3*f1*k1^15*q^(-2 + \[Nu]))/
     (35*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1*k1^13*k2*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (24*b1^3*f1*k1^13*k2*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1^11*k2^3*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^3*f1*k1^11*k2^3*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1^9*k2^5*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^3*f1*k1^9*k2^5*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^2*f1*k1^7*k2^7*q^(-2 + \[Nu]))/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^3*f1*k1^7*k2^7*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1^5*k2^9*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^3*f1*k1^5*k2^9*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1^3*k2^11*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^3*f1*k1^3*k2^11*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1*k1*k2^13*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (24*b1^3*f1*k1*k2^13*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*f1*k2^15*q^(-2 + \[Nu]))/(385*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1^3*f1*k2^15*q^(-2 + \[Nu]))/
     (35*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1*k1^13*q^(-2 + \[Nu]))/(21*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k1^13*q^(-2 + \[Nu]))/
     (10*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*b2*f1*k1^13*q^(-2 + \[Nu]))/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k1^13*q^(-2 + \[Nu]))/
     (105*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20964*b1^2*f1*k1^11*k2*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2823*b1^3*f1*k1^11*k2*q^(-2 + \[Nu]))/
     (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8154*b1^2*b2*f1*k1^11*k2*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b3*f1*k1^11*k2*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1^2*b5*f1*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b8*f1*k1^11*k2*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41332*b1^2*f1*k1^9*k2^3*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2883*b1^3*f1*k1^9*k2^3*q^(-2 + \[Nu]))/
     (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27402*b1^2*b2*f1*k1^9*k2^3*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b3*f1*k1^9*k2^3*q^(-2 + \[Nu]))/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (708*b1^2*b5*f1*k1^9*k2^3*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^2*b8*f1*k1^9*k2^3*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (71884*b1^2*f1*k1^7*k2^5*q^(-2 + \[Nu]))/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (991*b1^3*f1*k1^7*k2^5*q^(-2 + \[Nu]))/
     (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18758*b1^2*b2*f1*k1^7*k2^5*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1^2*b3*f1*k1^7*k2^5*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1^2*b5*f1*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1^2*b8*f1*k1^7*k2^5*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (71884*b1^2*f1*k1^5*k2^7*q^(-2 + \[Nu]))/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (991*b1^3*f1*k1^5*k2^7*q^(-2 + \[Nu]))/
     (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18758*b1^2*b2*f1*k1^5*k2^7*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1^2*b3*f1*k1^5*k2^7*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1^2*b5*f1*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1^2*b8*f1*k1^5*k2^7*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41332*b1^2*f1*k1^3*k2^9*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2883*b1^3*f1*k1^3*k2^9*q^(-2 + \[Nu]))/
     (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27402*b1^2*b2*f1*k1^3*k2^9*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b3*f1*k1^3*k2^9*q^(-2 + \[Nu]))/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (708*b1^2*b5*f1*k1^3*k2^9*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^2*b8*f1*k1^3*k2^9*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20964*b1^2*f1*k1*k2^11*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2823*b1^3*f1*k1*k2^11*q^(-2 + \[Nu]))/
     (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8154*b1^2*b2*f1*k1*k2^11*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b3*f1*k1*k2^11*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1^2*b5*f1*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b8*f1*k1*k2^11*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1*k2^13*q^(-2 + \[Nu]))/(21*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k2^13*q^(-2 + \[Nu]))/
     (10*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*b2*f1*k2^13*q^(-2 + \[Nu]))/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k2^13*q^(-2 + \[Nu]))/
     (105*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3439*b1^2*f1*k1^9*k3^2*q^(-2 + \[Nu]))/
     (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (499*b1^3*f1*k1^9*k3^2*q^(-2 + \[Nu]))/
     (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*b2*f1*k1^9*k3^2*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b3*f1*k1^9*k3^2*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b8*f1*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53*b1^2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/(2*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1216679*b1^2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4117*b1^3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4126*b1^2*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1^2*b5*f1*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1819*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (509*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6497*b1^2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (949*b1^3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26636*b1^2*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4264*b1^2*b5*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1280*b1^2*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17782*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (113*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6497*b1^2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (949*b1^3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26636*b1^2*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4264*b1^2*b5*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1280*b1^2*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17782*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (113*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1216679*b1^2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4117*b1^3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4126*b1^2*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1^2*b5*f1*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1819*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (509*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3439*b1^2*f1*k2^9*k3^2*q^(-2 + \[Nu]))/
     (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (499*b1^3*f1*k2^9*k3^2*q^(-2 + \[Nu]))/
     (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^2*b2*f1*k2^9*k3^2*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b3*f1*k2^9*k3^2*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b8*f1*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53*b1^2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/(2*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2242*b1^2*f1*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^3*f1*k1^7*k3^4*q^(-2 + \[Nu]))/
     (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b2*f1*k1^7*k3^4*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b3*f1*k1^7*k3^4*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b8*f1*k1^7*k3^4*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (97*b1^2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^3*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1^2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10076*b1^3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (77584*b1^2*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1^2*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1424*b1^2*b5*f1*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1^2*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5668*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4996*b1^2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16232*b1^3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15280*b1^2*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1^2*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4768*b1^2*b5*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3456*b1^2*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20254*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (106*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (130*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (56*b1^2*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1^2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (10076*b1^3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (77584*b1^2*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1^2*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1424*b1^2*b5*f1*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1^2*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5668*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2242*b1^2*f1*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^3*f1*k2^7*k3^4*q^(-2 + \[Nu]))/
     (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b2*f1*k2^7*k3^4*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b3*f1*k2^7*k3^4*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b8*f1*k2^7*k3^4*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (97*b1^2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^3*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4069*b1^2*f1*k1^5*k3^6*q^(-2 + \[Nu]))/
     (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (983*b1^3*f1*k1^5*k3^6*q^(-2 + \[Nu]))/
     (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*b2*f1*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1^5*k3^6*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b8*f1*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (71*b1^2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1^3*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1^2*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (395819*b1^2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4589*b1^3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4514*b1^2*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (640*b1^2*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1196*b1^2*b5*f1*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3200*b1^2*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (323*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (395819*b1^2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4589*b1^3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4514*b1^2*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (640*b1^2*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1196*b1^2*b5*f1*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3200*b1^2*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (323*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4069*b1^2*f1*k2^5*k3^6*q^(-2 + \[Nu]))/
     (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (983*b1^3*f1*k2^5*k3^6*q^(-2 + \[Nu]))/
     (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*b2*f1*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k2^5*k3^6*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b8*f1*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (71*b1^2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1^3*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1^2*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2263*b1^2*f1*k1^3*k3^8*q^(-2 + \[Nu]))/
     (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (83*b1^3*f1*k1^3*k3^8*q^(-2 + \[Nu]))/
     (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b2*f1*k1^3*k3^8*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^3*k3^8*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1^2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1^3*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (2*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41*b1^2*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (26123*b1^2*f1*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1^3*f1*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (744*b1^2*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b5*f1*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (82*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (19*b1^3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*b5*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2263*b1^2*f1*k2^3*k3^8*q^(-2 + \[Nu]))/
     (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (83*b1^3*f1*k2^3*k3^8*q^(-2 + \[Nu]))/
     (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b2*f1*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k2^3*k3^8*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1^2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1^3*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (2*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41*b1^2*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1^2*f1*k1*k3^10*q^(-2 + \[Nu]))/
     (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1^3*f1*k1*k3^10*q^(-2 + \[Nu]))/(42*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b2*f1*k1*k3^10*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1^2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^2*k1*k3^10*q^(-2 + \[Nu]))/(2*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1^2*b2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1^2*f1*k2*k3^10*q^(-2 + \[Nu]))/
     (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1^3*f1*k2*k3^10*q^(-2 + \[Nu]))/(42*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b2*f1*k2*k3^10*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1^2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^2*k2*k3^10*q^(-2 + \[Nu]))/(2*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1^2*b2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5*b1^2*f1*k3^12*q^(-2 + \[Nu]))/(231*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^3*f1*k3^12*q^(-2 + \[Nu]))/
     (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/(7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b2*f1^2*k3^12*q^(-2 + \[Nu]))/
     (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^3*f1*k1*q^\[Nu])/(21*k2) + (3*b1^2*b10*f1*k1*q^\[Nu])/k2 - 
    (37*b1^2*b2*f1*k1*q^\[Nu])/(21*k2) + (47*b1^2*b3*f1*k1*q^\[Nu])/(21*k2) - 
    (15*b1^2*b5*f1*k1*q^\[Nu])/(7*k2) + (110*b1^2*b6*f1*k1*q^\[Nu])/(21*k2) + 
    (82*b1^2*b8*f1*k1*q^\[Nu])/(21*k2) - (10*b1^3*f1*k2*q^\[Nu])/(21*k1) + 
    (3*b1^2*b10*f1*k2*q^\[Nu])/k1 - (37*b1^2*b2*f1*k2*q^\[Nu])/(21*k1) + 
    (47*b1^2*b3*f1*k2*q^\[Nu])/(21*k1) - (15*b1^2*b5*f1*k2*q^\[Nu])/(7*k1) + 
    (110*b1^2*b6*f1*k2*q^\[Nu])/(21*k1) + (82*b1^2*b8*f1*k2*q^\[Nu])/
     (21*k1) + (3*b1^3*f1*k1^3*q^\[Nu])/(7*k2*k3^2) - 
    (3*b1^2*b2*f1*k1^3*q^\[Nu])/(7*k2*k3^2) - (3*b1^2*b5*f1*k1^3*q^\[Nu])/
     (7*k2*k3^2) - (6*b1^3*f1*k1*k2*q^\[Nu])/(7*k3^2) + 
    (6*b1^2*b2*f1*k1*k2*q^\[Nu])/(7*k3^2) + (6*b1^2*b5*f1*k1*k2*q^\[Nu])/
     (7*k3^2) + (3*b1^3*f1*k2^3*q^\[Nu])/(7*k1*k3^2) - 
    (3*b1^2*b2*f1*k2^3*q^\[Nu])/(7*k1*k3^2) - (3*b1^2*b5*f1*k2^3*q^\[Nu])/
     (7*k1*k3^2) - (4*b1^3*f1*k3^2*q^\[Nu])/(7*k1*k2) + 
    (4*b1^2*b2*f1*k3^2*q^\[Nu])/(7*k1*k2) + (4*b1^2*b5*f1*k3^2*q^\[Nu])/
     (7*k1*k2) - (461*b1^2*f1*k1^10*q^(-2 + \[Nu])*y)/
     (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (227*b1^3*f1*k1^10*q^(-2 + \[Nu])*y)/(105*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (40*b1^2*b2*f1*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b3*f1*k1^10*q^(-2 + \[Nu])*y)/
     (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b8*f1*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (34*b1^2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*b2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316727*b1^2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (947*b1^3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (61576*b1^2*b2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1^2*b3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1^2*b5*f1*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1^2*b8*f1*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17362*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (122*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32682*b1^2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3146*b1^3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (23792*b1^2*b2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (352*b1^2*b3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1^2*b5*f1*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1760*b1^2*b8*f1*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12364*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32682*b1^2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3146*b1^3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (23792*b1^2*b2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (352*b1^2*b3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1^2*b5*f1*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1760*b1^2*b8*f1*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12364*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316727*b1^2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (947*b1^3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (61576*b1^2*b2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1^2*b3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1^2*b5*f1*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1^2*b8*f1*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17362*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (122*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (461*b1^2*f1*k2^10*q^(-2 + \[Nu])*y)/(3465*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (227*b1^3*f1*k2^10*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1^2*b2*f1*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b3*f1*k2^10*q^(-2 + \[Nu])*y)/
     (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b8*f1*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (34*b1^2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*b2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (24*b1^3*f1*k1^14*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^3*f1*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1^2*f1*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1^3*f1*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^3*f1*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^3*f1*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1^2*f1*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1^3*f1*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^2*f1*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1^3*f1*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k2^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (24*b1^3*f1*k2^14*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (464*b1^2*f1*k1^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (97*b1^3*f1*k1^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b2*f1*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b3*f1*k1^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b8*f1*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*f1^2*k1^12*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (165728*b1^2*f1*k1^10*k2^2*q^(-2 + \[Nu])*
      y)/(56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2498*b1^3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16864*b1^2*b2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1^2*b5*f1*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (160*b1^2*b8*f1*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458288*b1^2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3881*b1^3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (76276*b1^2*b2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1^2*b3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1^2*b5*f1*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1^2*b8*f1*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (630592*b1^2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4124*b1^3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (116864*b1^2*b2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2752*b1^2*b3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2832*b1^2*b5*f1*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2752*b1^2*b8*f1*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (296*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458288*b1^2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3881*b1^3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (76276*b1^2*b2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1^2*b3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1^2*b5*f1*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1^2*b8*f1*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (165728*b1^2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2498*b1^3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16864*b1^2*b2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1^2*b5*f1*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (160*b1^2*b8*f1*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (464*b1^2*f1*k2^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (97*b1^3*f1*k2^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b2*f1*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b3*f1*k2^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b8*f1*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^2*f1^2*k2^12*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (787*b1^2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (491*b1^3*f1*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1^2*b2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1^2*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19732*b1^2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (596*b1^3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (21696*b1^2*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1^2*b5*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2560*b1^2*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9104*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (152*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (187906*b1^2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3322*b1^3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (251368*b1^2*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1^2*b5*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2880*b1^2*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5368*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (176*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (104*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19732*b1^2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (596*b1^3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (21696*b1^2*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1^2*b5*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2560*b1^2*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9104*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (152*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (787*b1^2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (491*b1^3*f1*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1^2*b2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1^2*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1102*b1^2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (674*b1^3*f1*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1^2*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193694*b1^2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1438*b1^3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39472*b1^2*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1^2*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1^2*b5*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1^2*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (63748*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (404*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193694*b1^2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1438*b1^3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39472*b1^2*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1^2*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1^2*b5*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1^2*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (63748*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (404*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1102*b1^2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (674*b1^3*f1*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b8*f1*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1^2*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (178*b1^2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b3*f1*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b8*f1*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (30*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1^2*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (108292*b1^2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1586*b1^3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (48224*b1^2*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1504*b1^2*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (472*b1^2*b5*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1504*b1^2*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52348*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (368*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (104*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (178*b1^2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*b3*f1*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b8*f1*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (30*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1^2*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (239*b1^2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1^3*f1*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b3*f1*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b8*f1*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1^2*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (239*b1^2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1^3*f1*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*b2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b3*f1*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*b8*f1*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1^2*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1^2*f1*k3^10*q^(-2 + \[Nu])*y)/(77*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*b2*f1*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^2*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b2*f1^2*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13336*b1^2*f1*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8584*b1^3*f1*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1^2*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (480*b1^2*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6368*b1^2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (160*b1^3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1^2*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (134096*b1^2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16432*b1^3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4544*b1^2*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (832*b1^2*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (832*b1^2*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41312*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6368*b1^2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (160*b1^3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1^2*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13336*b1^2*f1*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8584*b1^3*f1*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1^2*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (480*b1^2*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1^13*k2*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^3*f1*k1^13*k2*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^2*f1*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^3*f1*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^3*f1*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^3*f1*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^2*f1*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^3*f1*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1*k1*k2^13*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^3*f1*k1*k2^13*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5568*b1^2*f1*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^3*f1*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b2*f1*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b3*f1*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b8*f1*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16704*b1^2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2112*b1^3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1^2*b2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1^2*b3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1^2*b8*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11136*b1^2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1^3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1^2*b2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1^2*b8*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11136*b1^2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1^3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1^2*b2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1^2*b8*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16704*b1^2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2112*b1^3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1^2*b2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1^2*b3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1^2*b8*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5568*b1^2*f1*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^3*f1*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b2*f1*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b3*f1*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b8*f1*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38144*b1^2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4864*b1^3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1^2*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8096*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4352*b1^2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1^3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41504*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4352*b1^2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1^3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1^2*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41504*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38144*b1^2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4864*b1^3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1^2*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1^2*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8096*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (51224*b1^2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6568*b1^3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1^2*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1^2*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1^2*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49888*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18416*b1^2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25904*b1^3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2176*b1^2*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1^2*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1^2*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28032*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (51224*b1^2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6568*b1^3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1^2*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1^2*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1^2*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49888*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (54848*b1^2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6976*b1^3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (832*b1^2*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1^2*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1^2*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5224*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (54848*b1^2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6976*b1^3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (832*b1^2*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1^2*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1^2*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5224*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (568*b1^2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^2*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^2*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1264*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1^2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^2*b2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b8*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2368*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1^2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^2*b2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b8*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1^2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^2*b2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b8*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1^2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^2*b2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b8*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2368*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1472*b1^2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1^2*b2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b8*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1^2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1^2*b2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^2*b8*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8832*b1^2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6912*b1^3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6912*b1^2*b2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1^2*b3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^2*b8*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1^2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1^2*b2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^2*b8*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1472*b1^2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1^2*b2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1^2*b8*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2944*b1^2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (768*b1^2*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7104*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1^2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1^2*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1^2*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^2*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2944*b1^2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (768*b1^2*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7104*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1^2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^2*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1^2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^2*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1^2*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1472*b1^2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1^3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1^2*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/3 + 
 (y*((2263*b1*f1^2*k1^11*q^(-2 + \[Nu]))/(6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (1361*b1^2*f1^2*k1^11*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (31*b1^3*f1^2*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1*b2*f1^2*k1^11*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*b2*f1^2*k1^11*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b3*f1^2*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1*b8*f1^2*k1^11*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1*f1^3*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1^2*f1^3*k1^11*q^(-2 + \[Nu]))/
     (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1^3*f1^3*k1^11*q^(-2 + \[Nu]))/(6*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k1^11*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44799*b1*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (250783*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20616*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1^2*b2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1664*b1*b5*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b5*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13666*b1*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (396959*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2145*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (122*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6089*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (311*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (30*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (121*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (694406*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9161*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (334*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7344*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1408*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2432*b1*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1408*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3972*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2528*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (396959*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (69724*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (171*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6089*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (691*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (35*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (121*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44799*b1*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (587*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (503*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20616*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*b2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1664*b1*b5*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13666*b1*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (314*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2263*b1*f1^2*k2^11*q^(-2 + \[Nu]))/(6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (317*b1^2*f1^2*k2^11*q^(-2 + \[Nu]))/
     (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1*b2*f1^2*k2^11*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1*b3*f1^2*k2^11*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b8*f1^2*k2^11*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1*f1^3*k2^11*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^3*k2^11*q^(-2 + \[Nu]))/(6*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k2^11*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*f1^2*k1^15*q^(-2 + \[Nu]))/(385*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1^2*f1^2*k1^15*q^(-2 + \[Nu]))/
     (35*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^13*k2*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (51*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (111*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (99*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu]))/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (111*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (99*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1*k2^13*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (39*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*f1^2*k2^15*q^(-2 + \[Nu]))/(385*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1^2*f1^2*k2^15*q^(-2 + \[Nu]))/
     (35*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^2*k1^13*q^(-2 + \[Nu]))/(21*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (619*b1^2*f1^2*k1^13*q^(-2 + \[Nu]))/
     (210*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (59*b1^3*f1^2*k1^13*q^(-2 + \[Nu]))/(35*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b2*f1^2*k1^13*q^(-2 + \[Nu]))/
     (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^3*k1^13*q^(-2 + \[Nu]))/(105*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k1^13*q^(-2 + \[Nu]))/
     (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20964*b1*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16253*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8154*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1*b5*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19*b1*f1^3*k1^11*k2*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
     (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41332*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (36677*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (29*b1^3*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27402*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (708*b1*b5*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (47*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (71884*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (46541*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (104*b1^3*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18758*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (71884*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5011*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (294*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (561*b1^3*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18758*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41332*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (173*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (294*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^3*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27402*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (708*b1*b5*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
     (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20964*b1*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6929*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (177*b1^3*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8154*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1*b5*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19*b1*f1^3*k1*k2^11*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^2*k2^13*q^(-2 + \[Nu]))/(21*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k2^13*q^(-2 + \[Nu]))/
     (10*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b2*f1^2*k2^13*q^(-2 + \[Nu]))/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k2^13*q^(-2 + \[Nu]))/
     (105*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3439*b1*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (607*b1^2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (998*b1^3*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1^2*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (137*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1216679*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (59331*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1364*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4126*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1^2*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1819*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (9*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (10*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6497*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (54653*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3064*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26636*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (324*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4264*b1*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1280*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17782*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1199*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6497*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (92269*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (556*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26636*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4264*b1*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1280*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17782*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (691*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1216679*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5401*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1234*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4126*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1819*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (199*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3439*b1*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (499*b1^2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/(2*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2242*b1*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (74*b1^2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1546*b1^3*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (97*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/(5*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (7*b1^3*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7866*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2722*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (77584*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1424*b1*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5668*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (35*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4996*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53694*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3194*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15280*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4768*b1*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3456*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20254*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (544*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (130*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (56*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2018*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (77584*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1424*b1*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5668*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (222*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2242*b1*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (97*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4069*b1*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (275*b1^2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1^3*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1^2*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (71*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (34*b1^2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (395819*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22327*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4514*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (640*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1196*b1*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3200*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (323*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (395819*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16511*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (977*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4514*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (640*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1196*b1*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3200*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (323*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4069*b1*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (983*b1^2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (71*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1^2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2263*b1*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (271*b1^2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1^3*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^2*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (61*b1^2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (14*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/(2*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (41*b1*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (26123*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (141*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1^3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (744*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^2*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b5*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (82*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1^3*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*b5*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2263*b1*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (83*b1^2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1^2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (2*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41*b1*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5*b1^2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*b2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*b2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1*f1^3*k1*k3^10*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (15*b1^2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
     (14*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1^2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*b2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1*f1^3*k2*k3^10*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
     (2*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5*b1*f1^2*k3^12*q^(-2 + \[Nu]))/(231*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
     (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^3*k3^12*q^(-2 + \[Nu]))/
     (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^2*k1*q^\[Nu])/(21*k2) - (b1^3*f1^2*k1*q^\[Nu])/k2 + 
    (3*b1*b10*f1^2*k1*q^\[Nu])/k2 - (37*b1*b2*f1^2*k1*q^\[Nu])/(21*k2) + 
    (b1^2*b2*f1^2*k1*q^\[Nu])/k2 + (47*b1*b3*f1^2*k1*q^\[Nu])/(21*k2) - 
    (15*b1*b5*f1^2*k1*q^\[Nu])/(7*k2) + (b1^2*b5*f1^2*k1*q^\[Nu])/k2 + 
    (110*b1*b6*f1^2*k1*q^\[Nu])/(21*k2) + (82*b1*b8*f1^2*k1*q^\[Nu])/
     (21*k2) - (10*b1^2*f1^2*k2*q^\[Nu])/(21*k1) + 
    (3*b1*b10*f1^2*k2*q^\[Nu])/k1 - (37*b1*b2*f1^2*k2*q^\[Nu])/(21*k1) + 
    (47*b1*b3*f1^2*k2*q^\[Nu])/(21*k1) - (15*b1*b5*f1^2*k2*q^\[Nu])/(7*k1) + 
    (110*b1*b6*f1^2*k2*q^\[Nu])/(21*k1) + (82*b1*b8*f1^2*k2*q^\[Nu])/
     (21*k1) + (3*b1^2*f1^2*k1^3*q^\[Nu])/(7*k2*k3^2) - 
    (3*b1*b2*f1^2*k1^3*q^\[Nu])/(7*k2*k3^2) - (3*b1*b5*f1^2*k1^3*q^\[Nu])/
     (7*k2*k3^2) - (6*b1^2*f1^2*k1*k2*q^\[Nu])/(7*k3^2) + 
    (6*b1*b2*f1^2*k1*k2*q^\[Nu])/(7*k3^2) + (6*b1*b5*f1^2*k1*k2*q^\[Nu])/
     (7*k3^2) + (3*b1^2*f1^2*k2^3*q^\[Nu])/(7*k1*k3^2) - 
    (3*b1*b2*f1^2*k2^3*q^\[Nu])/(7*k1*k3^2) - (3*b1*b5*f1^2*k2^3*q^\[Nu])/
     (7*k1*k3^2) - (4*b1^2*f1^2*k3^2*q^\[Nu])/(7*k1*k2) + 
    (4*b1*b2*f1^2*k3^2*q^\[Nu])/(7*k1*k2) + (4*b1*b5*f1^2*k3^2*q^\[Nu])/
     (7*k1*k2) - (461*b1*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (262*b1^2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (394*b1^3*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b8*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (34*b1*f1^3*k1^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (46*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^3*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316727*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (48961*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (208*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (61576*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1^2*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17362*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32682*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47032*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2524*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (23792*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (352*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1760*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12364*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32682*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (170822*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (176*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (23792*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (352*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1760*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12364*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (388*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316727*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1502*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (358*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (61576*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17362*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (142*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (461*b1*f1^2*k2^10*q^(-2 + \[Nu])*y)/(3465*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (227*b1^2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b8*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (34*b1*f1^3*k2^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1^2*f1^2*k1^14*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (234*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (96*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (114*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (396*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (30*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k2^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (24*b1^2*f1^2*k2^14*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (464*b1*f1^2*k1^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (571*b1^2*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (94*b1^3*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^3*k1^12*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^3*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (165728*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3002*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (94*b1^3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16864*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (160*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458288*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14219*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (564*b1^3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (76276*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (630592*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (19876*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (188*b1^3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (116864*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2752*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2832*b1*b5*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2752*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (296*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458288*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5057*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1034*b1^3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (76276*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (165728*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6542*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (282*b1^3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16864*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (160*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (464*b1*f1^2*k2^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (97*b1^2*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^3*k2^12*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (787*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (33*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1658*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19732*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (49760*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1114*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (21696*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2560*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9104*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (344*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (152*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (187906*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (315902*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (746*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (251368*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2880*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5368*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (104*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19732*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1208*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (678*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (21696*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2560*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9104*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (152*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (787*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (491*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1102*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2494*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1286*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1^2*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (172*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^3*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193694*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44174*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (916*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39472*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (344*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (63748*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (76*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193694*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (9958*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2038*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39472*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (63748*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (212*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1102*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (674*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (178*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (63*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (304*b1^3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (30*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (164*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (108292*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (346*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (164*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (48224*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1504*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (472*b1*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1504*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52348*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (484*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (104*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (178*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (30*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (239*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (239*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1*f1^2*k3^10*q^(-2 + \[Nu])*y)/(77*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^2*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^3*k3^10*q^(-2 + \[Nu])*y)/(21*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*b2*f1^3*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13336*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (37432*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (480*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6368*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6224*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (432*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (134096*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (325984*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (432*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4544*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (832*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (832*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41312*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6368*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (65392*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13336*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8584*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (480*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^13*k2*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1*k2^13*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5568*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (472*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16704*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (160*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11136*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2064*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11136*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (864*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16704*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3288*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5568*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38144*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41744*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8096*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4352*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193888*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41504*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4352*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (36688*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41504*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38144*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4864*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8096*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (51224*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26952*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49888*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18416*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (54496*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2176*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28032*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (51224*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6568*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49888*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (54848*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2824*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (832*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5224*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (54848*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6976*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (832*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5224*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (568*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1264*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7360*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2368*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12928*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (15296*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2368*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1472*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8832*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6912*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6912*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1472*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2944*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18304*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (768*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7104*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8576*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2944*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (768*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7104*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3648*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1472*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/5 + 
 (y*((2263*b1*f1^2*k1^11*q^(-2 + \[Nu]))/(6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (317*b1^2*f1^2*k1^11*q^(-2 + \[Nu]))/
     (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1*b2*f1^2*k1^11*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1*b3*f1^2*k1^11*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b8*f1^2*k1^11*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1*f1^3*k1^11*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^3*k1^11*q^(-2 + \[Nu]))/(6*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k1^11*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44799*b1*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (587*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (503*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20616*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*b2*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1664*b1*b5*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13666*b1*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (314*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (396959*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (69724*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (171*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6089*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (691*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (35*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (121*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (694406*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9161*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (334*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7344*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1408*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2432*b1*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1408*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3972*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2528*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (396959*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2145*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (122*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6089*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (311*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (30*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (121*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44799*b1*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (250783*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20616*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (102*b1^2*b2*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1664*b1*b5*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b5*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (13666*b1*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2263*b1*f1^2*k2^11*q^(-2 + \[Nu]))/(6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (1361*b1^2*f1^2*k2^11*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (31*b1^3*f1^2*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1*b2*f1^2*k2^11*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1^2*b2*f1^2*k2^11*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b3*f1^2*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1*b8*f1^2*k2^11*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1*f1^3*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1^2*f1^3*k2^11*q^(-2 + \[Nu]))/
     (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1^3*f1^3*k2^11*q^(-2 + \[Nu]))/(6*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k2^11*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*f1^2*k1^15*q^(-2 + \[Nu]))/(385*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1^2*f1^2*k1^15*q^(-2 + \[Nu]))/
     (35*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^13*k2*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (39*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (99*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (111*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu]))/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu]))/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (99*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu]))/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (111*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1*k2^13*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (51*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu]))/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*f1^2*k2^15*q^(-2 + \[Nu]))/(385*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1^2*f1^2*k2^15*q^(-2 + \[Nu]))/
     (35*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^2*k1^13*q^(-2 + \[Nu]))/(21*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k1^13*q^(-2 + \[Nu]))/
     (10*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b2*f1^2*k1^13*q^(-2 + \[Nu]))/(7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k1^13*q^(-2 + \[Nu]))/
     (105*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20964*b1*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6929*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (177*b1^3*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8154*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1*b5*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19*b1*f1^3*k1^11*k2*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41332*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (173*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (294*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^3*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27402*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (708*b1*b5*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
     (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (71884*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5011*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (294*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (561*b1^3*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18758*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (71884*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (46541*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (104*b1^3*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18758*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (68*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41332*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (36677*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (29*b1^3*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (27402*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (708*b1*b5*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (47*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20964*b1*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16253*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8154*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1*b5*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu]))/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19*b1*f1^3*k1*k2^11*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
     (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^2*k2^13*q^(-2 + \[Nu]))/(21*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (619*b1^2*f1^2*k2^13*q^(-2 + \[Nu]))/
     (210*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (59*b1^3*f1^2*k2^13*q^(-2 + \[Nu]))/(35*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b2*f1^2*k2^13*q^(-2 + \[Nu]))/
     (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^3*k2^13*q^(-2 + \[Nu]))/(105*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k2^13*q^(-2 + \[Nu]))/
     (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3439*b1*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (499*b1^2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/(2*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1216679*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5401*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1234*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4126*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1819*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (199*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6497*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (92269*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (556*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26636*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4264*b1*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1280*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17782*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (691*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6497*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (54653*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3064*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26636*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (324*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4264*b1*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1280*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17782*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1199*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1216679*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (59331*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1364*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4126*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (692*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (28*b1^2*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1819*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (9*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (10*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (82*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3439*b1*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (607*b1^2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (998*b1^3*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (86*b1^2*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (137*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2242*b1*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1^2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k1^7*k3^4*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (97*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
     (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2018*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (77584*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1424*b1*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5668*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (222*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4996*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (53694*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3194*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (15280*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4768*b1*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3456*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20254*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (544*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (130*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (56*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (17404*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7866*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2722*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (77584*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (584*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1424*b1*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1^2*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5632*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5668*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (35*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28*b1*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2242*b1*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (74*b1^2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1546*b1^3*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k2^7*k3^4*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (97*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/(5*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (7*b1^3*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4069*b1*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (983*b1^2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (71*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1^2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (395819*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16511*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (977*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4514*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (640*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1196*b1*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3200*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (323*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (395819*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22327*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4514*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (236*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (640*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1196*b1*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3200*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (323*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (43*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4069*b1*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (275*b1^2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1^3*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (100*b1^2*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (71*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (34*b1^2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (44*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2263*b1*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (83*b1^2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1^2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (2*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (41*b1*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (26123*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (141*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1^3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (744*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^2*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b5*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (82*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3*b1^3*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*b5*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2263*b1*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (271*b1^2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11*b1^3*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (38*b1^2*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (61*b1^2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (14*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^3*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/(2*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (41*b1*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17*b1^2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*b2*f1^2*k1*k3^10*q^(-2 + \[Nu]))/
     (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1*f1^3*k1*k3^10*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
     (2*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
     (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (859*b1*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5*b1^2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*b2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*b2*f1^2*k2*k3^10*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5*b1*f1^3*k2*k3^10*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (15*b1^2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
     (14*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1*b2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
     (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5*b1*f1^2*k3^12*q^(-2 + \[Nu]))/(231*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
     (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^3*k3^12*q^(-2 + \[Nu]))/
     (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^2*k1*q^\[Nu])/(21*k2) + (3*b1*b10*f1^2*k1*q^\[Nu])/k2 - 
    (37*b1*b2*f1^2*k1*q^\[Nu])/(21*k2) + (47*b1*b3*f1^2*k1*q^\[Nu])/(21*k2) - 
    (15*b1*b5*f1^2*k1*q^\[Nu])/(7*k2) + (110*b1*b6*f1^2*k1*q^\[Nu])/(21*k2) + 
    (82*b1*b8*f1^2*k1*q^\[Nu])/(21*k2) - (10*b1^2*f1^2*k2*q^\[Nu])/(21*k1) - 
    (b1^3*f1^2*k2*q^\[Nu])/k1 + (3*b1*b10*f1^2*k2*q^\[Nu])/k1 - 
    (37*b1*b2*f1^2*k2*q^\[Nu])/(21*k1) + (b1^2*b2*f1^2*k2*q^\[Nu])/k1 + 
    (47*b1*b3*f1^2*k2*q^\[Nu])/(21*k1) - (15*b1*b5*f1^2*k2*q^\[Nu])/(7*k1) + 
    (b1^2*b5*f1^2*k2*q^\[Nu])/k1 + (110*b1*b6*f1^2*k2*q^\[Nu])/(21*k1) + 
    (82*b1*b8*f1^2*k2*q^\[Nu])/(21*k1) + (3*b1^2*f1^2*k1^3*q^\[Nu])/
     (7*k2*k3^2) - (3*b1*b2*f1^2*k1^3*q^\[Nu])/(7*k2*k3^2) - 
    (3*b1*b5*f1^2*k1^3*q^\[Nu])/(7*k2*k3^2) - (6*b1^2*f1^2*k1*k2*q^\[Nu])/
     (7*k3^2) + (6*b1*b2*f1^2*k1*k2*q^\[Nu])/(7*k3^2) + 
    (6*b1*b5*f1^2*k1*k2*q^\[Nu])/(7*k3^2) + (3*b1^2*f1^2*k2^3*q^\[Nu])/
     (7*k1*k3^2) - (3*b1*b2*f1^2*k2^3*q^\[Nu])/(7*k1*k3^2) - 
    (3*b1*b5*f1^2*k2^3*q^\[Nu])/(7*k1*k3^2) - (4*b1^2*f1^2*k3^2*q^\[Nu])/
     (7*k1*k2) + (4*b1*b2*f1^2*k3^2*q^\[Nu])/(7*k1*k2) + 
    (4*b1*b5*f1^2*k3^2*q^\[Nu])/(7*k1*k2) - 
    (461*b1*f1^2*k1^10*q^(-2 + \[Nu])*y)/(3465*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (227*b1^2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b8*f1^2*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (34*b1*f1^3*k1^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316727*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1502*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (358*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (61576*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17362*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (142*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32682*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (170822*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (176*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (23792*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (352*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1760*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12364*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (388*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32682*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (47032*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2524*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (23792*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (352*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (80*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1760*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12364*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (316727*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (48961*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (208*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (61576*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (568*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (88*b1^2*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (976*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (17362*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (461*b1*f1^2*k2^10*q^(-2 + \[Nu])*y)/(3465*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (262*b1^2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (394*b1^3*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1^2*b2*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b8*f1^2*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (34*b1*f1^3*k2^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (46*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^3*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (24*b1^2*f1^2*k1^14*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (30*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (396*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (114*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (96*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (216*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (234*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (24*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k2^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1^2*f1^2*k2^14*q^(-2 + \[Nu])*y)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (464*b1*f1^2*k1^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (97*b1^2*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k1^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^3*k1^12*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (165728*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*
      y)/(56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6542*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (282*b1^3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16864*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (160*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458288*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5057*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1034*b1^3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (76276*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (630592*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (19876*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (188*b1^3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (116864*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2752*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2832*b1*b5*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2752*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (296*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (458288*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (14219*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (564*b1^3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (76276*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1648*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (58*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (165728*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3002*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (94*b1^3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16864*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (472*b1*b5*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (160*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (464*b1*f1^2*k2^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (571*b1^2*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (94*b1^3*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1*b2*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1*f1^3*k2^12*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^3*k2^12*q^(-2 + \[Nu])*y)/
     (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (787*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (491*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19732*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1208*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (678*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (21696*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2560*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9104*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (488*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (152*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (187906*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (315902*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (746*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (251368*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1888*b1*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2880*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5368*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (104*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (19732*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (49760*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1114*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (21696*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (688*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1^2*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2560*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (9104*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (344*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (22*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (152*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (787*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (33*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1658*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (12*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1^2*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (20*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1102*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (674*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193694*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (9958*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2038*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39472*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (63748*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (212*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193694*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44174*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (916*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (39472*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (344*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1888*b1*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4448*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (63748*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (76*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1102*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2494*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1286*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (136*b1^2*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (52*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (172*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2*b1^3*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (40*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (178*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (30*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (108292*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (346*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (164*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (48224*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1504*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (472*b1*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1504*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (52348*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (484*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (104*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (178*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (63*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (304*b1^3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (44*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (80*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (30*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (164*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^3*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (40*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (239*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (25*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (239*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1^2*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (22*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (10*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (20*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13*b1*f1^2*k3^10*q^(-2 + \[Nu])*y)/(77*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4*b1*b2*f1^2*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1*f1^3*k3^10*q^(-2 + \[Nu])*y)/(21*(k1^4 + (k2^2 - k3^2)^2 - 
       2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
       k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*b2*f1^3*k3^10*q^(-2 + \[Nu])*y)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13336*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8584*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (480*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6368*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (65392*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (134096*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (325984*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (432*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4544*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (832*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (832*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41312*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6368*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6224*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (432*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2816*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (13336*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (37432*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (416*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (480*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (944*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1^13*k2*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
     (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
     (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (144*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^2*k1*k2^13*q^(-2 + \[Nu])*y^2)/
     (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu])*y^2)/
     (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5568*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (704*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16704*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (3288*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11136*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (864*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (11136*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2064*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (128*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (16704*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (160*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (576*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (24*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5568*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (472*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
     (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38144*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4864*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8096*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4352*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (36688*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41504*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
     (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4352*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (193888*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (512*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41504*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
     (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (38144*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (41744*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1024*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (512*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8096*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (96*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (51224*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6568*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49888*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18416*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (54496*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2176*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1408*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (28032*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (51224*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (26952*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (16*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (192*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1216*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (49888*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (48*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (54848*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6976*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (832*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5224*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (54848*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2824*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (832*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1088*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5224*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (568*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (72*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (32*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (32*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1264*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2368*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (15296*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (12928*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7360*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2368*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1472*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (8832*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (6912*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (6912*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (4608*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1472*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1152*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1152*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (64*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (192*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
     (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2944*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (768*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7104*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (5888*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (8576*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4608*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (256*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (768*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (4736*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (2944*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (18304*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (768*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (128*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (7104*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (1536*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (5888*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (3648*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1536*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (256*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (7104*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (1472*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (384*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (384*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
    (64*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
    (2368*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
     (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
      (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))))/5 + 
 ((3*y)/35 + (2*y^3)/35)*((2263*f1^3*k1^11*q^(-2 + \[Nu]))/
    (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1361*b1*f1^3*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1^2*f1^3*k1^11*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^3*k1^11*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*b2*f1^3*k1^11*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b8*f1^3*k1^11*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k1^11*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1*f1^4*k1^11*q^(-2 + \[Nu]))/
    (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^4*k1^11*q^(-2 + \[Nu]))/(6*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b2*f1^4*k1^11*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*f1^3*k1^9*k2*q^(-2 + \[Nu]))/(18865*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (27334*b1*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4534*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20616*b2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b3*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1664*b5*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b8*f1^3*k1^9*k2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13666*f1^4*k1^9*k2*q^(-2 + \[Nu]))/(5145*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (27*b1*f1^4*k1^9*k2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b5*f1^4*k1^9*k2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (396959*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67969*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3401*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17404*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (874*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^7*k2^3*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1249*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (694406*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10916*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (884*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7344*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1136*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b3*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b8*f1^3*k1^5*k2^5*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3972*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1226*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (396959*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67969*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3401*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17404*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (874*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^3*k2^7*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1249*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*f1^3*k1*k2^9*q^(-2 + \[Nu]))/(18865*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (27334*b1*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4534*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20616*b2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b3*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1664*b5*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b8*f1^3*k1*k2^9*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13666*f1^4*k1*k2^9*q^(-2 + \[Nu]))/(5145*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (27*b1*f1^4*k1*k2^9*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b5*f1^4*k1*k2^9*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2263*f1^3*k2^11*q^(-2 + \[Nu]))/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1361*b1*f1^3*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1^2*f1^3*k2^11*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^3*k2^11*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*b1*b2*f1^3*k2^11*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b8*f1^3*k2^11*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k2^11*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1*f1^4*k2^11*q^(-2 + \[Nu]))/
    (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^4*k2^11*q^(-2 + \[Nu]))/(6*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b2*f1^4*k2^11*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^3*k1^15*q^(-2 + \[Nu]))/(385*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1*f1^3*k1^15*q^(-2 + \[Nu]))/
    (35*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^3*k1^13*k2*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (36*b1*f1^3*k1^13*k2*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k1^11*k2^3*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (36*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k1^9*k2^5*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (36*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^7*k2^7*q^(-2 + \[Nu]))/(77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (18*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k1^5*k2^9*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (36*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k1^3*k2^11*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (36*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^3*k1*k2^13*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (36*b1*f1^3*k1*k2^13*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^3*k2^15*q^(-2 + \[Nu]))/(385*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1*f1^3*k2^15*q^(-2 + \[Nu]))/
    (35*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^3*k1^13*q^(-2 + \[Nu]))/(21*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (619*b1*f1^3*k1^13*q^(-2 + \[Nu]))/
    (210*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1^2*f1^3*k1^13*q^(-2 + \[Nu]))/(35*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b2*f1^3*k1^13*q^(-2 + \[Nu]))/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^4*k1^13*q^(-2 + \[Nu]))/(105*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^4*k1^13*q^(-2 + \[Nu]))/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20964*f1^3*k1^11*k2*q^(-2 + \[Nu]))/(18865*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14713*b1*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
    (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (83*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8154*b2*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^11*k2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*f1^4*k1^11*k2*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*b1*f1^4*k1^11*k2*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41332*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9631*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1297*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27402*b2*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (708*b5*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1536*b8*f1^3*k1^9*k2^3*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (33*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (71884*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6171*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (657*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18758*b2*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b3*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b8*f1^3*k1^7*k2^5*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (71884*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6171*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (657*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18758*b2*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b3*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b8*f1^3*k1^5*k2^7*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41332*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9631*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1297*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27402*b2*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (708*b5*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1536*b8*f1^3*k1^3*k2^9*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (33*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20964*f1^3*k1*k2^11*q^(-2 + \[Nu]))/(18865*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14713*b1*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
    (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (83*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8154*b2*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1*k2^11*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*f1^4*k1*k2^11*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*b1*f1^4*k1*k2^11*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^3*k2^13*q^(-2 + \[Nu]))/(21*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (619*b1*f1^3*k2^13*q^(-2 + \[Nu]))/
    (210*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1^2*f1^3*k2^13*q^(-2 + \[Nu]))/(35*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b2*f1^3*k2^13*q^(-2 + \[Nu]))/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^4*k2^13*q^(-2 + \[Nu]))/(105*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^4*k2^13*q^(-2 + \[Nu]))/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (607*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (998*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^9*k3^2*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (137*b1*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (70*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^4*k1^9*k3^2*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (53729*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4126*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (778*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (173*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100421*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (948*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26636*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1664*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4264*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b8*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17782*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (517*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100421*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (948*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26636*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1664*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4264*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b8*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17782*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (517*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (53729*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4126*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (778*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (173*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (607*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (998*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k2^9*k3^2*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (137*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (70*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^4*k2^9*k3^2*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2242*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (74*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1546*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1^7*k3^4*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/(35*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
    (5*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k1^7*k3^4*q^(-2 + \[Nu]))/(k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (17404*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (95548*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (77584*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (716*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5632*b3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1424*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5632*b8*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5668*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (484*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (98*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4996*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41708*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6604*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15280*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1168*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1152*b3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4768*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b8*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20254*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (982*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (182*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b5*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17404*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (95548*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (77584*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (716*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5632*b3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1424*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5632*b8*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5668*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (484*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (98*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2242*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (74*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1546*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k2^7*k3^4*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/(35*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
    (5*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k2^7*k3^4*q^(-2 + \[Nu]))/(k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4069*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (275*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*b1^2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^5*k3^6*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (34*b1*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b2*f1^4*k1^5*k3^6*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8357*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3217*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4514*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1196*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3200*b8*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8357*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3217*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4514*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1196*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3200*b8*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (275*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*b1^2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k2^5*k3^6*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (34*b1*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b2*f1^4*k2^5*k3^6*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (2310*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (271*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^3*k3^8*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (61*b1*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/
    (14*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/
    (2*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b2*f1^4*k1^3*k3^8*q^(-2 + \[Nu]))/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26123*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (358*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (744*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (82*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (29*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b5*f1^4*k1*k2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (2310*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (271*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k2^3*k3^8*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (61*b1*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
    (14*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
    (2*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b2*f1^4*k2^3*k3^8*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*f1^3*k1*k3^10*q^(-2 + \[Nu]))/(6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*b2*f1^3*k1*k3^10*q^(-2 + \[Nu]))/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*f1^4*k1*k3^10*q^(-2 + \[Nu]))/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (15*b1*f1^4*k1*k3^10*q^(-2 + \[Nu]))/
    (14*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^4*k1*k3^10*q^(-2 + \[Nu]))/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (859*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*f1^3*k2*k3^10*q^(-2 + \[Nu]))/(42*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k2*k3^10*q^(-2 + \[Nu]))/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*f1^4*k2*k3^10*q^(-2 + \[Nu]))/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (15*b1*f1^4*k2*k3^10*q^(-2 + \[Nu]))/
    (14*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^4*k2*k3^10*q^(-2 + \[Nu]))/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*f1^3*k3^12*q^(-2 + \[Nu]))/
    (231*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k3^12*q^(-2 + \[Nu]))/
    (7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k3^12*q^(-2 + \[Nu]))/(7*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^3*k1*q^\[Nu])/(21*k2) - 
   (b1^2*f1^3*k1*q^\[Nu])/k2 + (3*b10*f1^3*k1*q^\[Nu])/k2 - 
   (37*b2*f1^3*k1*q^\[Nu])/(21*k2) + (b1*b2*f1^3*k1*q^\[Nu])/k2 + 
   (47*b3*f1^3*k1*q^\[Nu])/(21*k2) - (15*b5*f1^3*k1*q^\[Nu])/(7*k2) + 
   (b1*b5*f1^3*k1*q^\[Nu])/k2 + (110*b6*f1^3*k1*q^\[Nu])/(21*k2) + 
   (82*b8*f1^3*k1*q^\[Nu])/(21*k2) - (10*b1*f1^3*k2*q^\[Nu])/(21*k1) - 
   (b1^2*f1^3*k2*q^\[Nu])/k1 + (3*b10*f1^3*k2*q^\[Nu])/k1 - 
   (37*b2*f1^3*k2*q^\[Nu])/(21*k1) + (b1*b2*f1^3*k2*q^\[Nu])/k1 + 
   (47*b3*f1^3*k2*q^\[Nu])/(21*k1) - (15*b5*f1^3*k2*q^\[Nu])/(7*k1) + 
   (b1*b5*f1^3*k2*q^\[Nu])/k1 + (110*b6*f1^3*k2*q^\[Nu])/(21*k1) + 
   (82*b8*f1^3*k2*q^\[Nu])/(21*k1) + (3*b1*f1^3*k1^3*q^\[Nu])/(7*k2*k3^2) - 
   (3*b2*f1^3*k1^3*q^\[Nu])/(7*k2*k3^2) - (3*b5*f1^3*k1^3*q^\[Nu])/
    (7*k2*k3^2) - (6*b1*f1^3*k1*k2*q^\[Nu])/(7*k3^2) + 
   (6*b2*f1^3*k1*k2*q^\[Nu])/(7*k3^2) + (6*b5*f1^3*k1*k2*q^\[Nu])/(7*k3^2) + 
   (3*b1*f1^3*k2^3*q^\[Nu])/(7*k1*k3^2) - (3*b2*f1^3*k2^3*q^\[Nu])/
    (7*k1*k3^2) - (3*b5*f1^3*k2^3*q^\[Nu])/(7*k1*k3^2) - 
   (4*b1*f1^3*k3^2*q^\[Nu])/(7*k1*k2) + (4*b2*f1^3*k3^2*q^\[Nu])/(7*k1*k2) + 
   (4*b5*f1^3*k3^2*q^\[Nu])/(7*k1*k2) - (461*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (262*b1*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (394*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*b2*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^3*k1^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*f1^4*k1^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (46*b1*f1^4*k1^10*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k1^10*q^(-2 + \[Nu])*y)/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (316727*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (201146*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (306*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61576*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (204*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (976*b3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (976*b8*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17362*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32682*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34268*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2768*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23792*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1136*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1888*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1760*b8*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12364*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32682*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34268*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2768*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23792*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1136*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1888*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1760*b8*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12364*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (201146*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (306*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61576*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (204*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (976*b3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (976*b8*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17362*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (461*f1^3*k2^10*q^(-2 + \[Nu])*y)/(3465*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (262*b1*f1^3*k2^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (394*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b1*b2*f1^3*k2^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^3*k2^10*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^3*k2^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*f1^4*k2^10*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (46*b1*f1^4*k2^10*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k2^10*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^4*k2^10*q^(-2 + \[Nu])*y)/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (24*f1^3*k1^14*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1*f1^3*k1^14*q^(-2 + \[Nu])*y)/(35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (24*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (216*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (216*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k2^14*q^(-2 + \[Nu])*y)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1*f1^3*k2^14*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (464*f1^3*k1^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (571*b1*f1^3*k1^12*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k1^12*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b3*f1^3*k1^12*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*f1^4*k1^12*q^(-2 + \[Nu])*y)/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k1^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (165728*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8054*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1188*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16864*b2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b8*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (458288*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17747*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3998*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76276*b2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1648*b3*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b5*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1648*b8*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (630592*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5476*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (776*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (116864*b2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2752*b3*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2832*b5*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2752*b8*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (296*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (458288*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17747*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3998*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76276*b2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1648*b3*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b5*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1648*b8*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (165728*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8054*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1188*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16864*b2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b8*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (464*f1^3*k2^12*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (571*b1*f1^3*k2^12*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^2*f1^3*k2^12*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b3*f1^3*k2^12*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*f1^4*k2^12*q^(-2 + \[Nu])*y)/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^4*k2^12*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (787*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (33*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1658*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19732*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244292*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21696*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (272*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2560*b8*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9104*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (272*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (187906*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (562042*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14372*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (251368*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1376*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2880*b8*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5368*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19732*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244292*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21696*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (272*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2560*b8*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9104*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (272*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (693*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (33*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1658*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1102*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2494*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1286*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^4*k1^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (193694*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100214*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7862*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39472*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1888*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b8*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (63748*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (193694*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100214*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7862*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39472*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1888*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b8*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (63748*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b5*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1102*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2494*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1286*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (178*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (63*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b8*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (164*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b2*f1^4*k1^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (108292*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2278*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (708*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48224*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1504*b3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1504*b8*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52348*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (178*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (63*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b8*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (164*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b2*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*f1^3*k3^10*q^(-2 + \[Nu])*y)/(77*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1*f1^3*k3^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b2*f1^3*k3^10*q^(-2 + \[Nu])*y)/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*f1^4*k3^10*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^4*k3^10*q^(-2 + \[Nu])*y)/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (13336*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37432*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (480*b8*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6368*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (145568*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2816*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (134096*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (536944*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2528*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4544*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b8*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41312*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6368*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (145568*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2816*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13336*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37432*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (480*b8*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k1^13*k2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*f1^3*k1^13*k2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^3*k1*k2^13*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*f1^3*k1*k2^13*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1^11*k2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16704*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b3*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b8*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11136*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (848*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b8*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11136*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (848*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b8*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16704*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b3*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b8*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1*k2^11*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38144*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41744*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b8*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8096*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4352*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (73712*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41504*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4352*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (73712*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41504*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38144*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41744*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b8*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8096*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (51224*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26952*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b8*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49888*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18416*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1408*b3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1408*b8*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28032*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (51224*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26952*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b8*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49888*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54848*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2824*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (832*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b8*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5224*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54848*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2824*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (832*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b8*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5224*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (568*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b8*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1264*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5888*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7360*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1536*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2368*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5888*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5568*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1536*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5888*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5568*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1536*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5888*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7360*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1536*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2368*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1472*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1152*b2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5888*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4608*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4608*b2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b8*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8832*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6912*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6912*b2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b3*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b8*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5888*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4608*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4608*b2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b8*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1472*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1152*b2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18304*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7104*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5888*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15104*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4608*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b8*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4736*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18304*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7104*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5888*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3648*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1536*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7104*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5888*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3648*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1536*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7104*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 ((2263*b1*f1^2*k1^10*q^(-2 + \[Nu]))/(13860*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (79*b1^2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b8*f1^2*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k1^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k1^10*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (44799*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6889*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (166*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (207*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (396959*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26239*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (134*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (491*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (347203*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (379*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (2058*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3672*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216*b1*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1986*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (759*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (396959*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5399*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (893*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*b1*f1^2*k2^10*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (45809*b1^2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (6860*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34*b1^3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1*b2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b1*b3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b5*f1^2*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b1*b8*f1^2*k2^10*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1*f1^3*k2^10*q^(-2 + \[Nu]))/(5145*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (39*b1^2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^3*k2^10*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b5*f1^3*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2263*b1*f1^2*k2^12*q^(-2 + \[Nu]))/(13860*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (47*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (12*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k2^12*q^(-2 + \[Nu]))/(3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k2^12*q^(-2 + \[Nu]))/(210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k2^12*q^(-2 + \[Nu]))/(42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^2*k1^14*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^2*k1^14*q^(-2 + \[Nu]))/(35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu]))/
    (20*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (123*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu]))/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (123*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (27*b1^2*f1^2*k2^14*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^2*k2^16*q^(-2 + \[Nu]))/(385*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1^2*f1^2*k2^16*q^(-2 + \[Nu]))/
    (140*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^2*k1^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (20*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^2*k1^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k1^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1565*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (588*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1^3*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20666*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5009*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (201*b1^3*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1*b5*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11167*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (214*b1^3*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25261*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^3*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20666*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22789*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (81*b1^3*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1*b5*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*b1*f1^2*k2^12*q^(-2 + \[Nu]))/(18865*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12109*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k2^12*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4077*b1*b2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k2^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1^2*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k2^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1*f1^3*k2^12*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^2*k2^14*q^(-2 + \[Nu]))/(21*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (491*b1^2*f1^2*k2^14*q^(-2 + \[Nu]))/
    (420*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^2*k2^14*q^(-2 + \[Nu]))/(7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k2^14*q^(-2 + \[Nu]))/
    (210*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k2^14*q^(-2 + \[Nu]))/(28*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3439*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (33*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5771*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (107*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (57697*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (142*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (563*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10525*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2058*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (110*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (769*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36479*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (6860*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1^2*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1*b5*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*b1*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (4620*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1439*b1^2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (383*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18269*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (446*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4160*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (129*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2498*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47581*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (4116*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (694*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7640*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2384*b1*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10127*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (369*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152309*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (458*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b5*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b5*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^3*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*b1*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (3465*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (171*b1^2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (140*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*b1*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (70*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (979*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15559*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5177*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (980*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1^3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*b5*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*b1*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1247*b1^2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (241*b1^2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26123*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (372*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b5*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*b1*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (4620*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (12*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13*b1^2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*b2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*b1*f1^2*k3^10*q^(-2 + \[Nu]))/(13860*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^2*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*b1*f1^3*k3^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k3^10*q^(-2 + \[Nu]))/(4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*b2*f1^3*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*b1*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (13860*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (28*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*f1^2*k3^12*q^(-2 + \[Nu]))/(462*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^3*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23*b1^2*f1^2*q^\[Nu])/42 + 3*b1*b10*f1^2*q^\[Nu] - 
   (71*b1*b2*f1^2*q^\[Nu])/42 + (47*b1*b3*f1^2*q^\[Nu])/21 - 
   (29*b1*b5*f1^2*q^\[Nu])/14 + (110*b1*b6*f1^2*q^\[Nu])/21 + 
   (82*b1*b8*f1^2*q^\[Nu])/21 + (b1^2*f1^2*k2^2*q^\[Nu])/(14*k1^2) - 
   (b1*b2*f1^2*k2^2*q^\[Nu])/(14*k1^2) - (b1*b5*f1^2*k2^2*q^\[Nu])/
    (14*k1^2) + (3*b1^2*f1^2*k1^2*q^\[Nu])/(14*k3^2) - 
   (3*b1*b2*f1^2*k1^2*q^\[Nu])/(14*k3^2) - (3*b1*b5*f1^2*k1^2*q^\[Nu])/
    (14*k3^2) - (3*b1^2*f1^2*k2^2*q^\[Nu])/(7*k3^2) + 
   (3*b1*b2*f1^2*k2^2*q^\[Nu])/(7*k3^2) + (3*b1*b5*f1^2*k2^2*q^\[Nu])/
    (7*k3^2) + (3*b1^2*f1^2*k2^4*q^\[Nu])/(14*k1^2*k3^2) - 
   (3*b1*b2*f1^2*k2^4*q^\[Nu])/(14*k1^2*k3^2) - (3*b1*b5*f1^2*k2^4*q^\[Nu])/
    (14*k1^2*k3^2) - (2*b1^2*f1^2*k3^2*q^\[Nu])/(7*k1^2) + 
   (2*b1*b2*f1^2*k3^2*q^\[Nu])/(7*k1^2) + (2*b1*b5*f1^2*k3^2*q^\[Nu])/
    (7*k1^2) - (461*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8669*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (149*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22298*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (134*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (73529*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36376*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b5*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (461*b1*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (113*b1^2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*f1^3*k2^11*q^(-2 + \[Nu])*y)/(35*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^13*k2*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (153*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (69*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (70*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1*k2^13*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k2^15*q^(-2 + \[Nu])*y)/(385*k1*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1^2*f1^2*k2^15*q^(-2 + \[Nu])*y)/(70*k1*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (70*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (82864*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3761*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5141*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1^3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (315296*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9574*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (564*b1^3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58432*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1416*b1*b5*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (148*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14947*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1^3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82864*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1459*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94*b1^3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*b1*f1^2*k2^13*q^(-2 + \[Nu])*y)/(1155*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (431*b1^2*f1^2*k2^13*q^(-2 + \[Nu])*y)/(210*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k2^13*q^(-2 + \[Nu])*y)/(105*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k2^13*q^(-2 + \[Nu])*y)/(15*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^3*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1386*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (202*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (156*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93953*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88421*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (528*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125684*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1440*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2684*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (43306*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*b1*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (1386*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (719*b1^2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^3*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6941*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3887*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (656*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*b1*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (271*b1^2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (131*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54146*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (757*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26174*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (191*b1^2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b8*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (630*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*b1*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (379*b1^2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (154*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (51328*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67048*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (115832*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2272*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20656*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*b1*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37516*b1^2*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1*b8*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k2^14*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k2^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1308*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1264*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (496*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*b1*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36016*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6304*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10000*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9208*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68296*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14016*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (124*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4096*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10112*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4416*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3456*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11392*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/5 + 
 (1/35 + (4*y^2)/35)*((2263*f1^3*k1^10*q^(-2 + \[Nu]))/
    (13860*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (95*b1*f1^3*k1^10*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (146*b1^2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^3*k1^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*b2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^10*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b8*f1^3*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k1^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k1^10*q^(-2 + \[Nu]))/
    (60*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^4*k1^10*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b2*f1^4*k1^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (612337*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (496*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b8*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (811*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b5*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (396959*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1667*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (1372*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (292*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (347203*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7909*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1364*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3672*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (976*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b8*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1986*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1261*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (396959*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (138329*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2258*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (112*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (652*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b8*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (273*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (20*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44799*f1^3*k2^10*q^(-2 + \[Nu]))/(37730*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (141971*b1*f1^3*k2^10*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (422*b1^2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^3*f1^3*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b3*f1^3*k2^10*q^(-2 + \[Nu]))/(2205*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (832*b5*f1^3*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b8*f1^3*k2^10*q^(-2 + \[Nu]))/(147*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6833*f1^4*k2^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (209*b1*f1^4*k2^10*q^(-2 + \[Nu]))/(140*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1^4*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b5*f1^4*k2^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2263*f1^3*k2^12*q^(-2 + \[Nu]))/
    (13860*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (47*b1*f1^3*k2^12*q^(-2 + \[Nu]))/(12*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^3*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4*b1*b2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k2^12*q^(-2 + \[Nu]))/(210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5*b1*f1^4*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^4*k2^12*q^(-2 + \[Nu]))/(42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*f1^3*k1^14*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (39*b1*f1^3*k1^14*q^(-2 + \[Nu]))/(70*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*f1^3*k1^12*k2^2*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (387*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^10*k2^4*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (687*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^8*k2^6*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (363*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^3*k1^6*k2^8*q^(-2 + \[Nu]))/(77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (81*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu]))/
    (28*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^4*k2^10*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (687*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^2*k2^12*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (363*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu]))/
    (140*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1*f1^3*k2^14*q^(-2 + \[Nu]))/
    (20*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^3*k2^16*q^(-2 + \[Nu]))/(385*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*b1*f1^3*k2^16*q^(-2 + \[Nu]))/
    (140*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^3*k1^12*q^(-2 + \[Nu]))/(21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (73*b1*f1^3*k1^12*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (177*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^3*k1^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k1^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1*f1^4*k1^12*q^(-2 + \[Nu]))/(14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10482*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31681*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (83*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20666*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88841*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b5*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b8*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/(10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (67*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118529*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (361*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35942*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58571*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (473*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (107*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20666*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1067*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (147*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b5*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b8*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/(10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (37*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (28*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10482*f1^3*k2^12*q^(-2 + \[Nu]))/(18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (7237*b1*f1^3*k2^12*q^(-2 + \[Nu]))/
    (2940*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (562*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b2*f1^3*k2^12*q^(-2 + \[Nu]))/(1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (256*b3*f1^3*k2^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^3*k2^12*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (256*b8*f1^3*k2^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*f1^4*k2^12*q^(-2 + \[Nu]))/(210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1*f1^4*k2^12*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^3*k2^14*q^(-2 + \[Nu]))/(21*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (491*b1*f1^3*k2^14*q^(-2 + \[Nu]))/
    (420*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^3*k2^14*q^(-2 + \[Nu]))/(7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k2^14*q^(-2 + \[Nu]))/
    (210*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^4*k2^14*q^(-2 + \[Nu]))/(28*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3439*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8767*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (242*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (577*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1216679*f1^3*k1^6*k2^2*k3^2*
     q^(-2 + \[Nu]))/(679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (360973*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1112*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b8*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1429*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (34*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1601*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3476*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (66*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1576*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (449*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (30*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6497*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70971*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (62*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1352*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b8*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1537*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216679*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (295891*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (974*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50*b1^3*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b5*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1391*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3439*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (4620*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1439*b1*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/(210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^4*k2^10*k3^2*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1121*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3465*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (596*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2908*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/(70*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (453*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8702*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (486233*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (224*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (968*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4160*b8*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1179*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (98*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b5*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2498*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (119251*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (4116*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1874*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7640*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2384*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b8*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10127*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1419*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (133*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b5*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2041*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4444*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^3*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (328*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b3*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b5*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b8*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (593*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b5*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1121*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/(3465*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (171*b1*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (140*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/(70*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^4*k2^8*k3^4*q^(-2 + \[Nu]))/(2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4069*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2027*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1637*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46327*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (397*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (424*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b8*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (199*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (395819*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22867*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b5*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b8*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/(1470*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (7*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4069*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/(6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1247*b1*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/(42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (241*b1*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b2*f1^4*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (4620*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (115*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (89*b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26123*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (389*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (372*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (93*b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b5*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2263*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/(4620*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (11*b1*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (12*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*f1^4*k2^4*k3^8*q^(-2 + \[Nu]))/(42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (13*b1*f1^4*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b2*f1^4*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (859*f1^3*k3^10*q^(-2 + \[Nu]))/(13860*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (31*b1*f1^3*k3^10*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^3*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*b2*f1^3*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*f1^4*k3^10*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (31*b1*f1^4*k3^10*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^4*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (859*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (13860*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (5*f1^4*k2^2*k3^10*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^4*k2^2*k3^10*q^(-2 + \[Nu]))/
    (28*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^4*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*f1^3*k3^12*q^(-2 + \[Nu]))/(462*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*f1^3*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^4*k3^12*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b2*f1^4*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23*b1*f1^3*q^\[Nu])/42 - 2*b1^2*f1^3*q^\[Nu] + 3*b10*f1^3*q^\[Nu] - 
   (71*b2*f1^3*q^\[Nu])/42 + 2*b1*b2*f1^3*q^\[Nu] + (47*b3*f1^3*q^\[Nu])/21 - 
   (29*b5*f1^3*q^\[Nu])/14 + 2*b1*b5*f1^3*q^\[Nu] + 
   (110*b6*f1^3*q^\[Nu])/21 + (82*b8*f1^3*q^\[Nu])/21 + 
   (b1*f1^3*k2^2*q^\[Nu])/(14*k1^2) - (b2*f1^3*k2^2*q^\[Nu])/(14*k1^2) - 
   (b5*f1^3*k2^2*q^\[Nu])/(14*k1^2) + (3*b1*f1^3*k1^2*q^\[Nu])/(14*k3^2) - 
   (3*b2*f1^3*k1^2*q^\[Nu])/(14*k3^2) - (3*b5*f1^3*k1^2*q^\[Nu])/(14*k3^2) - 
   (3*b1*f1^3*k2^2*q^\[Nu])/(7*k3^2) + (3*b2*f1^3*k2^2*q^\[Nu])/(7*k3^2) + 
   (3*b5*f1^3*k2^2*q^\[Nu])/(7*k3^2) + (3*b1*f1^3*k2^4*q^\[Nu])/
    (14*k1^2*k3^2) - (3*b2*f1^3*k2^4*q^\[Nu])/(14*k1^2*k3^2) - 
   (3*b5*f1^3*k2^4*q^\[Nu])/(14*k1^2*k3^2) - (2*b1*f1^3*k3^2*q^\[Nu])/
    (7*k1^2) + (2*b2*f1^3*k3^2*q^\[Nu])/(7*k1^2) + 
   (2*b5*f1^3*k3^2*q^\[Nu])/(7*k1^2) - (461*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (6930*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (251*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b8*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (349*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (722563*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1^3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (920*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b5*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b8*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (211*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (956*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4384*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (112*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b8*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16341*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (134823*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1^3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b5*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b8*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (394*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (316727*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13273*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1052*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b8*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (433*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (461*f1^3*k2^11*q^(-2 + \[Nu])*y)/(6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (113*b1*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^3*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*b2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k2^11*q^(-2 + \[Nu])*y)/(45*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b8*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*f1^4*k2^11*q^(-2 + \[Nu])*y)/(35*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^4*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^4*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (12*f1^3*k1^13*k2*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (33*b1*f1^3*k1^13*k2*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81*b1*f1^3*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (522*b1*f1^3*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (291*b1*f1^3*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (117*b1*f1^3*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (531*b1*f1^3*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (70*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^3*k1*k2^13*q^(-2 + \[Nu])*y)/(77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*f1^3*k1*k2^13*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k2^15*q^(-2 + \[Nu])*y)/(385*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (9*b1*f1^3*k2^15*q^(-2 + \[Nu])*y)/
    (70*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/(1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (47*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/(15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (6*b1*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82864*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (601*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b8*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3013*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1412*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b3*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b8*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (315296*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12766*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2928*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58432*b2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b3*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1416*b5*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b8*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (148*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (229144*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16459*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1470*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2822*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b3*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b8*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (82864*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (647*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1076*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b5*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b8*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^3*k2^13*q^(-2 + \[Nu])*y)/(1155*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (431*b1*f1^3*k2^13*q^(-2 + \[Nu])*y)/
    (210*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^3*k2^13*q^(-2 + \[Nu])*y)/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b3*f1^3*k2^13*q^(-2 + \[Nu])*y)/
    (105*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k2^13*q^(-2 + \[Nu])*y)/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (f1^4*k2^13*q^(-2 + \[Nu])*y)/
    (15*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^4*k2^13*q^(-2 + \[Nu])*y)/(7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (787*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1386*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (191*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (395546*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6568*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1096*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b8*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93953*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (485381*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10552*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125684*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (408*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1440*b8*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2684*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9866*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41738*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4696*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (120*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b8*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (198*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (787*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (1386*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (719*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b2*f1^4*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1155*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1047*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2668*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (785543*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6596*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b8*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96847*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23102*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (276*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b8*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b5*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (551*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (271*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b8*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b2*f1^4*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1577*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (234*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b8*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (386*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (54146*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13829*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1556*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b8*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26174*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (149*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (89*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (191*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b8*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*f1^4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (630*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (437*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31*b1*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (379*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*f1^4*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1*f1^4*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^4*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/(154*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b2*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^4*k2*k3^10*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b2*f1^4*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (119516*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b8*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (253952*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67048*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (421112*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (408*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2272*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b3*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b8*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20656*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3184*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29664*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6668*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37516*b1*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b3*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b8*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*f1^4*k2^10*q^(-2 + \[Nu])*y^2)/(5145*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*b1*f1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^3*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^3*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^3*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*f1^3*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^3*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*f1^3*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^3*k2^14*q^(-2 + \[Nu])*y^2)/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (12*b1*f1^3*k2^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1496*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3396*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b2*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b3*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b8*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5568*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4792*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b8*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8352*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2344*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b2*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b3*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b8*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2784*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/(18865*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^4*k2^12*q^(-2 + \[Nu])*y^2)/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (19072*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*
     y^2)/(56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (300416*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4304*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2176*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100768*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b8*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10000*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b3*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b8*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12396*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b8*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9208*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140632*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b8*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14016*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25612*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (124*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b3*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b8*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27424*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*f1^4*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*f1^4*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9600*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3968*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9344*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10112*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*f1^4*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4416*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3456*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b3*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b8*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^3*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7040*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26496*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8832*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2944*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (736*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 ((-25093*b1^2*f1*k1^10*q^(-2 + \[Nu]))/
    (22638*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5947*b1^3*f1*k1^10*q^(-2 + \[Nu]))/(1470*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (240*b1*b11*f1*k1^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1*b2*f1*k1^10*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1^2*b2*f1*k1^10*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b3*f1*k1^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1696*b1^2*b3*f1*k1^10*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27722*b1*b4*f1*k1^10*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1*b5*f1*k1^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (832*b1^2*b5*f1*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (228*b1*b7*f1*k1^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (38*b1*b8*f1*k1^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b1^2*b8*f1*k1^10*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24641*b1*b9*f1*k1^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1^2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (271*b1^3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b5*f1^2*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (757*b1^2*f1*k1^12*q^(-2 + \[Nu]))/(1980*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (159*b1^3*f1*k1^12*q^(-2 + \[Nu]))/
    (70*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k1^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1^2*b2*f1*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k1^12*q^(-2 + \[Nu]))/(35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k1^12*q^(-2 + \[Nu]))/
    (35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1*b8*f1*k1^12*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*b9*f1*k1^12*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k1^12*q^(-2 + \[Nu]))/(12*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (246479*b1^2*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^3*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (720*b1*b11*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1^2*b2*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b3*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21254*b1*b4*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (177*b1*b5*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b5*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (404*b1*b7*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (366*b1*b8*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b8*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6119*b1*b9*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (377*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (276286*b1^2*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (529*b1^3*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (480*b1*b11*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3672*b1^2*b2*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b3*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1^2*b3*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39274*b1*b4*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216*b1^2*b5*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b7*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b8*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1^2*b8*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2977*b1*b9*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1986*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (689*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (518531*b1^2*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1^3*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (480*b1*b11*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1^2*b2*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b3*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39274*b1*b4*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b5*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b7*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b8*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b8*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2977*b1*b9*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (377*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (103319*b1^2*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5863*b1^3*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (720*b1*b11*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1^2*b2*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b3*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1^2*b3*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21254*b1*b4*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (177*b1*b5*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1^2*b5*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (404*b1*b7*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (366*b1*b8*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1^2*b8*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6119*b1*b9*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (271*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23497*b1^2*f1*k2^10*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (79*b1^3*f1*k2^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (240*b1*b11*f1*k2^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1*b2*f1*k2^10*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*b2*f1*k2^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b3*f1*k2^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1^2*b3*f1*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27722*b1*b4*f1*k2^10*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1*b5*f1*k2^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (228*b1*b7*f1*k2^10*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b8*f1*k2^10*q^(-2 + \[Nu]))/(49*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1^2*b8*f1*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24641*b1*b9*f1*k2^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^2*f1^2*k2^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23*b1^2*f1*k2^12*q^(-2 + \[Nu]))/(105*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1*k2^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k2^12*q^(-2 + \[Nu]))/(35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k2^12*q^(-2 + \[Nu]))/
    (35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1*b8*f1*k2^12*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*b9*f1*k2^12*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1^2*f1*k1^14*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^14*q^(-2 + \[Nu]))/(35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^2*f1*k1^16*q^(-2 + \[Nu]))/
    (385*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^3*f1*k1^16*q^(-2 + \[Nu]))/(35*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (12*b1^2*f1*k1^12*k2^2*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^12*k2^2*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^10*k2^4*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^10*k2^4*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^2*f1*k1^8*k2^6*q^(-2 + \[Nu]))/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^3*f1*k1^8*k2^6*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^6*k2^8*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^6*k2^8*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^4*k2^10*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^4*k2^10*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^2*k2^12*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^2*k2^12*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^3*f1*k2^14*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8326*b1^2*f1*k1^12*q^(-2 + \[Nu]))/(18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2823*b1^3*f1*k1^12*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1^2*b2*f1*k1^12*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^12*q^(-2 + \[Nu]))/(385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (118*b1^2*b5*f1*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1*k1^14*q^(-2 + \[Nu]))/(15*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k1^14*q^(-2 + \[Nu]))/
    (20*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1*k1^14*q^(-2 + \[Nu]))/(7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k1^14*q^(-2 + \[Nu]))/
    (385*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k1^14*q^(-2 + \[Nu]))/(5*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k1^14*q^(-2 + \[Nu]))/
    (210*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3702*b1^2*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2883*b1^3*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1^2*b2*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1^2*b5*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b8*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8482*b1^2*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (11319*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (991*b1^3*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1^2*b2*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b3*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b8*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19772*b1^2*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (991*b1^3*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1^2*b2*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b3*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b4*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b8*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b9*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3702*b1^2*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2883*b1^3*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1^2*b2*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1^2*b5*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b8*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12638*b1^2*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2823*b1^3*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1^2*b2*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1^2*b5*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1*k2^12*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k2^12*q^(-2 + \[Nu]))/
    (20*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1*k2^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*b4*f1*k2^12*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k2^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1*k2^14*q^(-2 + \[Nu]))/(35*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k2^14*q^(-2 + \[Nu]))/
    (385*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k2^14*q^(-2 + \[Nu]))/(5*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (803497*b1^2*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12379*b1^3*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*b1*b11*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5154*b1*b2*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1^2*b2*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41392*b1*b4*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b5*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1^2*b5*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b7*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (353896*b1*b9*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (509*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1^2*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8167*b1^2*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (503*b1^3*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*b2*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b3*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (105*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b4*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b7*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b8*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b1*b9*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21325*b1^2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (19404*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (953*b1^3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4351*b1*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1^2*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52928*b1*b4*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b5*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1^2*b5*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b7*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32552*b1*b9*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (113*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (63953*b1^2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1^3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b1*b11*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1836*b1*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1^2*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1648*b1*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (735968*b1*b4*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*b5*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1^2*b5*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b7*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1648*b1*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (335024*b1*b9*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (113*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (558982*b1^2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12323*b1^3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4351*b1*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1^2*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52928*b1*b4*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b5*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1^2*b5*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b7*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32552*b1*b9*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (509*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26249*b1^2*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (19404*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (33*b1^3*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*b1*b11*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5154*b1*b2*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41392*b1*b4*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b5*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b7*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (353896*b1*b9*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (547*b1^2*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (1260*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*b2*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b3*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (105*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b4*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b7*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b8*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b1*b9*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320879*b1^2*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (226380*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5059*b1^3*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1^2*b2*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b3*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1^2*b3*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67778*b1*b4*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b5*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*b5*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (524*b1*b7*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b8*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1^2*b8*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88439*b1*b9*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*b5*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1207*b1^2*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2772*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^3*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (6*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b3*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b1*b4*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (385*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b8*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k1^8*k3^4*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (97*b1^2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (70*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^3*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1623241*b1^2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8116*b1^3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6659*b1*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7640*b1^2*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1^2*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5452*b1*b4*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1066*b1*b5*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2384*b1^2*b5*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1^2*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26638*b1*b9*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10127*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1^2*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (385853*b1^2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (67914*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5017*b1^3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6659*b1*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1^2*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1^2*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5452*b1*b4*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1066*b1*b5*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*b5*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4160*b1^2*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26638*b1*b9*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31543*b1^2*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (383*b1^3*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b3*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b3*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67778*b1*b4*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b5*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (524*b1*b7*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b8*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b8*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88439*b1*b9*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1^2*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b3*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b1*b4*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (385*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b8*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k2^8*k3^4*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1205551*b1^2*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2759*b1^3*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (588*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b11*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19396*b1*b2*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1^2*b2*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37160*b1*b4*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (356*b1*b5*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1^2*b5*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4544*b1*b7*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1^2*b8*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74876*b1*b9*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1^3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7391*b1^2*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (47*b1^3*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (20*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*b2*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3465*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b7*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b9*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1^2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^3*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (6*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*b2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (773093*b1^2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (113190*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13739*b1^3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b1*b11*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3820*b1*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1^2*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1^2*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (517984*b1*b4*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1192*b1*b5*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1^2*b5*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2656*b1*b7*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1^2*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (858992*b1*b9*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48053*b1^2*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (979*b1^3*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b11*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19396*b1*b2*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*b2*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37160*b1*b4*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (356*b1*b5*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4544*b1*b7*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74876*b1*b9*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (151*b1^2*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3465*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b7*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b9*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9077*b1^2*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (4851*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^3*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b11*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (372*b1^2*b2*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1*b3*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316538*b1*b4*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (299*b1*b5*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b5*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1732*b1*b7*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (370*b1*b8*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b8*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (381319*b1*b9*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1^3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b5*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12751*b1^2*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (13860*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (25*b1^3*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (206*b1*b4*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (693*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b7*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b8*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1*b9*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (9*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1^2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*b2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58939*b1^2*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (32340*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62*b1^3*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b11*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1*b3*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316538*b1*b4*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (299*b1*b5*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1732*b1*b7*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (370*b1*b8*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b8*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (381319*b1*b9*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (271*b1^2*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (630*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (206*b1*b4*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (693*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b7*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b8*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1*b9*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (9*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39*b1^2*f1*k3^10*q^(-2 + \[Nu]))/(1540*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^3*f1*k3^10*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (186*b1*b2*f1*k3^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b2*f1*k3^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1*b3*f1*k3^10*q^(-2 + \[Nu]))/(315*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5776*b1*b4*f1*k3^10*q^(-2 + \[Nu]))/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*b7*f1*k3^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1*b8*f1*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8648*b1*b9*f1*k3^10*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^2*k3^10*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^3*f1^2*k3^10*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (479*b1^2*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^3*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b3*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (33*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b8*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1*k2^2*k3^10*q^(-2 + \[Nu]))/(140*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b3*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (33*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b8*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (25*b1^2*f1*k3^12*q^(-2 + \[Nu]))/(252*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1*k3^12*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k3^12*q^(-2 + \[Nu]))/(63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (38*b1*b4*f1*k3^12*q^(-2 + \[Nu]))/
    (495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b7*f1*k3^12*q^(-2 + \[Nu]))/(63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b8*f1*k3^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (73*b1*b9*f1*k3^12*q^(-2 + \[Nu]))/(45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (305*b1^2*f1*k3^12*q^(-2 + \[Nu]))/
    (2772*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1*k3^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1*k3^12*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k3^12*q^(-2 + \[Nu]))/(63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (38*b1*b4*f1*k3^12*q^(-2 + \[Nu]))/
    (495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b7*f1*k3^12*q^(-2 + \[Nu]))/(63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b8*f1*k3^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (73*b1*b9*f1*k3^12*q^(-2 + \[Nu]))/(45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1^2*k3^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1*k3^14*q^(-2 + \[Nu]))/
    (42*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b4*f1*k3^14*q^(-2 + \[Nu]))/(231*k1^2*k2^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k3^14*q^(-2 + \[Nu]))/(3*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1*q^\[Nu])/105 - 
   (23*b1^3*f1*q^\[Nu])/42 - 9*b1*b10*f1*q^\[Nu] + 3*b1^2*b10*f1*q^\[Nu] + 
   (34*b1*b11*f1*q^\[Nu])/5 - (262*b1*b2*f1*q^\[Nu])/735 - 
   (71*b1^2*b2*f1*q^\[Nu])/42 - (614*b1*b3*f1*q^\[Nu])/105 + 
   (47*b1^2*b3*f1*q^\[Nu])/21 + (4588*b1*b4*f1*q^\[Nu])/735 - 
   (10*b1*b5*f1*q^\[Nu])/21 - (29*b1^2*b5*f1*q^\[Nu])/14 - 
   (106*b1*b6*f1*q^\[Nu])/7 + (110*b1^2*b6*f1*q^\[Nu])/21 + 
   (18238*b1*b7*f1*q^\[Nu])/735 - (134*b1*b8*f1*q^\[Nu])/21 + 
   (82*b1^2*b8*f1*q^\[Nu])/21 + (766*b1*b9*f1*q^\[Nu])/49 + 
   (16*b1^2*f1*k1^2*q^\[Nu])/(63*k2^2) + (b1^3*f1*k1^2*q^\[Nu])/(14*k2^2) - 
   (3*b1*b10*f1*k1^2*q^\[Nu])/(2*k2^2) + (5*b1*b11*f1*k1^2*q^\[Nu])/
    (7*k2^2) + (17*b1*b2*f1*k1^2*q^\[Nu])/(21*k2^2) - 
   (b1^2*b2*f1*k1^2*q^\[Nu])/(14*k2^2) - (83*b1*b3*f1*k1^2*q^\[Nu])/
    (63*k2^2) + (16*b1*b4*f1*k1^2*q^\[Nu])/(63*k2^2) + 
   (b1*b5*f1*k1^2*q^\[Nu])/k2^2 - (b1^2*b5*f1*k1^2*q^\[Nu])/(14*k2^2) - 
   (61*b1*b6*f1*k1^2*q^\[Nu])/(21*k2^2) + (43*b1*b7*f1*k1^2*q^\[Nu])/
    (63*k2^2) - (17*b1*b8*f1*k1^2*q^\[Nu])/(7*k2^2) + 
   (55*b1*b9*f1*k1^2*q^\[Nu])/(63*k2^2) + (16*b1^2*f1*k2^2*q^\[Nu])/
    (63*k1^2) - (3*b1*b10*f1*k2^2*q^\[Nu])/(2*k1^2) + 
   (5*b1*b11*f1*k2^2*q^\[Nu])/(7*k1^2) + (17*b1*b2*f1*k2^2*q^\[Nu])/
    (21*k1^2) - (83*b1*b3*f1*k2^2*q^\[Nu])/(63*k1^2) + 
   (16*b1*b4*f1*k2^2*q^\[Nu])/(63*k1^2) + (b1*b5*f1*k2^2*q^\[Nu])/k1^2 - 
   (61*b1*b6*f1*k2^2*q^\[Nu])/(21*k1^2) + (43*b1*b7*f1*k2^2*q^\[Nu])/
    (63*k1^2) - (17*b1*b8*f1*k2^2*q^\[Nu])/(7*k1^2) + 
   (55*b1*b9*f1*k2^2*q^\[Nu])/(63*k1^2) - (b1^2*f1*k1^2*q^\[Nu])/(63*k3^2) - 
   (3*b1^3*f1*k1^2*q^\[Nu])/(7*k3^2) + (5*b1*b11*f1*k1^2*q^\[Nu])/(14*k3^2) + 
   (3*b1^2*b2*f1*k1^2*q^\[Nu])/(7*k3^2) - (b1*b3*f1*k1^2*q^\[Nu])/(63*k3^2) + 
   (2*b1*b4*f1*k1^2*q^\[Nu])/(63*k3^2) + (3*b1^2*b5*f1*k1^2*q^\[Nu])/
    (7*k3^2) + (2*b1*b7*f1*k1^2*q^\[Nu])/(63*k3^2) - 
   (5*b1*b8*f1*k1^2*q^\[Nu])/(21*k3^2) + (17*b1*b9*f1*k1^2*q^\[Nu])/
    (63*k3^2) + (b1^2*f1*k1^4*q^\[Nu])/(63*k2^2*k3^2) + 
   (3*b1^3*f1*k1^4*q^\[Nu])/(14*k2^2*k3^2) - (5*b1*b11*f1*k1^4*q^\[Nu])/
    (14*k2^2*k3^2) - (3*b1^2*b2*f1*k1^4*q^\[Nu])/(14*k2^2*k3^2) + 
   (b1*b3*f1*k1^4*q^\[Nu])/(63*k2^2*k3^2) - (2*b1*b4*f1*k1^4*q^\[Nu])/
    (63*k2^2*k3^2) - (3*b1^2*b5*f1*k1^4*q^\[Nu])/(14*k2^2*k3^2) - 
   (2*b1*b7*f1*k1^4*q^\[Nu])/(63*k2^2*k3^2) + (5*b1*b8*f1*k1^4*q^\[Nu])/
    (21*k2^2*k3^2) - (17*b1*b9*f1*k1^4*q^\[Nu])/(63*k2^2*k3^2) - 
   (b1^2*f1*k2^2*q^\[Nu])/(63*k3^2) + (3*b1^3*f1*k2^2*q^\[Nu])/(14*k3^2) + 
   (5*b1*b11*f1*k2^2*q^\[Nu])/(14*k3^2) - (3*b1^2*b2*f1*k2^2*q^\[Nu])/
    (14*k3^2) - (b1*b3*f1*k2^2*q^\[Nu])/(63*k3^2) + 
   (2*b1*b4*f1*k2^2*q^\[Nu])/(63*k3^2) - (3*b1^2*b5*f1*k2^2*q^\[Nu])/
    (14*k3^2) + (2*b1*b7*f1*k2^2*q^\[Nu])/(63*k3^2) - 
   (5*b1*b8*f1*k2^2*q^\[Nu])/(21*k3^2) + (17*b1*b9*f1*k2^2*q^\[Nu])/
    (63*k3^2) + (b1^2*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) - 
   (5*b1*b11*f1*k2^4*q^\[Nu])/(14*k1^2*k3^2) + (b1*b3*f1*k2^4*q^\[Nu])/
    (63*k1^2*k3^2) - (2*b1*b4*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) - 
   (2*b1*b7*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) + (5*b1*b8*f1*k2^4*q^\[Nu])/
    (21*k1^2*k3^2) - (17*b1*b9*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) - 
   (31*b1^2*f1*k3^2*q^\[Nu])/(126*k1^2) + (3*b1*b10*f1*k3^2*q^\[Nu])/
    (2*k1^2) - (5*b1*b11*f1*k3^2*q^\[Nu])/(14*k1^2) - 
   (17*b1*b2*f1*k3^2*q^\[Nu])/(21*k1^2) + (185*b1*b3*f1*k3^2*q^\[Nu])/
    (126*k1^2) - (26*b1*b4*f1*k3^2*q^\[Nu])/(63*k1^2) - 
   (b1*b5*f1*k3^2*q^\[Nu])/k1^2 + (67*b1*b6*f1*k3^2*q^\[Nu])/(21*k1^2) - 
   (80*b1*b7*f1*k3^2*q^\[Nu])/(63*k1^2) + (46*b1*b8*f1*k3^2*q^\[Nu])/
    (21*k1^2) - (59*b1*b9*f1*k3^2*q^\[Nu])/(63*k1^2) - 
   (31*b1^2*f1*k3^2*q^\[Nu])/(126*k2^2) - (2*b1^3*f1*k3^2*q^\[Nu])/(7*k2^2) + 
   (3*b1*b10*f1*k3^2*q^\[Nu])/(2*k2^2) - (5*b1*b11*f1*k3^2*q^\[Nu])/
    (14*k2^2) - (17*b1*b2*f1*k3^2*q^\[Nu])/(21*k2^2) + 
   (2*b1^2*b2*f1*k3^2*q^\[Nu])/(7*k2^2) + (185*b1*b3*f1*k3^2*q^\[Nu])/
    (126*k2^2) - (26*b1*b4*f1*k3^2*q^\[Nu])/(63*k2^2) - 
   (b1*b5*f1*k3^2*q^\[Nu])/k2^2 + (2*b1^2*b5*f1*k3^2*q^\[Nu])/(7*k2^2) + 
   (67*b1*b6*f1*k3^2*q^\[Nu])/(21*k2^2) - (80*b1*b7*f1*k3^2*q^\[Nu])/
    (63*k2^2) + (46*b1*b8*f1*k3^2*q^\[Nu])/(21*k2^2) - 
   (59*b1*b9*f1*k3^2*q^\[Nu])/(63*k2^2) - (b1^2*f1*k3^4*q^\[Nu])/
    (42*k1^2*k2^2) - (b1*b3*f1*k3^4*q^\[Nu])/(6*k1^2*k2^2) + 
   (4*b1*b4*f1*k3^4*q^\[Nu])/(21*k1^2*k2^2) - (2*b1*b6*f1*k3^4*q^\[Nu])/
    (7*k1^2*k2^2) + (13*b1*b7*f1*k3^4*q^\[Nu])/(21*k1^2*k2^2) + 
   (b1*b9*f1*k3^4*q^\[Nu])/(3*k1^2*k2^2) + 
   (3631*b1^2*f1*k1^11*q^(-2 + \[Nu])*y)/
    (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1*k1^11*q^(-2 + \[Nu])*y)/(21*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*b11*f1*k1^11*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k1^11*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1^2*b2*f1*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1*k1^11*q^(-2 + \[Nu])*y)/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b3*f1*k1^11*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1*b4*f1*k1^11*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1^11*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k1^11*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b8*f1*k1^11*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (74*b1*b9*f1*k1^11*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1^11*q^(-2 + \[Nu])*y)/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (347629*b1^2*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (146*b1^3*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b11*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4216*b1*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1^2*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1992*b1*b4*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b7*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19812*b1*b9*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93119*b1^2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4622*b1^3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*b11*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19069*b1*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1^2*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1^2*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23196*b1*b4*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1^2*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13674*b1*b9*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (178691*b1^2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7768*b1^3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b11*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29216*b1*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1^2*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (928*b1*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1^2*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130352*b1*b4*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (708*b1*b5*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b7*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (928*b1*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1^2*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59720*b1*b9*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1169579*b1^2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1093*b1^3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*b11*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19069*b1*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1^2*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23196*b1*b4*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13674*b1*b9*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19627*b1^2*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (9702*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^3*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b11*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4216*b1*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1992*b1*b4*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b7*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19812*b1*b9*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62*b1^2*f1*k2^11*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*b11*f1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k2^11*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*b3*f1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1*b4*f1*k2^11*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k2^11*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (74*b1*b9*f1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^15*q^(-2 + \[Nu])*y)/(385*k2*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^15*q^(-2 + \[Nu])*y)/(35*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1^2*f1*k1^13*k2*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^13*k2*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^2*f1*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^3*f1*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^2*f1*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^3*f1*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1*k2^13*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1*k2^13*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*f1*k1^13*q^(-2 + \[Nu])*y)/(231*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^3*f1*k1^13*q^(-2 + \[Nu])*y)/(70*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*b2*f1*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k1^13*q^(-2 + \[Nu])*y)/(105*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^13*q^(-2 + \[Nu])*y)/(385*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^13*q^(-2 + \[Nu])*y)/(5*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k1^13*q^(-2 + \[Nu])*y)/
    (15*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50524*b1^2*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1249*b1^3*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1^2*b2*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1^2*b8*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170932*b1^2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3881*b1^3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1^2*b2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*b4*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b8*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*b9*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282956*b1^2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2062*b1^3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58432*b1^2*b2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1^2*b3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1416*b1^2*b5*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1^2*b8*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (148*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (261484*b1^2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3881*b1^3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1^2*b2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b8*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (141076*b1^2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1249*b1^3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1^2*b2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*b4*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1^2*b8*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*b9*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (892*b1^2*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^3*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (70*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1*k2^13*q^(-2 + \[Nu])*y)/(35*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*b4*f1*k2^13*q^(-2 + \[Nu])*y)/
    (385*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k2^13*q^(-2 + \[Nu])*y)/(5*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1094*b1^2*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (727*b1^3*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b11*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2248*b1*b4*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b1*b9*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (447131*b1^2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3142*b1^3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b11*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15394*b1*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1^2*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61144*b1*b4*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*b5*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1^2*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12548*b1*b9*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (270694*b1^2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1661*b1^3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5948*b1*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125684*b1^2*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16336*b1*b4*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1440*b1^2*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10344*b1*b9*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2684*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27365*b1^2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*b1^3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5948*b1*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1^2*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16336*b1*b4*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*b5*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1^2*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10344*b1*b9*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (992*b1^2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b11*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15394*b1*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61144*b1*b4*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12548*b1*b9*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*b1^2*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b11*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2248*b1*b4*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b1*b9*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4097*b1^2*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (278*b1^3*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (332*b1*b4*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (693*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4178*b1*b9*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58447*b1^2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (928*b1^3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b11*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5424*b1*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1^2*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (101072*b1*b4*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b7*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9384*b1*b9*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (808982*b1^2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1346*b1^3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62842*b1*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1^2*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (558232*b1*b4*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b7*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (518996*b1*b9*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11329*b1^2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1^3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b11*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5424*b1*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (101072*b1*b4*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b7*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9384*b1*b9*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (673*b1^2*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (332*b1*b4*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (693*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4178*b1*b9*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (341*b1^3*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b11*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b3*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1208*b1*b4*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*b8*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b9*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1^2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (181949*b1^2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (793*b1^3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b1*b11*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9868*b1*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b1^2*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1^2*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170392*b1*b4*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^2*b5*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b7*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1^2*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (83452*b1*b9*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26174*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (106*b1^2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (131*b1^3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b1*b11*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9868*b1*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170392*b1*b4*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b7*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (83452*b1*b9*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (359*b1^2*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b11*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1208*b1*b4*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b9*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31*b1^3*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b11*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*b4*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b8*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3466*b1*b9*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2557*b1^2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b11*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12056*b1*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*b1*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (93656*b1*b4*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (118*b1*b5*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b7*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*b1*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194644*b1*b9*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (103*b1^2*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b11*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*b4*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b8*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3466*b1*b9*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (278*b1^2*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (495*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^3*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b11*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*b2*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b4*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2572*b1*b9*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (407*b1^2*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (630*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b11*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b4*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2572*b1*b9*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1*k3^12*q^(-2 + \[Nu])*y)/(126*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1*k3^12*q^(-2 + \[Nu])*y)/
    (21*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b4*f1*k3^12*q^(-2 + \[Nu])*y)/(99*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (14*b1*b9*f1*k3^12*q^(-2 + \[Nu])*y)/
    (9*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*f1*k1*q^\[Nu]*y)/(63*k2) - (18*b1*b11*f1*k1*q^\[Nu]*y)/(7*k2) + 
   (10*b1*b3*f1*k1*q^\[Nu]*y)/(63*k2) - (20*b1*b4*f1*k1*q^\[Nu]*y)/(63*k2) - 
   (20*b1*b7*f1*k1*q^\[Nu]*y)/(63*k2) + (22*b1*b8*f1*k1*q^\[Nu]*y)/(21*k2) - 
   (86*b1*b9*f1*k1*q^\[Nu]*y)/(63*k2) + (10*b1^2*f1*k2*q^\[Nu]*y)/(63*k1) - 
   (18*b1*b11*f1*k2*q^\[Nu]*y)/(7*k1) + (10*b1*b3*f1*k2*q^\[Nu]*y)/(63*k1) - 
   (20*b1*b4*f1*k2*q^\[Nu]*y)/(63*k1) - (20*b1*b7*f1*k2*q^\[Nu]*y)/(63*k1) + 
   (22*b1*b8*f1*k2*q^\[Nu]*y)/(21*k1) - (86*b1*b9*f1*k2*q^\[Nu]*y)/(63*k1) + 
   (2*b1^2*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (5*b1*b11*f1*k1^3*q^\[Nu]*y)/
    (7*k2*k3^2) + (2*b1*b3*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - 
   (4*b1*b4*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1*b7*f1*k1^3*q^\[Nu]*y)/
    (63*k2*k3^2) + (10*b1*b8*f1*k1^3*q^\[Nu]*y)/(21*k2*k3^2) - 
   (34*b1*b9*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1^2*f1*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (10*b1*b11*f1*k1*k2*q^\[Nu]*y)/(7*k3^2) - 
   (4*b1*b3*f1*k1*k2*q^\[Nu]*y)/(63*k3^2) + (8*b1*b4*f1*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (8*b1*b7*f1*k1*k2*q^\[Nu]*y)/(63*k3^2) - 
   (20*b1*b8*f1*k1*k2*q^\[Nu]*y)/(21*k3^2) + (68*b1*b9*f1*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (2*b1^2*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (5*b1*b11*f1*k2^3*q^\[Nu]*y)/(7*k1*k3^2) + (2*b1*b3*f1*k2^3*q^\[Nu]*y)/
    (63*k1*k3^2) - (4*b1*b4*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (4*b1*b7*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) + (10*b1*b8*f1*k2^3*q^\[Nu]*y)/
    (21*k1*k3^2) - (34*b1*b9*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (4*b1^2*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + (23*b1*b11*f1*k3^2*q^\[Nu]*y)/
    (7*k1*k2) - (4*b1*b3*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
   (8*b1*b4*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + (8*b1*b7*f1*k3^2*q^\[Nu]*y)/
    (21*k1*k2) - (32*b1*b8*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
   (40*b1*b9*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) - 
   (36*b1^2*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^3*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (216*b1*b11*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^2*b2*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b3*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8192*b1*b4*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b7*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b8*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1^2*b8*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13936*b1*b9*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1656*b1^2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1^3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (648*b1*b11*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*b2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24576*b1*b4*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1*b8*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b8*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41808*b1*b9*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8216*b1^3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (432*b1*b11*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2272*b1^2*b2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1^2*b3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16384*b1*b4*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b7*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b8*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1^2*b8*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27872*b1*b9*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20656*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19232*b1^2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1^3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (432*b1*b11*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*b2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16384*b1*b4*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b7*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b8*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b8*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27872*b1*b9*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26996*b1^2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (648*b1*b11*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^2*b2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24576*b1*b4*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1*b8*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1^2*b8*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41808*b1*b9*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1^2*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (216*b1*b11*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b3*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8192*b1*b4*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b7*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b8*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13936*b1*b9*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^14*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^3*f1*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^3*f1*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^3*f1*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^3*f1*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^3*f1*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (988*b1^2*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^3*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b2*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21288*b1^2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1056*b1^3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b4*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b8*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b9*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37908*b1^2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b4*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b8*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*b9*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37552*b1^2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b4*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b8*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b9*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23988*b1^2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1056*b1^3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b4*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b8*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*b9*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10152*b1^2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b4*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b9*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100124*b1^2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^3*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (288*b1*b11*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*b2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b3*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148256*b1*b4*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b7*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b8*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b8*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (346096*b1*b9*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1328*b1^2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (539*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7424*b1*b4*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26752*b1*b9*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12808*b1^2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b11*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1136*b1*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15296*b1*b4*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*b7*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (431392*b1*b9*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (78224*b1^2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7424*b1*b4*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26752*b1*b9*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (516*b1^2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (288*b1*b11*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*b2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b3*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148256*b1*b4*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b7*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b8*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (346096*b1*b9*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (83516*b1^2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^3*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b3*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1504*b1*b4*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1*b8*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b8*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (120112*b1*b9*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16664*b1^2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12952*b1^3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b1^2*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^2*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (60832*b1*b4*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^2*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (125264*b1*b9*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14016*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (51796*b1^2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (60832*b1*b4*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (125264*b1*b9*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1^2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1504*b1*b4*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1*b8*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (120112*b1*b9*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13180*b1^2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^3*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b11*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1^2*b2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b3*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130952*b1*b4*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b7*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b8*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b8*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284188*b1*b9*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64616*b1^2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b11*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1^2*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2816*b1*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34256*b1*b4*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*b7*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2816*b1*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (196264*b1*b9*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (404*b1^2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b11*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130952*b1*b4*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b7*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b8*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284188*b1*b9*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2452*b1^2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^3*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*b11*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b3*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b3*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81248*b1*b4*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b8*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b8*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (245536*b1*b9*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1192*b1^2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*b11*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b3*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81248*b1*b4*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b8*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (245536*b1*b9*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b4*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b9*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1*q^\[Nu]*y^2)/315 - (24*b1*b11*f1*q^\[Nu]*y^2)/35 - 
   (64*b1*b2*f1*q^\[Nu]*y^2)/735 + (16*b1*b3*f1*q^\[Nu]*y^2)/315 - 
   (32*b1*b4*f1*q^\[Nu]*y^2)/2205 - (32*b1*b7*f1*q^\[Nu]*y^2)/2205 + 
   (16*b1*b8*f1*q^\[Nu]*y^2)/21 - (208*b1*b9*f1*q^\[Nu]*y^2)/441 - 
   (29632*b1^2*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^3*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*b4*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11024*b1*b9*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (162688*b1^2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (280832*b1^2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3648*b1*b4*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66144*b1*b9*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192128*b1^2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*b4*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11024*b1*b9*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1^2*f1*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^3*f1*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1^2*b2*f1*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1^2*b2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*b8*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4416*b1^2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3456*b1^3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b1^2*b2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*b8*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1^2*b2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*b8*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1^2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1^2*b2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66496*b1^2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1^2*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4992*b1^2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1^2*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (51776*b1^2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1^2*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14848*b1^2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b1*b4*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22048*b1*b9*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (162688*b1^2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b1*b4*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22048*b1*b9*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (55456*b1^2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b4*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11024*b1*b9*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/3 + 
 ((23497*b1^2*f1*k1^10*q^(-2 + \[Nu]))/(97020*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (79*b1^3*f1*k1^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (240*b1*b11*f1*k1^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1*b2*f1*k1^10*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*b2*f1*k1^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b3*f1*k1^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1^2*b3*f1*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27722*b1*b4*f1*k1^10*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1*b5*f1*k1^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (228*b1*b7*f1*k1^10*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b8*f1*k1^10*q^(-2 + \[Nu]))/(49*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (32*b1^2*b8*f1*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24641*b1*b9*f1*k1^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^2*f1^2*k1^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (12*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (23*b1^2*f1*k1^12*q^(-2 + \[Nu]))/(105*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1*k1^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k1^12*q^(-2 + \[Nu]))/(35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k1^12*q^(-2 + \[Nu]))/
    (35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1*b8*f1*k1^12*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*b9*f1*k1^12*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (103319*b1^2*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (37730*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5863*b1^3*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (720*b1*b11*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1^2*b2*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b3*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1^2*b3*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21254*b1*b4*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (177*b1*b5*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1^2*b5*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (404*b1*b7*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (366*b1*b8*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (992*b1^2*b8*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6119*b1*b9*f1*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (271*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (518531*b1^2*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1^3*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (480*b1*b11*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1^2*b2*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b3*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39274*b1*b4*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b5*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b7*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b8*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b8*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2977*b1*b9*f1*k1^6*k2^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (377*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (276286*b1^2*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (529*b1^3*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (480*b1*b11*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1*b2*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3672*b1^2*b2*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b3*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1^2*b3*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39274*b1*b4*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1216*b1^2*b5*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b7*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1*b8*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1^2*b8*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2977*b1*b9*f1*k1^4*k2^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1986*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (689*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (246479*b1^2*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^3*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (720*b1*b11*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1*b2*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8702*b1^2*b2*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b3*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21254*b1*b4*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (177*b1*b5*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b5*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (404*b1*b7*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (366*b1*b8*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b8*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6119*b1*b9*f1*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6089*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (377*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25093*b1^2*f1*k2^10*q^(-2 + \[Nu]))/
    (22638*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5947*b1^3*f1*k2^10*q^(-2 + \[Nu]))/(1470*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (240*b1*b11*f1*k2^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1*b2*f1*k2^10*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10308*b1^2*b2*f1*k2^10*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1*b3*f1*k2^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1696*b1^2*b3*f1*k2^10*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27722*b1*b4*f1*k2^10*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b1*b5*f1*k2^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (832*b1^2*b5*f1*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (228*b1*b7*f1*k2^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (38*b1*b8*f1*k2^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1696*b1^2*b8*f1*k2^10*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24641*b1*b9*f1*k2^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6833*b1^2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (271*b1^3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b5*f1^2*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (757*b1^2*f1*k2^12*q^(-2 + \[Nu]))/(1980*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (159*b1^3*f1*k2^12*q^(-2 + \[Nu]))/
    (70*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k2^12*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1^2*b2*f1*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k2^12*q^(-2 + \[Nu]))/(35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k2^12*q^(-2 + \[Nu]))/
    (35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b1*b8*f1*k2^12*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1*b9*f1*k2^12*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k2^12*q^(-2 + \[Nu]))/(12*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*b2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1*k1^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^3*f1*k1^14*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^12*k2^2*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^12*k2^2*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^10*k2^4*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^10*k2^4*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^8*k2^6*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^8*k2^6*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^2*f1*k1^6*k2^8*q^(-2 + \[Nu]))/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^3*f1*k1^6*k2^8*q^(-2 + \[Nu]))/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^4*k2^10*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^4*k2^10*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^2*k2^12*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^2*k2^12*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1^3*f1*k2^14*q^(-2 + \[Nu]))/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1*k2^16*q^(-2 + \[Nu]))/(385*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^3*f1*k2^16*q^(-2 + \[Nu]))/
    (35*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1*k1^12*q^(-2 + \[Nu]))/(105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k1^12*q^(-2 + \[Nu]))/
    (20*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1*k1^12*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*b4*f1*k1^12*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1*k1^14*q^(-2 + \[Nu]))/(35*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k1^14*q^(-2 + \[Nu]))/
    (385*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k1^14*q^(-2 + \[Nu]))/(5*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (12638*b1^2*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2823*b1^3*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1^2*b2*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1^2*b5*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^10*k2^2*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3702*b1^2*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2883*b1^3*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1^2*b2*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1^2*b5*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b8*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^8*k2^4*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19772*b1^2*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (991*b1^3*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1^2*b2*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b3*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b4*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b8*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b9*f1*k1^6*k2^6*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8482*b1^2*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (11319*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (991*b1^3*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b1^2*b2*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b3*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b8*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^4*k2^8*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3702*b1^2*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2883*b1^3*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b1^2*b2*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (354*b1^2*b5*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b8*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^2*k2^10*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (10*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8326*b1^2*f1*k2^12*q^(-2 + \[Nu]))/(18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2823*b1^3*f1*k2^12*q^(-2 + \[Nu]))/
    (980*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b1^2*b2*f1*k2^12*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k2^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k2^12*q^(-2 + \[Nu]))/(385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (118*b1^2*b5*f1*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k2^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k2^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (210*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1*k2^14*q^(-2 + \[Nu]))/(15*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^3*f1*k2^14*q^(-2 + \[Nu]))/
    (20*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1*k2^14*q^(-2 + \[Nu]))/(7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b4*f1*k2^14*q^(-2 + \[Nu]))/
    (385*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k2^14*q^(-2 + \[Nu]))/(5*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k2^14*q^(-2 + \[Nu]))/
    (210*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26249*b1^2*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (19404*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (33*b1^3*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*b1*b11*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5154*b1*b2*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41392*b1*b4*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b5*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b7*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (353896*b1*b9*f1*k1^8*k3^2*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (547*b1^2*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (1260*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*b2*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b3*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (105*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b4*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b7*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b8*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b1*b9*f1*k1^10*k3^2*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (558982*b1^2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12323*b1^3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4351*b1*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1^2*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52928*b1*b4*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b5*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1^2*b5*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b7*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32552*b1*b9*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (509*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (63953*b1^2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b1^3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b1*b11*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1836*b1*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1^2*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1648*b1*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (735968*b1*b4*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*b5*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1^2*b5*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b7*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1648*b1*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (335024*b1*b9*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (113*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21325*b1^2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (19404*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (953*b1^3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4351*b1*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13318*b1^2*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52928*b1*b4*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b5*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2132*b1^2*b5*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b7*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1^2*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32552*b1*b9*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8891*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (113*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (803497*b1^2*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12379*b1^3*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*b1*b11*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5154*b1*b2*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1^2*b2*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b3*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41392*b1*b4*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1*b5*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1^2*b5*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b7*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1*b8*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (353896*b1*b9*f1*k2^8*k3^2*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1819*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (509*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41*b1^2*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8167*b1^2*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (503*b1^3*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b1*b2*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b3*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (105*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b4*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b7*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b8*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b1*b9*f1*k2^10*k3^2*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*b2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31543*b1^2*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (383*b1^3*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b3*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b3*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67778*b1*b4*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b5*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (524*b1*b7*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b8*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b8*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88439*b1*b9*f1*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (97*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (47*b1^2*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b3*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b1*b4*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (385*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b8*f1*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k1^8*k3^4*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (385853*b1^2*f1*k1^4*k2^2*k3^4*
     q^(-2 + \[Nu]))/(67914*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5017*b1^3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6659*b1*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1^2*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1^2*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5452*b1*b4*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1066*b1*b5*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*b5*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4160*b1^2*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26638*b1*b9*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1623241*b1^2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8116*b1^3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6659*b1*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7640*b1^2*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1^2*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5452*b1*b4*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1066*b1*b5*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2384*b1^2*b5*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b1*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1^2*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26638*b1*b9*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10127*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (65*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1^2*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320879*b1^2*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (226380*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5059*b1^3*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b1*b11*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b1*b2*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38792*b1^2*b2*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b3*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1^2*b3*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67778*b1*b4*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b1*b5*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*b5*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (524*b1*b7*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b1*b8*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1472*b1^2*b8*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88439*b1*b9*f1*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2834*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1^2*b5*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1207*b1^2*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2772*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^3*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (6*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b3*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b1*b4*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (385*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b7*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b1*b8*f1*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k2^8*k3^4*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (97*b1^2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (70*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^3*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48053*b1^2*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (16170*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (979*b1^3*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b11*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19396*b1*b2*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*b2*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37160*b1*b4*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (356*b1*b5*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4544*b1*b7*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74876*b1*b9*f1*k1^4*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (151*b1^2*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3465*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b7*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b9*f1*k1^6*k3^6*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (773093*b1^2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (113190*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13739*b1^3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2940*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b1*b11*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3820*b1*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1^2*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1^2*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (517984*b1*b4*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1192*b1*b5*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1^2*b5*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2656*b1*b7*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1^2*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (858992*b1*b9*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1205551*b1^2*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2759*b1^3*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (588*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b11*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19396*b1*b2*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1^2*b2*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37160*b1*b4*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (356*b1*b5*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1^2*b5*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4544*b1*b7*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1^2*b8*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74876*b1*b9*f1*k2^4*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27*b1^3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7391*b1^2*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (47*b1^3*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (20*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*b2*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3465*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b7*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b9*f1*k2^6*k3^6*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1^2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^3*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (6*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^2*b2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58939*b1^2*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (32340*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62*b1^3*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b11*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1*b3*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316538*b1*b4*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (299*b1*b5*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1732*b1*b7*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (370*b1*b8*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b8*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (381319*b1*b9*f1*k1^2*k3^8*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (271*b1^2*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (630*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (206*b1*b4*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (693*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b7*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b8*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1*b9*f1*k1^4*k3^8*q^(-2 + \[Nu]))/
    (9*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9077*b1^2*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (4851*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^3*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1*b11*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b1*b2*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (372*b1^2*b2*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b1*b3*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316538*b1*b4*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (299*b1*b5*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b5*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1732*b1*b7*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (370*b1*b8*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b8*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (381319*b1*b9*f1*k2^2*k3^8*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*b1^3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b5*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12751*b1^2*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (13860*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (25*b1^3*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (206*b1*b4*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (693*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b7*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b8*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b1*b9*f1*k2^4*k3^8*q^(-2 + \[Nu]))/
    (9*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1^2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1^2*b2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39*b1^2*f1*k3^10*q^(-2 + \[Nu]))/(1540*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1^3*f1*k3^10*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (186*b1*b2*f1*k3^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b2*f1*k3^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1*b3*f1*k3^10*q^(-2 + \[Nu]))/(315*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5776*b1*b4*f1*k3^10*q^(-2 + \[Nu]))/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b1*b7*f1*k3^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b1*b8*f1*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8648*b1*b9*f1*k3^10*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^2*k3^10*q^(-2 + \[Nu]))/(42*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^3*f1^2*k3^10*q^(-2 + \[Nu]))/
    (4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1*k1^2*k3^10*q^(-2 + \[Nu]))/(140*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b3*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (33*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b8*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^2*k3^10*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (479*b1^2*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^3*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*b2*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b3*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (33*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b7*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*b8*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k2^2*k3^10*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^3*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*b2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (305*b1^2*f1*k3^12*q^(-2 + \[Nu]))/(2772*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^3*f1*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1*k3^12*q^(-2 + \[Nu]))/(42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b3*f1*k3^12*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b1*b4*f1*k3^12*q^(-2 + \[Nu]))/(495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*b7*f1*k3^12*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b8*f1*k3^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (73*b1*b9*f1*k3^12*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*b2*f1^2*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (25*b1^2*f1*k3^12*q^(-2 + \[Nu]))/(252*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1*k3^12*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b3*f1*k3^12*q^(-2 + \[Nu]))/(63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (38*b1*b4*f1*k3^12*q^(-2 + \[Nu]))/
    (495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b7*f1*k3^12*q^(-2 + \[Nu]))/(63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b8*f1*k3^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (73*b1*b9*f1*k3^12*q^(-2 + \[Nu]))/(45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1*k3^14*q^(-2 + \[Nu]))/
    (42*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b4*f1*k3^14*q^(-2 + \[Nu]))/(231*k1^2*k2^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b9*f1*k3^14*q^(-2 + \[Nu]))/(3*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1*q^\[Nu])/105 - 
   (23*b1^3*f1*q^\[Nu])/42 - 9*b1*b10*f1*q^\[Nu] + 3*b1^2*b10*f1*q^\[Nu] + 
   (34*b1*b11*f1*q^\[Nu])/5 - (262*b1*b2*f1*q^\[Nu])/735 - 
   (71*b1^2*b2*f1*q^\[Nu])/42 - (614*b1*b3*f1*q^\[Nu])/105 + 
   (47*b1^2*b3*f1*q^\[Nu])/21 + (4588*b1*b4*f1*q^\[Nu])/735 - 
   (10*b1*b5*f1*q^\[Nu])/21 - (29*b1^2*b5*f1*q^\[Nu])/14 - 
   (106*b1*b6*f1*q^\[Nu])/7 + (110*b1^2*b6*f1*q^\[Nu])/21 + 
   (18238*b1*b7*f1*q^\[Nu])/735 - (134*b1*b8*f1*q^\[Nu])/21 + 
   (82*b1^2*b8*f1*q^\[Nu])/21 + (766*b1*b9*f1*q^\[Nu])/49 + 
   (16*b1^2*f1*k1^2*q^\[Nu])/(63*k2^2) - (3*b1*b10*f1*k1^2*q^\[Nu])/
    (2*k2^2) + (5*b1*b11*f1*k1^2*q^\[Nu])/(7*k2^2) + 
   (17*b1*b2*f1*k1^2*q^\[Nu])/(21*k2^2) - (83*b1*b3*f1*k1^2*q^\[Nu])/
    (63*k2^2) + (16*b1*b4*f1*k1^2*q^\[Nu])/(63*k2^2) + 
   (b1*b5*f1*k1^2*q^\[Nu])/k2^2 - (61*b1*b6*f1*k1^2*q^\[Nu])/(21*k2^2) + 
   (43*b1*b7*f1*k1^2*q^\[Nu])/(63*k2^2) - (17*b1*b8*f1*k1^2*q^\[Nu])/
    (7*k2^2) + (55*b1*b9*f1*k1^2*q^\[Nu])/(63*k2^2) + 
   (16*b1^2*f1*k2^2*q^\[Nu])/(63*k1^2) + (b1^3*f1*k2^2*q^\[Nu])/(14*k1^2) - 
   (3*b1*b10*f1*k2^2*q^\[Nu])/(2*k1^2) + (5*b1*b11*f1*k2^2*q^\[Nu])/
    (7*k1^2) + (17*b1*b2*f1*k2^2*q^\[Nu])/(21*k1^2) - 
   (b1^2*b2*f1*k2^2*q^\[Nu])/(14*k1^2) - (83*b1*b3*f1*k2^2*q^\[Nu])/
    (63*k1^2) + (16*b1*b4*f1*k2^2*q^\[Nu])/(63*k1^2) + 
   (b1*b5*f1*k2^2*q^\[Nu])/k1^2 - (b1^2*b5*f1*k2^2*q^\[Nu])/(14*k1^2) - 
   (61*b1*b6*f1*k2^2*q^\[Nu])/(21*k1^2) + (43*b1*b7*f1*k2^2*q^\[Nu])/
    (63*k1^2) - (17*b1*b8*f1*k2^2*q^\[Nu])/(7*k1^2) + 
   (55*b1*b9*f1*k2^2*q^\[Nu])/(63*k1^2) - (b1^2*f1*k1^2*q^\[Nu])/(63*k3^2) + 
   (3*b1^3*f1*k1^2*q^\[Nu])/(14*k3^2) + (5*b1*b11*f1*k1^2*q^\[Nu])/
    (14*k3^2) - (3*b1^2*b2*f1*k1^2*q^\[Nu])/(14*k3^2) - 
   (b1*b3*f1*k1^2*q^\[Nu])/(63*k3^2) + (2*b1*b4*f1*k1^2*q^\[Nu])/(63*k3^2) - 
   (3*b1^2*b5*f1*k1^2*q^\[Nu])/(14*k3^2) + (2*b1*b7*f1*k1^2*q^\[Nu])/
    (63*k3^2) - (5*b1*b8*f1*k1^2*q^\[Nu])/(21*k3^2) + 
   (17*b1*b9*f1*k1^2*q^\[Nu])/(63*k3^2) + (b1^2*f1*k1^4*q^\[Nu])/
    (63*k2^2*k3^2) - (5*b1*b11*f1*k1^4*q^\[Nu])/(14*k2^2*k3^2) + 
   (b1*b3*f1*k1^4*q^\[Nu])/(63*k2^2*k3^2) - (2*b1*b4*f1*k1^4*q^\[Nu])/
    (63*k2^2*k3^2) - (2*b1*b7*f1*k1^4*q^\[Nu])/(63*k2^2*k3^2) + 
   (5*b1*b8*f1*k1^4*q^\[Nu])/(21*k2^2*k3^2) - (17*b1*b9*f1*k1^4*q^\[Nu])/
    (63*k2^2*k3^2) - (b1^2*f1*k2^2*q^\[Nu])/(63*k3^2) - 
   (3*b1^3*f1*k2^2*q^\[Nu])/(7*k3^2) + (5*b1*b11*f1*k2^2*q^\[Nu])/(14*k3^2) + 
   (3*b1^2*b2*f1*k2^2*q^\[Nu])/(7*k3^2) - (b1*b3*f1*k2^2*q^\[Nu])/(63*k3^2) + 
   (2*b1*b4*f1*k2^2*q^\[Nu])/(63*k3^2) + (3*b1^2*b5*f1*k2^2*q^\[Nu])/
    (7*k3^2) + (2*b1*b7*f1*k2^2*q^\[Nu])/(63*k3^2) - 
   (5*b1*b8*f1*k2^2*q^\[Nu])/(21*k3^2) + (17*b1*b9*f1*k2^2*q^\[Nu])/
    (63*k3^2) + (b1^2*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) + 
   (3*b1^3*f1*k2^4*q^\[Nu])/(14*k1^2*k3^2) - (5*b1*b11*f1*k2^4*q^\[Nu])/
    (14*k1^2*k3^2) - (3*b1^2*b2*f1*k2^4*q^\[Nu])/(14*k1^2*k3^2) + 
   (b1*b3*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) - (2*b1*b4*f1*k2^4*q^\[Nu])/
    (63*k1^2*k3^2) - (3*b1^2*b5*f1*k2^4*q^\[Nu])/(14*k1^2*k3^2) - 
   (2*b1*b7*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) + (5*b1*b8*f1*k2^4*q^\[Nu])/
    (21*k1^2*k3^2) - (17*b1*b9*f1*k2^4*q^\[Nu])/(63*k1^2*k3^2) - 
   (31*b1^2*f1*k3^2*q^\[Nu])/(126*k1^2) - (2*b1^3*f1*k3^2*q^\[Nu])/(7*k1^2) + 
   (3*b1*b10*f1*k3^2*q^\[Nu])/(2*k1^2) - (5*b1*b11*f1*k3^2*q^\[Nu])/
    (14*k1^2) - (17*b1*b2*f1*k3^2*q^\[Nu])/(21*k1^2) + 
   (2*b1^2*b2*f1*k3^2*q^\[Nu])/(7*k1^2) + (185*b1*b3*f1*k3^2*q^\[Nu])/
    (126*k1^2) - (26*b1*b4*f1*k3^2*q^\[Nu])/(63*k1^2) - 
   (b1*b5*f1*k3^2*q^\[Nu])/k1^2 + (2*b1^2*b5*f1*k3^2*q^\[Nu])/(7*k1^2) + 
   (67*b1*b6*f1*k3^2*q^\[Nu])/(21*k1^2) - (80*b1*b7*f1*k3^2*q^\[Nu])/
    (63*k1^2) + (46*b1*b8*f1*k3^2*q^\[Nu])/(21*k1^2) - 
   (59*b1*b9*f1*k3^2*q^\[Nu])/(63*k1^2) - (31*b1^2*f1*k3^2*q^\[Nu])/
    (126*k2^2) + (3*b1*b10*f1*k3^2*q^\[Nu])/(2*k2^2) - 
   (5*b1*b11*f1*k3^2*q^\[Nu])/(14*k2^2) - (17*b1*b2*f1*k3^2*q^\[Nu])/
    (21*k2^2) + (185*b1*b3*f1*k3^2*q^\[Nu])/(126*k2^2) - 
   (26*b1*b4*f1*k3^2*q^\[Nu])/(63*k2^2) - (b1*b5*f1*k3^2*q^\[Nu])/k2^2 + 
   (67*b1*b6*f1*k3^2*q^\[Nu])/(21*k2^2) - (80*b1*b7*f1*k3^2*q^\[Nu])/
    (63*k2^2) + (46*b1*b8*f1*k3^2*q^\[Nu])/(21*k2^2) - 
   (59*b1*b9*f1*k3^2*q^\[Nu])/(63*k2^2) - (b1^2*f1*k3^4*q^\[Nu])/
    (42*k1^2*k2^2) - (b1*b3*f1*k3^4*q^\[Nu])/(6*k1^2*k2^2) + 
   (4*b1*b4*f1*k3^4*q^\[Nu])/(21*k1^2*k2^2) - (2*b1*b6*f1*k3^4*q^\[Nu])/
    (7*k1^2*k2^2) + (13*b1*b7*f1*k3^4*q^\[Nu])/(21*k1^2*k2^2) + 
   (b1*b9*f1*k3^4*q^\[Nu])/(3*k1^2*k2^2) + 
   (62*b1^2*f1*k1^11*q^(-2 + \[Nu])*y)/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*b11*f1*k1^11*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k1^11*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*b3*f1*k1^11*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1*b4*f1*k1^11*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1^11*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k1^11*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (74*b1*b9*f1*k1^11*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19627*b1^2*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (9702*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^3*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b11*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4216*b1*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1992*b1*b4*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b7*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19812*b1*b9*f1*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1169579*b1^2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1093*b1^3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*b11*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19069*b1*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1^2*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23196*b1*b4*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13674*b1*b9*f1*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (178691*b1^2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7768*b1^3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b11*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29216*b1*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1^2*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (928*b1*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1^2*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130352*b1*b4*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (708*b1*b5*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b7*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (928*b1*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1^2*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59720*b1*b9*f1*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93119*b1^2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4622*b1^3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*b11*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19069*b1*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11896*b1^2*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1^2*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23196*b1*b4*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (880*b1^2*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13674*b1*b9*f1*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6182*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (347629*b1^2*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (146*b1^3*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b11*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4216*b1*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (30788*b1^2*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1992*b1*b4*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b1*b5*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b7*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (488*b1^2*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19812*b1*b9*f1*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8681*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3631*b1^2*f1*k2^11*q^(-2 + \[Nu])*y)/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1*k2^11*q^(-2 + \[Nu])*y)/(21*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (12*b1*b11*f1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1*k2^11*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1^2*b2*f1*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1*k2^11*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b3*f1*k2^11*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b1*b4*f1*k2^11*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k2^11*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1^2*b8*f1*k2^11*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (74*b1*b9*f1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k2^11*q^(-2 + \[Nu])*y)/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1^2*b2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^13*k2*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^13*k2*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^2*f1*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^3*f1*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^2*f1*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^3*f1*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1*k1*k2^13*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1*k1*k2^13*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k2^15*q^(-2 + \[Nu])*y)/(385*k1*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k2^15*q^(-2 + \[Nu])*y)/(35*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1^2*f1*k1^13*q^(-2 + \[Nu])*y)/
    (35*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^13*q^(-2 + \[Nu])*y)/(385*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^13*q^(-2 + \[Nu])*y)/(5*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (892*b1^2*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (1155*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^3*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (70*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^11*k2*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (15*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (141076*b1^2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1249*b1^3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1^2*b2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*b4*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1^2*b8*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*b9*f1*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (261484*b1^2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3881*b1^3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1^2*b2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b8*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282956*b1^2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2062*b1^3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58432*b1^2*b2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1^2*b3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1416*b1^2*b5*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1376*b1^2*b8*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (148*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170932*b1^2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3881*b1^3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38138*b1^2*b2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1*b4*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b1^2*b8*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*b9*f1*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50524*b1^2*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1249*b1^3*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8432*b1^2*b2*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (147*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b4*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1^2*b5*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b1^2*b8*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b9*f1*k1*k2^11*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*f1*k2^13*q^(-2 + \[Nu])*y)/(231*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^3*f1*k2^13*q^(-2 + \[Nu])*y)/(70*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*b1^2*b2*f1*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k2^13*q^(-2 + \[Nu])*y)/(105*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^13*q^(-2 + \[Nu])*y)/(385*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k2^13*q^(-2 + \[Nu])*y)/(5*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1^2*f1^2*k2^13*q^(-2 + \[Nu])*y)/
    (15*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (239*b1^2*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b11*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2248*b1*b4*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b1*b9*f1*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (992*b1^2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1^3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b11*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15394*b1*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61144*b1*b4*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12548*b1*b9*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27365*b1^2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*b1^3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5948*b1*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1^2*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16336*b1*b4*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*b5*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1^2*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10344*b1*b9*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (270694*b1^2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1661*b1^3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5948*b1*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125684*b1^2*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16336*b1*b4*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b5*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1440*b1^2*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10344*b1*b9*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2684*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (447131*b1^2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3142*b1^3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b11*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15394*b1*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10848*b1^2*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61144*b1*b4*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*b5*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b1*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1280*b1^2*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12548*b1*b9*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4552*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (76*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1094*b1^2*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (727*b1^3*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b11*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*b2*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2248*b1*b4*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b1*b9*f1*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^2*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (673*b1^2*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (332*b1*b4*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (693*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4178*b1*b9*f1*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11329*b1^2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (132*b1^3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b11*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5424*b1*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (101072*b1*b4*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b7*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9384*b1*b9*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (808982*b1^2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1346*b1^3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62842*b1*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1^2*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (558232*b1*b4*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b7*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (518996*b1*b9*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58447*b1^2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (928*b1^3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b11*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5424*b1*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19736*b1^2*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (101072*b1*b4*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1^2*b5*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b7*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2224*b1^2*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9384*b1*b9*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31874*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (202*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4097*b1^2*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (278*b1^3*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b11*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (332*b1*b4*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (693*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b8*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4178*b1*b9*f1*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1^2*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (359*b1^2*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b11*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1208*b1*b4*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b9*f1*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (106*b1^2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (131*b1^3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b1*b11*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9868*b1*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170392*b1*b4*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b7*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (83452*b1*b9*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (181949*b1^2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (793*b1^3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b1*b11*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9868*b1*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24112*b1^2*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1^2*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170392*b1*b4*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1^2*b5*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b1*b7*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b1*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1^2*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (83452*b1*b9*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26174*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (341*b1^3*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b11*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1^2*b2*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b3*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1208*b1*b4*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b7*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1^2*b8*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b1*b9*f1*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1^2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^3*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (103*b1^2*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b11*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*b4*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b8*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3466*b1*b9*f1*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2557*b1^2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158*b1^3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b11*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12056*b1*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*b1*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (93656*b1*b4*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (118*b1*b5*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b7*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*b1*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194644*b1*b9*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1^2*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31*b1^3*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b11*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b3*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*b4*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b7*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1*b8*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b8*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3466*b1*b9*f1*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (407*b1^2*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (630*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b11*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b4*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2572*b1*b9*f1*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (278*b1^2*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (495*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^3*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b11*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^2*b2*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1*b4*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b7*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2572*b1*b9*f1*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*b2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1*k3^12*q^(-2 + \[Nu])*y)/(126*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1*k3^12*q^(-2 + \[Nu])*y)/
    (21*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b4*f1*k3^12*q^(-2 + \[Nu])*y)/(99*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (14*b1*b9*f1*k3^12*q^(-2 + \[Nu])*y)/
    (9*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*f1*k1*q^\[Nu]*y)/(63*k2) - (18*b1*b11*f1*k1*q^\[Nu]*y)/(7*k2) + 
   (10*b1*b3*f1*k1*q^\[Nu]*y)/(63*k2) - (20*b1*b4*f1*k1*q^\[Nu]*y)/(63*k2) - 
   (20*b1*b7*f1*k1*q^\[Nu]*y)/(63*k2) + (22*b1*b8*f1*k1*q^\[Nu]*y)/(21*k2) - 
   (86*b1*b9*f1*k1*q^\[Nu]*y)/(63*k2) + (10*b1^2*f1*k2*q^\[Nu]*y)/(63*k1) - 
   (18*b1*b11*f1*k2*q^\[Nu]*y)/(7*k1) + (10*b1*b3*f1*k2*q^\[Nu]*y)/(63*k1) - 
   (20*b1*b4*f1*k2*q^\[Nu]*y)/(63*k1) - (20*b1*b7*f1*k2*q^\[Nu]*y)/(63*k1) + 
   (22*b1*b8*f1*k2*q^\[Nu]*y)/(21*k1) - (86*b1*b9*f1*k2*q^\[Nu]*y)/(63*k1) + 
   (2*b1^2*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (5*b1*b11*f1*k1^3*q^\[Nu]*y)/
    (7*k2*k3^2) + (2*b1*b3*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - 
   (4*b1*b4*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1*b7*f1*k1^3*q^\[Nu]*y)/
    (63*k2*k3^2) + (10*b1*b8*f1*k1^3*q^\[Nu]*y)/(21*k2*k3^2) - 
   (34*b1*b9*f1*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1^2*f1*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (10*b1*b11*f1*k1*k2*q^\[Nu]*y)/(7*k3^2) - 
   (4*b1*b3*f1*k1*k2*q^\[Nu]*y)/(63*k3^2) + (8*b1*b4*f1*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (8*b1*b7*f1*k1*k2*q^\[Nu]*y)/(63*k3^2) - 
   (20*b1*b8*f1*k1*k2*q^\[Nu]*y)/(21*k3^2) + (68*b1*b9*f1*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (2*b1^2*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (5*b1*b11*f1*k2^3*q^\[Nu]*y)/(7*k1*k3^2) + (2*b1*b3*f1*k2^3*q^\[Nu]*y)/
    (63*k1*k3^2) - (4*b1*b4*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (4*b1*b7*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) + (10*b1*b8*f1*k2^3*q^\[Nu]*y)/
    (21*k1*k3^2) - (34*b1*b9*f1*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (4*b1^2*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + (23*b1*b11*f1*k3^2*q^\[Nu]*y)/
    (7*k1*k2) - (4*b1*b3*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
   (8*b1*b4*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + (8*b1*b7*f1*k3^2*q^\[Nu]*y)/
    (21*k1*k2) - (32*b1*b8*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
   (40*b1*b9*f1*k3^2*q^\[Nu]*y)/(21*k1*k2) - 
   (88*b1^2*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (216*b1*b11*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b3*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8192*b1*b4*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b7*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b8*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13936*b1*b9*f1*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26996*b1^2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (648*b1*b11*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^2*b2*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24576*b1*b4*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1*b8*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1^2*b8*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41808*b1*b9*f1*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19232*b1^2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1^3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (432*b1*b11*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*b2*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16384*b1*b4*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b7*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b8*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b8*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27872*b1*b9*f1*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8216*b1^3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (432*b1*b11*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2272*b1^2*b2*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1^2*b3*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16384*b1*b4*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b7*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b1*b8*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b1^2*b8*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27872*b1*b9*f1*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20656*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1656*b1^2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1^3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (648*b1*b11*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*b2*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24576*b1*b4*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1*b8*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b8*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41808*b1*b9*f1*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^3*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (216*b1*b11*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b2*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^2*b2*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b3*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b3*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8192*b1*b4*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b1*b7*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*b8*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1^2*b8*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13936*b1*b9*f1*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1^2*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^3*f1*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^3*f1*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^3*f1*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^3*f1*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*f1*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^3*f1*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k2^14*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1*k2^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k1^12*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10152*b1^2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b2*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b4*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b9*f1*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23988*b1^2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1056*b1^3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b2*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b3*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b4*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b8*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*b9*f1*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37552*b1^2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b2*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b4*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b8*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b9*f1*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37908*b1^2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b2*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1^2*b3*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*b4*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b8*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*b9*f1*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21288*b1^2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1056*b1^3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b2*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b3*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*b4*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*b8*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b9*f1*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (988*b1^2*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^3*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b2*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b4*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b9*f1*k2^12*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (516*b1^2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (288*b1*b11*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*b2*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b3*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148256*b1*b4*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b7*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b8*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (346096*b1*b9*f1*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (78224*b1^2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b2*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7424*b1*b4*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b8*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26752*b1*b9*f1*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12808*b1^2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2695*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b11*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1136*b1*b2*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15296*b1*b4*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*b7*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (431392*b1*b9*f1*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1328*b1^2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (539*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1^3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b3*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7424*b1*b4*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*b8*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26752*b1*b9*f1*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20752*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100124*b1^2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^3*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (288*b1*b11*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*b2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1^2*b2*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b3*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b3*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148256*b1*b4*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1*b7*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b1*b8*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*b8*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (346096*b1*b9*f1*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (752*b1^2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b2*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1504*b1*b4*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1*b8*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (120112*b1*b9*f1*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (51796*b1^2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b2*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b3*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (60832*b1*b4*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b8*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (125264*b1*b9*f1*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16664*b1^2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12952*b1^3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b1^2*b2*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^2*b3*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (60832*b1*b4*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b1*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b1^2*b8*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (125264*b1*b9*f1*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14016*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (83516*b1^2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^3*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1*b11*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1^2*b2*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b3*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1504*b1*b4*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1*b7*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b1*b8*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1^2*b8*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (120112*b1*b9*f1*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (404*b1^2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b11*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b2*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130952*b1*b4*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b7*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b8*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284188*b1*b9*f1*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64616*b1^2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b11*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1^2*b2*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2816*b1*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b3*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34256*b1*b4*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b1*b7*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2816*b1*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b8*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (196264*b1*b9*f1*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13180*b1^2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^3*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b11*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*b2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1^2*b2*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b3*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130952*b1*b4*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b1*b7*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b1*b8*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1^2*b8*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284188*b1*b9*f1*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1192*b1^2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*b11*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b3*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81248*b1*b4*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b8*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (245536*b1*b9*f1*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2452*b1^2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^3*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*b11*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b2*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b3*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b3*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81248*b1*b4*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b7*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*b8*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b8*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (245536*b1*b9*f1*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b1*b4*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b9*f1*k3^10*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1*q^\[Nu]*y^2)/315 - (24*b1*b11*f1*q^\[Nu]*y^2)/35 - 
   (64*b1*b2*f1*q^\[Nu]*y^2)/735 + (16*b1*b3*f1*q^\[Nu]*y^2)/315 - 
   (32*b1*b4*f1*q^\[Nu]*y^2)/2205 - (32*b1*b7*f1*q^\[Nu]*y^2)/2205 + 
   (16*b1*b8*f1*q^\[Nu]*y^2)/21 - (208*b1*b9*f1*q^\[Nu]*y^2)/441 - 
   (192*b1^2*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*b4*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11024*b1*b9*f1*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192128*b1^2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b2*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (280832*b1^2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3648*b1*b4*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66144*b1*b9*f1*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (162688*b1^2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29632*b1^2*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^3*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*b2*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b1*b4*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b8*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11024*b1*b9*f1*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1^2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1^2*b2*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1^2*b2*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*b8*f1*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4416*b1^2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3456*b1^3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b1^2*b2*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b3*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*b8*f1*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1^2*b2*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*b8*f1*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1^2*f1*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^3*f1*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1^2*b2*f1*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1^2*b3*f1*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1^2*b8*f1*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1^2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (51776*b1^2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1^2*b2*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b3*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b8*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4992*b1^2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2304*b1^3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2304*b1^2*b2*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*b3*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*b8*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66496*b1^2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1^2*b2*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b3*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*b8*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1^2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b1*b4*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22048*b1*b9*f1*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (162688*b1^2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1*b4*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b1*b9*f1*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14848*b1^2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*b2*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b3*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b1*b4*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b8*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22048*b1*b9*f1*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1^2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (55456*b1^2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1^2*b2*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b3*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b1*b4*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b8*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b1*b9*f1*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b4*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11024*b1*b9*f1*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))/3 + 
 (1/15 + (2*y^2)/15)*((-641903*b1*f1^2*k1^10*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2888*b1^2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*b1^3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (240*b11*f1^2*k1^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b2*f1^2*k1^10*q^(-2 + \[Nu]))/(3430*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (33374*b1*b2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*b2*f1^2*k1^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b3*f1^2*k1^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2368*b1*b3*f1^2*k1^10*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27722*b4*f1^2*k1^10*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b5*f1^2*k1^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (832*b1*b5*f1^2*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (228*b7*f1^2*k1^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (38*b8*f1^2*k1^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1*b8*f1^2*k1^10*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24641*b9*f1^2*k1^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12833*b1*f1^3*k1^10*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (183*b1^2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^3*k1^10*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k1^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b5*f1^3*k1^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (757*b1*f1^2*k1^12*q^(-2 + \[Nu]))/
    (1980*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (159*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (70*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^2*k1^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b3*f1^2*k1^12*q^(-2 + \[Nu]))/(35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b4*f1^2*k1^12*q^(-2 + \[Nu]))/
    (35*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b7*f1^2*k1^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b8*f1^2*k1^12*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b9*f1^2*k1^12*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1*f1^3*k1^12*q^(-2 + \[Nu]))/
    (210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/(12*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k1^12*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (918971*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (154199*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (174*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (720*b11*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5998*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (164*b1^2*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3008*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21254*b4*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (177*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1^2*b5*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (404*b7*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (366*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3008*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6119*b9*f1^2*k1^8*k2^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28957*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4397*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^3*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1*b2*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b5*f1^3*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (536719*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46993*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (480*b11*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5834*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b1^2*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39274*b4*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*b5*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b7*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2977*b9*f1^2*k1^6*k2^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16957*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3883*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*b2*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b5*f1^3*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (536719*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (46993*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (480*b11*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9379*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5834*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b1^2*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39274*b4*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b1^2*b5*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b7*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2977*b9*f1^2*k1^4*k2^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16957*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3883*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^3*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17*b1*b2*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b5*f1^3*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (918971*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (154199*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (174*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (720*b11*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13701*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5998*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (164*b1^2*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3008*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21254*b4*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (177*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1^2*b5*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (404*b7*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (366*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3008*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6119*b9*f1^2*k1^2*k2^8*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28957*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4397*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (420*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^3*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (121*b1*b2*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b5*f1^3*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (641903*b1*f1^2*k2^10*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2888*b1^2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (146*b1^3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (240*b11*f1^2*k2^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4077*b2*f1^2*k2^10*q^(-2 + \[Nu]))/(3430*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (33374*b1*b2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*b2*f1^2*k2^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b3*f1^2*k2^10*q^(-2 + \[Nu]))/(735*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2368*b1*b3*f1^2*k2^10*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27722*b4*f1^2*k2^10*q^(-2 + \[Nu]))/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (59*b5*f1^2*k2^10*q^(-2 + \[Nu]))/(35*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (832*b1*b5*f1^2*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (228*b7*f1^2*k2^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (38*b8*f1^2*k2^10*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1*b8*f1^2*k2^10*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24641*b9*f1^2*k2^10*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12833*b1*f1^3*k2^10*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (183*b1^2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^3*f1^3*k2^10*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k2^10*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b5*f1^3*k2^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (757*b1*f1^2*k2^12*q^(-2 + \[Nu]))/
    (1980*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (159*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (70*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^2*k2^12*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (10*b1*b2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b3*f1^2*k2^12*q^(-2 + \[Nu]))/(35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b4*f1^2*k2^12*q^(-2 + \[Nu]))/
    (35*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b7*f1^2*k2^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (6*b8*f1^2*k2^12*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9*b9*f1^2*k2^12*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (17*b1*f1^3*k2^12*q^(-2 + \[Nu]))/
    (210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/(12*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1*b2*f1^3*k2^12*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1*f1^2*k1^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1^2*f1^2*k1^14*q^(-2 + \[Nu]))/
    (10*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^2*k1^16*q^(-2 + \[Nu]))/(385*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^2*f1^2*k1^16*q^(-2 + \[Nu]))/
    (35*k2^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (45*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu]))/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (51*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu]))/
    (10*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu]))/
    (10*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu]))/
    (10*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu]))/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (51*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu]))/
    (10*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (45*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu]))/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*b1*f1^2*k2^14*q^(-2 + \[Nu]))/(385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*b1^2*f1^2*k2^14*q^(-2 + \[Nu]))/
    (10*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*f1^2*k2^16*q^(-2 + \[Nu]))/(385*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3*b1^2*f1^2*k2^16*q^(-2 + \[Nu]))/
    (35*k1^2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19588*b1*f1^2*k1^12*q^(-2 + \[Nu]))/(56595*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67*b1^2*f1^2*k1^12*q^(-2 + \[Nu]))/(245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (177*b1^3*f1^2*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4322*b1*b2*f1^2*k1^12*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b4*f1^2*k1^12*q^(-2 + \[Nu]))/(385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (118*b1*b5*f1^2*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k1^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b9*f1^2*k1^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*f1^3*k1^12*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^3*k1^12*q^(-2 + \[Nu]))/(14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^2*k1^14*q^(-2 + \[Nu]))/
    (15*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k1^14*q^(-2 + \[Nu]))/(20*k2^2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^2*k1^14*q^(-2 + \[Nu]))/(7*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b4*f1^2*k1^14*q^(-2 + \[Nu]))/
    (385*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b9*f1^2*k1^14*q^(-2 + \[Nu]))/(5*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k1^14*q^(-2 + \[Nu]))/
    (210*k2^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8028*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1973*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (498*b1^3*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9624*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^10*k2^2*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^3*k1^10*k2^2*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19588*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7459*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (57*b1^3*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4322*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (118*b1*b5*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^8*k2^4*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (141*b1^2*f1^3*k1^8*k2^4*q^(-2 + \[Nu]))/
    (14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (55714*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22607*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (156*b1^3*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18758*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b4*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1024*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b9*f1^2*k1^6*k2^6*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (43*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (102*b1^2*f1^3*k1^6*k2^6*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19588*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (56595*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7459*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (57*b1^3*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4322*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (118*b1*b5*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^4*k2^8*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (141*b1^2*f1^3*k1^4*k2^8*q^(-2 + \[Nu]))/
    (14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8028*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1973*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (498*b1^3*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9624*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^2*k2^10*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^3*k1^2*k2^10*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19588*b1*f1^2*k2^12*q^(-2 + \[Nu]))/(56595*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67*b1^2*f1^2*k2^12*q^(-2 + \[Nu]))/(245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (177*b1^3*f1^2*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4322*b1*b2*f1^2*k2^12*q^(-2 + \[Nu]))/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k2^12*q^(-2 + \[Nu]))/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b4*f1^2*k2^12*q^(-2 + \[Nu]))/(385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (118*b1*b5*f1^2*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b8*f1^2*k2^12*q^(-2 + \[Nu]))/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b9*f1^2*k2^12*q^(-2 + \[Nu]))/(5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*f1^3*k2^12*q^(-2 + \[Nu]))/
    (21*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^2*f1^3*k2^12*q^(-2 + \[Nu]))/(14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^2*k2^14*q^(-2 + \[Nu]))/
    (15*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k2^14*q^(-2 + \[Nu]))/(20*k1^2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^2*k2^14*q^(-2 + \[Nu]))/(7*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b4*f1^2*k2^14*q^(-2 + \[Nu]))/
    (385*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b9*f1^2*k2^14*q^(-2 + \[Nu]))/(5*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k2^14*q^(-2 + \[Nu]))/
    (210*k1^2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74491*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1633*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (98*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (242*b1^3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*b11*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5154*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2798*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41392*b4*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b5*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1*b5*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b7*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1280*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (353896*b9*f1^2*k1^8*k3^2*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4027*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (611*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8167*b1*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (503*b1^2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (420*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b3*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (105*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b4*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b7*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b8*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b9*f1^2*k1^10*k3^2*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (210*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k1^10*k3^2*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (981527*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (500231*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2864*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4351*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87037*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1096*b1^2*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4096*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52928*b4*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b1*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1^2*b5*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b7*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4096*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32552*b9*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2465*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (2058*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (341*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37*b1*b2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41722*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56681*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1676*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b11*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1836*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26636*b1*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1432*b1^2*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1648*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (735968*b4*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4264*b1*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1^2*b5*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b7*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1648*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (335024*b9*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (17782*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (543*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (981527*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (500231*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (20580*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2864*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4351*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87037*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1096*b1^2*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4096*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52928*b4*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1888*b1*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1^2*b5*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b7*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4096*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32552*b9*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2465*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (2058*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (341*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (84*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^3*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37*b1*b2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b5*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74491*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1633*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (98*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (242*b1^3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*b11*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5154*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2798*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41392*b4*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (416*b5*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (244*b1*b5*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b7*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1280*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (353896*b9*f1^2*k2^8*k3^2*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4027*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (611*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (210*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8167*b1*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (503*b1^2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (420*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5*b2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b3*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (105*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b4*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b7*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b8*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b9*f1^2*k2^10*k3^2*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (53*b1*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (210*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*b2*f1^3*k2^10*k3^2*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (742921*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (887*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2908*b1^3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b11*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39772*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67778*b4*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b5*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b5*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (524*b7*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (640*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88439*b9*f1^2*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8591*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (401*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^3*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1*b2*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1207*b1*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2772*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (6*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b3*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b4*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (385*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b7*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b8*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b9*f1^2*k1^8*k3^4*q^(-2 + \[Nu]))/(5*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (97*b1*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (70*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^3*k1^8*k3^4*q^(-2 + \[Nu]))/
    (2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1884301*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (363037*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1588*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b11*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6659*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (153392*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9344*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5452*b4*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1066*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1032*b1*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1^2*b5*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b7*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9344*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26638*b9*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12961*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21*b1^3*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15*b1*b2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1884301*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (339570*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (363037*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1588*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b11*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6659*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (153392*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1^2*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9344*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5452*b4*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1066*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1032*b1*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b1^2*b5*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b7*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (452*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9344*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26638*b9*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12961*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (21*b1^3*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15*b1*b2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (742921*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (679140*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (887*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2908*b1^3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (160*b11*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2063*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39772*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b1^2*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (67778*b4*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (122*b5*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1*b5*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (524*b7*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (398*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (640*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88439*b9*f1^2*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8591*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (10290*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (401*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7*b1^3*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (87*b1*b2*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*b5*f1^3*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1207*b1*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2772*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1^2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (6*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b3*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122*b4*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (385*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b7*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*b8*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b9*f1^2*k2^8*k3^4*q^(-2 + \[Nu]))/(5*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (97*b1*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (70*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1^2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b2*f1^3*k2^8*k3^4*q^(-2 + \[Nu]))/
    (2*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (702466*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2332*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1637*b1^3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b11*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19396*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7310*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37160*b4*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (356*b5*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*b5*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4544*b7*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74876*b9*f1^2*k1^4*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (468*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1^2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148*b1*b2*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7391*b1*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (47*b1^2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (20*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/(3465*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b7*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b9*f1^2*k1^6*k3^6*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (6*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b2*f1^3*k1^6*k3^6*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1357549*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29123*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62*b1^3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (640*b11*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3820*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4514*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b1^2*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4096*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (517984*b4*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1192*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1196*b1*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b5*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2656*b7*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4096*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (858992*b9*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (323*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^3*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*b2*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (702466*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2332*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1637*b1^3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b11*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19396*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7310*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (37160*b4*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (356*b5*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*b5*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4544*b7*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2048*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74876*b9*f1^2*k2^4*k3^6*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (468*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1^2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (42*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148*b1*b2*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7391*b1*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (47*b1^2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (20*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*b2*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/(3465*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b7*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b9*f1^2*k2^6*k3^6*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (71*b1*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1^2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (6*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1*b2*f1^3*k2^6*k3^6*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (229063*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b11*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (442*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^2*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316538*b4*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (299*b5*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1732*b7*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (370*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (381319*b9*f1^2*k1^2*k3^8*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (793*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (127*b1^2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^3*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (51*b1*b2*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b5*f1^3*k1^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12751*b1*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (13860*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (25*b1^2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b3*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (206*b4*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (693*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b7*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b8*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b9*f1^2*k1^4*k3^8*q^(-2 + \[Nu]))/
    (9*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*b2*f1^3*k1^4*k3^8*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (229063*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (97020*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*b1^3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (80*b11*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2257*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (442*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b1^2*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (74*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (316538*b4*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (299*b5*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1732*b7*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (370*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (381319*b9*f1^2*k2^2*k3^8*q^(-2 + \[Nu]))/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (793*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (127*b1^2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (28*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*b1^3*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (51*b1*b2*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*b5*f1^3*k2^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12751*b1*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (13860*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (25*b1^2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b3*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (206*b4*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (693*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b7*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b8*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29*b9*f1^2*k2^4*k3^8*q^(-2 + \[Nu]))/
    (9*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25*b1*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (41*b1*b2*f1^3*k2^4*k3^8*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (127*b1*f1^2*k3^10*q^(-2 + \[Nu]))/(3465*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (186*b2*f1^2*k3^10*q^(-2 + \[Nu]))/(245*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*b2*f1^2*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b3*f1^2*k3^10*q^(-2 + \[Nu]))/(315*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (5776*b4*f1^2*k3^10*q^(-2 + \[Nu]))/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b5*f1^2*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (16*b7*f1^2*k3^10*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (88*b8*f1^2*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8648*b9*f1^2*k3^10*q^(-2 + \[Nu]))/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^3*k3^10*q^(-2 + \[Nu]))/(21*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (19*b1^2*f1^3*k3^10*q^(-2 + \[Nu]))/
    (14*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^3*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (479*b1*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (6930*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (84*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/(7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b3*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (315*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (33*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b7*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b8*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^2*k3^10*q^(-2 + \[Nu]))/
    (3*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (4*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^3*k1^2*k3^10*q^(-2 + \[Nu]))/
    (7*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (479*b1*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (6930*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1^2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (84*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/(7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b3*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (315*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (33*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b7*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b8*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k2^2*k3^10*q^(-2 + \[Nu]))/
    (3*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1^2*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (4*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b1*b2*f1^3*k2^2*k3^10*q^(-2 + \[Nu]))/
    (7*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (305*b1*f1^2*k3^12*q^(-2 + \[Nu]))/(2772*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^2*k3^12*q^(-2 + \[Nu]))/(42*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b3*f1^2*k3^12*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b4*f1^2*k3^12*q^(-2 + \[Nu]))/(495*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b7*f1^2*k3^12*q^(-2 + \[Nu]))/
    (63*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b8*f1^2*k3^12*q^(-2 + \[Nu]))/(21*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (73*b9*f1^2*k3^12*q^(-2 + \[Nu]))/
    (45*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^3*k3^12*q^(-2 + \[Nu]))/
    (14*k1^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (305*b1*f1^2*k3^12*q^(-2 + \[Nu]))/(2772*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (b1^2*f1^2*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b2*f1^2*k3^12*q^(-2 + \[Nu]))/(42*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b3*f1^2*k3^12*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b4*f1^2*k3^12*q^(-2 + \[Nu]))/(495*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b7*f1^2*k3^12*q^(-2 + \[Nu]))/
    (63*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b8*f1^2*k3^12*q^(-2 + \[Nu]))/(21*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (73*b9*f1^2*k3^12*q^(-2 + \[Nu]))/
    (45*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b1*f1^3*k3^12*q^(-2 + \[Nu]))/(14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*b2*f1^3*k3^12*q^(-2 + \[Nu]))/
    (14*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1*f1^2*k3^14*q^(-2 + \[Nu]))/(42*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b4*f1^2*k3^14*q^(-2 + \[Nu]))/
    (231*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (b9*f1^2*k3^14*q^(-2 + \[Nu]))/(3*k1^2*k2^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^2*q^\[Nu])/105 - 
   (23*b1^2*f1^2*q^\[Nu])/21 - 2*b1^3*f1^2*q^\[Nu] - 9*b10*f1^2*q^\[Nu] + 
   6*b1*b10*f1^2*q^\[Nu] + (34*b11*f1^2*q^\[Nu])/5 - 
   (262*b2*f1^2*q^\[Nu])/735 - (71*b1*b2*f1^2*q^\[Nu])/21 + 
   2*b1^2*b2*f1^2*q^\[Nu] - (614*b3*f1^2*q^\[Nu])/105 + 
   (94*b1*b3*f1^2*q^\[Nu])/21 + (4588*b4*f1^2*q^\[Nu])/735 - 
   (10*b5*f1^2*q^\[Nu])/21 - (29*b1*b5*f1^2*q^\[Nu])/7 + 
   2*b1^2*b5*f1^2*q^\[Nu] - (106*b6*f1^2*q^\[Nu])/7 + 
   (220*b1*b6*f1^2*q^\[Nu])/21 + (18238*b7*f1^2*q^\[Nu])/735 - 
   (134*b8*f1^2*q^\[Nu])/21 + (164*b1*b8*f1^2*q^\[Nu])/21 + 
   (766*b9*f1^2*q^\[Nu])/49 + (16*b1*f1^2*k1^2*q^\[Nu])/(63*k2^2) + 
   (b1^2*f1^2*k1^2*q^\[Nu])/(14*k2^2) - (3*b10*f1^2*k1^2*q^\[Nu])/(2*k2^2) + 
   (5*b11*f1^2*k1^2*q^\[Nu])/(7*k2^2) + (17*b2*f1^2*k1^2*q^\[Nu])/(21*k2^2) - 
   (b1*b2*f1^2*k1^2*q^\[Nu])/(14*k2^2) - (83*b3*f1^2*k1^2*q^\[Nu])/
    (63*k2^2) + (16*b4*f1^2*k1^2*q^\[Nu])/(63*k2^2) + 
   (b5*f1^2*k1^2*q^\[Nu])/k2^2 - (b1*b5*f1^2*k1^2*q^\[Nu])/(14*k2^2) - 
   (61*b6*f1^2*k1^2*q^\[Nu])/(21*k2^2) + (43*b7*f1^2*k1^2*q^\[Nu])/
    (63*k2^2) - (17*b8*f1^2*k1^2*q^\[Nu])/(7*k2^2) + 
   (55*b9*f1^2*k1^2*q^\[Nu])/(63*k2^2) + (16*b1*f1^2*k2^2*q^\[Nu])/
    (63*k1^2) + (b1^2*f1^2*k2^2*q^\[Nu])/(14*k1^2) - 
   (3*b10*f1^2*k2^2*q^\[Nu])/(2*k1^2) + (5*b11*f1^2*k2^2*q^\[Nu])/(7*k1^2) + 
   (17*b2*f1^2*k2^2*q^\[Nu])/(21*k1^2) - (b1*b2*f1^2*k2^2*q^\[Nu])/
    (14*k1^2) - (83*b3*f1^2*k2^2*q^\[Nu])/(63*k1^2) + 
   (16*b4*f1^2*k2^2*q^\[Nu])/(63*k1^2) + (b5*f1^2*k2^2*q^\[Nu])/k1^2 - 
   (b1*b5*f1^2*k2^2*q^\[Nu])/(14*k1^2) - (61*b6*f1^2*k2^2*q^\[Nu])/
    (21*k1^2) + (43*b7*f1^2*k2^2*q^\[Nu])/(63*k1^2) - 
   (17*b8*f1^2*k2^2*q^\[Nu])/(7*k1^2) + (55*b9*f1^2*k2^2*q^\[Nu])/(63*k1^2) - 
   (b1*f1^2*k1^2*q^\[Nu])/(63*k3^2) - (3*b1^2*f1^2*k1^2*q^\[Nu])/(14*k3^2) + 
   (5*b11*f1^2*k1^2*q^\[Nu])/(14*k3^2) + (3*b1*b2*f1^2*k1^2*q^\[Nu])/
    (14*k3^2) - (b3*f1^2*k1^2*q^\[Nu])/(63*k3^2) + 
   (2*b4*f1^2*k1^2*q^\[Nu])/(63*k3^2) + (3*b1*b5*f1^2*k1^2*q^\[Nu])/
    (14*k3^2) + (2*b7*f1^2*k1^2*q^\[Nu])/(63*k3^2) - 
   (5*b8*f1^2*k1^2*q^\[Nu])/(21*k3^2) + (17*b9*f1^2*k1^2*q^\[Nu])/(63*k3^2) + 
   (b1*f1^2*k1^4*q^\[Nu])/(63*k2^2*k3^2) + (3*b1^2*f1^2*k1^4*q^\[Nu])/
    (14*k2^2*k3^2) - (5*b11*f1^2*k1^4*q^\[Nu])/(14*k2^2*k3^2) - 
   (3*b1*b2*f1^2*k1^4*q^\[Nu])/(14*k2^2*k3^2) + (b3*f1^2*k1^4*q^\[Nu])/
    (63*k2^2*k3^2) - (2*b4*f1^2*k1^4*q^\[Nu])/(63*k2^2*k3^2) - 
   (3*b1*b5*f1^2*k1^4*q^\[Nu])/(14*k2^2*k3^2) - (2*b7*f1^2*k1^4*q^\[Nu])/
    (63*k2^2*k3^2) + (5*b8*f1^2*k1^4*q^\[Nu])/(21*k2^2*k3^2) - 
   (17*b9*f1^2*k1^4*q^\[Nu])/(63*k2^2*k3^2) - (b1*f1^2*k2^2*q^\[Nu])/
    (63*k3^2) - (3*b1^2*f1^2*k2^2*q^\[Nu])/(14*k3^2) + 
   (5*b11*f1^2*k2^2*q^\[Nu])/(14*k3^2) + (3*b1*b2*f1^2*k2^2*q^\[Nu])/
    (14*k3^2) - (b3*f1^2*k2^2*q^\[Nu])/(63*k3^2) + 
   (2*b4*f1^2*k2^2*q^\[Nu])/(63*k3^2) + (3*b1*b5*f1^2*k2^2*q^\[Nu])/
    (14*k3^2) + (2*b7*f1^2*k2^2*q^\[Nu])/(63*k3^2) - 
   (5*b8*f1^2*k2^2*q^\[Nu])/(21*k3^2) + (17*b9*f1^2*k2^2*q^\[Nu])/(63*k3^2) + 
   (b1*f1^2*k2^4*q^\[Nu])/(63*k1^2*k3^2) + (3*b1^2*f1^2*k2^4*q^\[Nu])/
    (14*k1^2*k3^2) - (5*b11*f1^2*k2^4*q^\[Nu])/(14*k1^2*k3^2) - 
   (3*b1*b2*f1^2*k2^4*q^\[Nu])/(14*k1^2*k3^2) + (b3*f1^2*k2^4*q^\[Nu])/
    (63*k1^2*k3^2) - (2*b4*f1^2*k2^4*q^\[Nu])/(63*k1^2*k3^2) - 
   (3*b1*b5*f1^2*k2^4*q^\[Nu])/(14*k1^2*k3^2) - (2*b7*f1^2*k2^4*q^\[Nu])/
    (63*k1^2*k3^2) + (5*b8*f1^2*k2^4*q^\[Nu])/(21*k1^2*k3^2) - 
   (17*b9*f1^2*k2^4*q^\[Nu])/(63*k1^2*k3^2) - (31*b1*f1^2*k3^2*q^\[Nu])/
    (126*k1^2) - (2*b1^2*f1^2*k3^2*q^\[Nu])/(7*k1^2) + 
   (3*b10*f1^2*k3^2*q^\[Nu])/(2*k1^2) - (5*b11*f1^2*k3^2*q^\[Nu])/(14*k1^2) - 
   (17*b2*f1^2*k3^2*q^\[Nu])/(21*k1^2) + (2*b1*b2*f1^2*k3^2*q^\[Nu])/
    (7*k1^2) + (185*b3*f1^2*k3^2*q^\[Nu])/(126*k1^2) - 
   (26*b4*f1^2*k3^2*q^\[Nu])/(63*k1^2) - (b5*f1^2*k3^2*q^\[Nu])/k1^2 + 
   (2*b1*b5*f1^2*k3^2*q^\[Nu])/(7*k1^2) + (67*b6*f1^2*k3^2*q^\[Nu])/
    (21*k1^2) - (80*b7*f1^2*k3^2*q^\[Nu])/(63*k1^2) + 
   (46*b8*f1^2*k3^2*q^\[Nu])/(21*k1^2) - (59*b9*f1^2*k3^2*q^\[Nu])/
    (63*k1^2) - (31*b1*f1^2*k3^2*q^\[Nu])/(126*k2^2) - 
   (2*b1^2*f1^2*k3^2*q^\[Nu])/(7*k2^2) + (3*b10*f1^2*k3^2*q^\[Nu])/(2*k2^2) - 
   (5*b11*f1^2*k3^2*q^\[Nu])/(14*k2^2) - (17*b2*f1^2*k3^2*q^\[Nu])/
    (21*k2^2) + (2*b1*b2*f1^2*k3^2*q^\[Nu])/(7*k2^2) + 
   (185*b3*f1^2*k3^2*q^\[Nu])/(126*k2^2) - (26*b4*f1^2*k3^2*q^\[Nu])/
    (63*k2^2) - (b5*f1^2*k3^2*q^\[Nu])/k2^2 + (2*b1*b5*f1^2*k3^2*q^\[Nu])/
    (7*k2^2) + (67*b6*f1^2*k3^2*q^\[Nu])/(21*k2^2) - 
   (80*b7*f1^2*k3^2*q^\[Nu])/(63*k2^2) + (46*b8*f1^2*k3^2*q^\[Nu])/
    (21*k2^2) - (59*b9*f1^2*k3^2*q^\[Nu])/(63*k2^2) - 
   (b1*f1^2*k3^4*q^\[Nu])/(42*k1^2*k2^2) - (b3*f1^2*k3^4*q^\[Nu])/
    (6*k1^2*k2^2) + (4*b4*f1^2*k3^4*q^\[Nu])/(21*k1^2*k2^2) - 
   (2*b6*f1^2*k3^4*q^\[Nu])/(7*k1^2*k2^2) + (13*b7*f1^2*k3^4*q^\[Nu])/
    (21*k1^2*k2^2) + (b9*f1^2*k3^4*q^\[Nu])/(3*k1^2*k2^2) + 
   (3631*b1*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b11*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^2*k1^11*q^(-2 + \[Nu])*y)/(7*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1*b2*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^2*k1^11*q^(-2 + \[Nu])*y)/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*b3*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b4*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b7*f1^2*k1^11*q^(-2 + \[Nu])*y)/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b8*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1^2*k1^11*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (74*b9*f1^2*k1^11*q^(-2 + \[Nu])*y)/(105*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (17*b1*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^11*q^(-2 + \[Nu])*y)/(3*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b2*f1^3*k1^11*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (61703*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4343*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1^3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b11*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4216*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11896*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1^2*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1992*b4*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b7*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (880*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19812*b9*f1^2*k1^9*k2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6182*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (82*b1^2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125063*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (401549*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b11*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19069*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1^2*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23196*b4*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*b5*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b7*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13674*b9*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (65*b1^2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (227714*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (52994*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1384*b1^3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b11*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29216*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23792*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1^2*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (928*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130352*b4*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (708*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1888*b1*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b5*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b7*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (928*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1760*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59720*b9*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12364*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1^2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^3*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b2*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b5*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (125063*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (48510*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (401549*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b11*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19069*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b1^2*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (45*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (23196*b4*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*b5*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b7*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13674*b9*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*b1*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (65*b1^2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (61703*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4343*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1^3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b11*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4216*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11896*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1^2*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1992*b4*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (118*b5*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b1*b5*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b7*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (880*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19812*b9*f1^2*k1*k2^9*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6182*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (82*b1^2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1^3*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b2*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3631*b1*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5*b1^2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b11*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b2*f1^2*k2^11*q^(-2 + \[Nu])*y)/(7*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*b1*b2*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^2*k2^11*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b1*b3*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*b4*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b7*f1^2*k2^11*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (8*b8*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b8*f1^2*k2^11*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (74*b9*f1^2*k2^11*q^(-2 + \[Nu])*y)/(105*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (17*b1*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k2^11*q^(-2 + \[Nu])*y)/(3*k1*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*b1*b2*f1^3*k2^11*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^15*q^(-2 + \[Nu])*y)/(385*k2*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^15*q^(-2 + \[Nu])*y)/
    (35*k2*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*f1^2*k1^13*k2*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93*b1^2*f1^2*k1^13*k2*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (318*b1^2*f1^2*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (627*b1^2*f1^2*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b1*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (156*b1^2*f1^2*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (627*b1^2*f1^2*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b1*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (318*b1^2*f1^2*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1*f1^2*k1*k2^13*q^(-2 + \[Nu])*y)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93*b1^2*f1^2*k1*k2^13*q^(-2 + \[Nu])*y)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k2^15*q^(-2 + \[Nu])*y)/(385*k1*k3^4*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k2^15*q^(-2 + \[Nu])*y)/
    (35*k1*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*f1^2*k1^13*q^(-2 + \[Nu])*y)/(231*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^2*f1^2*k1^13*q^(-2 + \[Nu])*y)/
    (70*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^13*q^(-2 + \[Nu])*y)/(105*k2*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^13*q^(-2 + \[Nu])*y)/(385*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*b8*f1^2*k1^13*q^(-2 + \[Nu])*y)/
    (7*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^13*q^(-2 + \[Nu])*y)/(5*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k1^13*q^(-2 + \[Nu])*y)/
    (15*k2*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13052*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (98*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282*b1^3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8922*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b4*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b9*f1^2*k1^11*k2*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^3*k1^11*k2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29356*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1887*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (846*b1^3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29706*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (248*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b4*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (708*b1*b5*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (744*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b9*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*b1*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1^2*f1^3*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4892*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (5145*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2371*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (564*b1^3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20294*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b4*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b9*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^3*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4892*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (5145*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2371*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (564*b1^3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20294*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b4*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b1*b5*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b9*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61*b1*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^3*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29356*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1887*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (490*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (846*b1^3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29706*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (248*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b4*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (708*b1*b5*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (744*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b9*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*b1*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*b1^2*f1^3*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13052*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (98*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (282*b1^3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8922*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (735*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b4*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*b1*b5*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (136*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b9*f1^2*k1*k2^11*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13*b1*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (105*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^2*f1^3*k1*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*f1^2*k2^13*q^(-2 + \[Nu])*y)/(231*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (97*b1^2*f1^2*k2^13*q^(-2 + \[Nu])*y)/
    (70*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^2*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k2^13*q^(-2 + \[Nu])*y)/(105*k1*k3^2*
     (k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k2^13*q^(-2 + \[Nu])*y)/(385*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (8*b1*b8*f1^2*k2^13*q^(-2 + \[Nu])*y)/
    (7*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k2^13*q^(-2 + \[Nu])*y)/(5*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b1*f1^3*k2^13*q^(-2 + \[Nu])*y)/
    (15*k1*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1094*b1*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (1155*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (727*b1^2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b11*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2248*b4*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b7*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b9*f1^2*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k1^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42386*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1649*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b11*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15394*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9378*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^2*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1168*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61144*b4*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b7*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1168*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12548*b9*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19526*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*b2*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59812*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28865*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2112*b1^3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b11*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5948*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22604*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1072*b1^2*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16336*b4*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b5*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b7*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (800*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10344*b9*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30812*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*b1^2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^3*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b2*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b5*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (59812*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28865*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2112*b1^3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b11*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5948*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22604*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1072*b1^2*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16336*b4*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1^2*b5*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b7*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (800*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10344*b9*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (30812*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*b1^2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1^3*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b2*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b5*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42386*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1649*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (490*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2944*b1^3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b11*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15394*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9378*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1^2*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1168*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (61144*b4*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*b5*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b7*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1048*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1168*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12548*b9*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19526*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1^3*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*b1*b2*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1094*b1*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (1155*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (727*b1^2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b11*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*b1*b2*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2248*b4*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b7*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b8*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (308*b9*f1^2*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*b1*b2*f1^3*k2^9*k3^2*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4097*b1*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (6930*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (278*b1^2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b11*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (332*b4*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (693*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b7*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4178*b9*f1^2*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (211238*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6401*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2668*b1^3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b11*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5424*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (61168*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (101072*b4*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b7*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2560*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9384*b9*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (35696*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*b1^2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^3*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1*b2*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1099523*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (387322*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4184*b1^3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b11*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (62842*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (39472*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (592*b1^2*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (558232*b4*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1888*b1*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*b5*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b7*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4448*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (518996*b9*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (63748*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1^2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^3*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b2*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b5*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (211238*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6401*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2668*b1^3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b11*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5424*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (61168*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (101072*b4*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (944*b1*b5*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b7*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2560*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9384*b9*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (35696*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (68*b1^2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*b1^3*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1*b2*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*b5*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4097*b1*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (6930*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (278*b1^2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b11*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (332*b4*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (693*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b7*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4178*b9*f1^2*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (35*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k2^7*k3^4*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (341*b1^2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b11*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1208*b4*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (3465*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b7*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b8*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b9*f1^2*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k1^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15328*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25187*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (234*b1^3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b11*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9868*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9834*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (344*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170392*b4*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b7*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (344*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (83452*b9*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37199*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1^2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b2*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15328*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (25187*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1470*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (234*b1^3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (104*b11*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (9868*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9834*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (344*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170392*b4*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (472*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (236*b1*b5*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (832*b7*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (688*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (344*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (83452*b9*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37199*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (38*b1^2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^3*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1*b2*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b5*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (341*b1^2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b11*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*b2*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b3*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1208*b4*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (3465*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b7*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (105*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b1*b8*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (668*b9*f1^2*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*b1*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b1*b2*f1^3*k2^5*k3^6*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31*b1^2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (15*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b11*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b4*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (45*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b7*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b8*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3466*b9*f1^2*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (3*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^3*k1^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2999*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (93*b1^2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*b11*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12056*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1^2*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (93656*b4*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (118*b5*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b7*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (63*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (194644*b9*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*b1*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (38*b1^2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*b1*b2*f1^3*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11*b1*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (210*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (31*b1^2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (15*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b11*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*b2*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b3*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b3*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b4*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (45*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b7*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (63*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b8*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*b8*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3466*b9*f1^2*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11*b1*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (b1^2*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (3*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*b2*f1^3*k2^3*k3^8*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (278*b1*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (495*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (42*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b11*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (7*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b4*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b7*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b8*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2572*b9*f1^2*k1*k3^10*q^(-2 + \[Nu])*y)/
    (315*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k1*k3^10*q^(-2 + \[Nu])*y)/
    (21*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (278*b1*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (495*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1^2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (42*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b11*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (7*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*b1*b2*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b3*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b4*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b7*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b8*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2572*b9*f1^2*k2*k3^10*q^(-2 + \[Nu])*y)/
    (315*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1*b2*f1^3*k2*k3^10*q^(-2 + \[Nu])*y)/
    (21*k1*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (19*b1*f1^2*k3^12*q^(-2 + \[Nu])*y)/(126*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (b2*f1^2*k3^12*q^(-2 + \[Nu])*y)/
    (21*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b4*f1^2*k3^12*q^(-2 + \[Nu])*y)/(99*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (14*b9*f1^2*k3^12*q^(-2 + \[Nu])*y)/
    (9*k1*k2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1*f1^2*k1*q^\[Nu]*y)/(63*k2) - (18*b11*f1^2*k1*q^\[Nu]*y)/(7*k2) + 
   (10*b3*f1^2*k1*q^\[Nu]*y)/(63*k2) - (20*b4*f1^2*k1*q^\[Nu]*y)/(63*k2) - 
   (20*b7*f1^2*k1*q^\[Nu]*y)/(63*k2) + (22*b8*f1^2*k1*q^\[Nu]*y)/(21*k2) - 
   (86*b9*f1^2*k1*q^\[Nu]*y)/(63*k2) + (10*b1*f1^2*k2*q^\[Nu]*y)/(63*k1) - 
   (18*b11*f1^2*k2*q^\[Nu]*y)/(7*k1) + (10*b3*f1^2*k2*q^\[Nu]*y)/(63*k1) - 
   (20*b4*f1^2*k2*q^\[Nu]*y)/(63*k1) - (20*b7*f1^2*k2*q^\[Nu]*y)/(63*k1) + 
   (22*b8*f1^2*k2*q^\[Nu]*y)/(21*k1) - (86*b9*f1^2*k2*q^\[Nu]*y)/(63*k1) + 
   (2*b1*f1^2*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (5*b11*f1^2*k1^3*q^\[Nu]*y)/
    (7*k2*k3^2) + (2*b3*f1^2*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - 
   (4*b4*f1^2*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b7*f1^2*k1^3*q^\[Nu]*y)/
    (63*k2*k3^2) + (10*b8*f1^2*k1^3*q^\[Nu]*y)/(21*k2*k3^2) - 
   (34*b9*f1^2*k1^3*q^\[Nu]*y)/(63*k2*k3^2) - (4*b1*f1^2*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (10*b11*f1^2*k1*k2*q^\[Nu]*y)/(7*k3^2) - 
   (4*b3*f1^2*k1*k2*q^\[Nu]*y)/(63*k3^2) + (8*b4*f1^2*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (8*b7*f1^2*k1*k2*q^\[Nu]*y)/(63*k3^2) - 
   (20*b8*f1^2*k1*k2*q^\[Nu]*y)/(21*k3^2) + (68*b9*f1^2*k1*k2*q^\[Nu]*y)/
    (63*k3^2) + (2*b1*f1^2*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (5*b11*f1^2*k2^3*q^\[Nu]*y)/(7*k1*k3^2) + (2*b3*f1^2*k2^3*q^\[Nu]*y)/
    (63*k1*k3^2) - (4*b4*f1^2*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (4*b7*f1^2*k2^3*q^\[Nu]*y)/(63*k1*k3^2) + (10*b8*f1^2*k2^3*q^\[Nu]*y)/
    (21*k1*k3^2) - (34*b9*f1^2*k2^3*q^\[Nu]*y)/(63*k1*k3^2) - 
   (4*b1*f1^2*k3^2*q^\[Nu]*y)/(21*k1*k2) + (23*b11*f1^2*k3^2*q^\[Nu]*y)/
    (7*k1*k2) - (4*b3*f1^2*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
   (8*b4*f1^2*k3^2*q^\[Nu]*y)/(21*k1*k2) + (8*b7*f1^2*k3^2*q^\[Nu]*y)/
    (21*k1*k2) - (32*b8*f1^2*k3^2*q^\[Nu]*y)/(21*k1*k2) + 
   (40*b9*f1^2*k3^2*q^\[Nu]*y)/(21*k1*k2) - 
   (36*b1*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^2*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (216*b11*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b2*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b3*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8192*b4*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b7*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b8*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1*b8*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13936*b9*f1^2*k1^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68116*b1*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (60716*b1^2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1^3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (648*b11*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1136*b1*b2*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b3*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24576*b4*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b7*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b8*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41808*b9*f1^2*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10328*b1*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67576*b1*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (303992*b1^2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (624*b1^3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (432*b11*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (928*b1*b2*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16384*b4*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b7*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b8*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27872*b9*f1^2*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (720*b1*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1^3*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (67576*b1*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (303992*b1^2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (624*b1^3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (432*b11*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (928*b1*b2*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16384*b4*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (352*b7*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (368*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b8*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (27872*b9*f1^2*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (720*b1*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^2*f1^3*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68116*b1*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (60716*b1^2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b1^3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (648*b11*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1136*b1*b2*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (184*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b3*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24576*b4*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b7*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (552*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b8*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41808*b9*f1^2*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10328*b1*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4292*b1^2*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (216*b11*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b2*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b1*b2*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b3*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b3*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8192*b4*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*b7*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b8*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b1*b8*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (13936*b9*f1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b1*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k1^14*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k1^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^2*k1^12*k2^2*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^2*f1^2*k1^10*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^2*k1^8*k2^6*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^2*k1^6*k2^8*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (108*b1^2*f1^2*k1^4*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (77*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b1^2*f1^2*k1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k2^14*q^(-2 + \[Nu])*y^2)/
    (385*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1^2*f1^2*k2^14*q^(-2 + \[Nu])*y^2)/
    (35*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (988*b1*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^2*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k1^12*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k1^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18504*b1*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2552*b1^2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b2*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b4*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b8*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b9*f1^2*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^3*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29556*b1*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4352*b1^2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b4*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b8*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b9*f1^2*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^3*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (31984*b1*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4304*b1^2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b4*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b8*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b9*f1^2*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^3*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29556*b1*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4352*b1^2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b4*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (77*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b8*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b9*f1^2*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*b1*f1^3*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18504*b1*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (18865*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2552*b1^2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b2*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*b4*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1*b8*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b9*f1^2*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1*f1^3*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (988*b1*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b1^2*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b2*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b4*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (385*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b9*f1^2*k2^12*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1*f1^3*k2^12*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100124*b1*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (288*b11*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148256*b4*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b7*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (346096*b9*f1^2*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k1^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158512*b1*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (231424*b1^2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7424*b4*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26752*b9*f1^2*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32896*b1*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49304*b1*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (349952*b1^2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1^3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b11*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1136*b2*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15296*b4*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b7*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (431392*b9*f1^2*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (41504*b1*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1^2*f1^3*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (158512*b1*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (231424*b1^2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b3*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7424*b4*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b8*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26752*b9*f1^2*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32896*b1*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1^2*f1^3*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100124*b1*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b1^2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (288*b11*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*b1*b2*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (148256*b4*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (704*b7*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1072*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (346096*b9*f1^2*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4048*b1*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1^2*f1^3*k2^8*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (83516*b1*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b11*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b3*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1504*b4*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b7*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b8*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (120112*b9*f1^2*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k1^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52564*b1*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (95276*b1^2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b11*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*b2*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (544*b1*b3*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (60832*b4*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b7*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2720*b1*b8*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (125264*b9*f1^2*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66992*b1*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1^2*f1^3*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52564*b1*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (95276*b1^2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b11*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*b2*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (544*b1*b3*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (60832*b4*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (24255*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b7*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (144*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2720*b1*b8*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (125264*b9*f1^2*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66992*b1*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1^2*f1^3*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (83516*b1*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3284*b1^2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (144*b11*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (256*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b2*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (441*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b3*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1504*b4*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (33957*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (352*b7*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b1*b8*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (120112*b9*f1^2*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24944*b1*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b1^2*f1^3*k2^6*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13180*b1*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b11*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*b2*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130952*b4*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b7*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284188*b9*f1^2*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1*f1^3*k1^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (98552*b1*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (18865*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (712*b1^2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b11*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (832*b1*b2*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2816*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b1*b3*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34256*b4*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1408*b7*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2816*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*b1*b8*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (196264*b9*f1^2*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (3087*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (5224*b1*f1^3*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (13180*b1*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3488*b1^2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b11*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*b2*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b3*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (130952*b4*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (704*b7*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (320*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (544*b1*b8*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284188*b9*f1^2*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2612*b1*f1^3*k2^4*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2452*b1*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b11*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81248*b4*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b7*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (245536*b9*f1^2*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*f1^3*k1^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2452*b1*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1617*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1^2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b11*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*b2*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b3*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (81248*b4*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (169785*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b7*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (2205*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1*b8*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (245536*b9*f1^2*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (15435*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (632*b1*f1^3*k2^2*k3^8*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*b1*f1^2*k3^10*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^2*k3^10*q^(-2 + \[Nu])*y^2)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b3*f1^2*k3^10*q^(-2 + \[Nu])*y^2)/
    (315*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (656*b4*f1^2*k3^10*q^(-2 + \[Nu])*y^2)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b8*f1^2*k3^10*q^(-2 + \[Nu])*y^2)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*b9*f1^2*k3^10*q^(-2 + \[Nu])*y^2)/
    (147*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b1*f1^2*q^\[Nu]*y^2)/315 - (24*b11*f1^2*q^\[Nu]*y^2)/35 - 
   (64*b2*f1^2*q^\[Nu]*y^2)/735 + (16*b3*f1^2*q^\[Nu]*y^2)/315 - 
   (32*b4*f1^2*q^\[Nu]*y^2)/2205 - (32*b7*f1^2*q^\[Nu]*y^2)/2205 + 
   (16*b8*f1^2*q^\[Nu]*y^2)/21 - (208*b9*f1^2*q^\[Nu]*y^2)/441 - 
   (29632*b1*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b2*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b4*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11024*b9*f1^2*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*f1^3*k1^9*k2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42624*b1^2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b2*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b4*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b9*f1^2*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (295552*b1*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17664*b1^2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1536*b1*b2*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3648*b4*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66144*b9*f1^2*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2368*b1*f1^3*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42624*b1^2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b2*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b4*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b9*f1^2*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (29632*b1*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1^2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1*b2*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b3*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (608*b4*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b1*b8*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11024*b9*f1^2*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1184*b1*f1^3*k1*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b2*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1^11*k2*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2208*b1*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1^2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1728*b1*b2*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b3*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b8*f1^2*k1^9*k2^3*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1472*b1*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1^2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1152*b1*b2*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b8*f1^2*k1^7*k2^5*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1472*b1*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b1^2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1152*b1*b2*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*b3*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b8*f1^2*k1^5*k2^7*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2208*b1*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1728*b1^2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1728*b1*b2*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*b1*b3*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (288*b1*b8*f1^2*k1^3*k2^9*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (736*b1*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (3773*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (576*b1^2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (576*b1*b2*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (1715*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (32*b1*b3*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (245*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b1*b8*f1^2*k1*k2^11*q^(-2 + \[Nu])*y^3)/
    (49*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66496*b1*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b4*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b9*f1^2*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1*f1^3*k1^7*k2*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1088*b1*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*b1^2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b4*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b9*f1^2*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1088*b1*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (8085*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19072*b1^2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b4*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b9*f1^2*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66496*b1*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b1^2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (384*b1*b2*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b3*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b4*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*b8*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b9*f1^2*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3552*b1*f1^3*k1*k2^7*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14848*b1*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b4*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22048*b9*f1^2*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1*f1^3*k1^5*k2*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (147968*b1*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3456*b1^2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1152*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1536*b1*b2*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b3*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2432*b4*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (3773*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*b8*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44096*b9*f1^2*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (7104*b1*f1^3*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14848*b1*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (768*b1^2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (768*b1*b2*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b3*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1216*b4*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b1*b8*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22048*b9*f1^2*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3552*b1*f1^3*k1*k2^5*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (55456*b1*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b4*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b9*f1^2*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1^3*k2*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (55456*b1*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (56595*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*b1^2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (384*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (192*b1*b2*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b3*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2432*b4*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b1*b8*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (44096*b9*f1^2*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1184*b1*f1^3*k1*k2^3*k3^6*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*b2*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b3*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (608*b4*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (11319*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b8*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (49*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (11024*b9*f1^2*k1*k2*k3^8*q^(-2 + \[Nu])*y^3)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2)))) + 
 ((-2851*f1^4*k1^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2852*b1*f1^4*k1^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^4*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b2*f1^4*k1^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (f1^5*k1^10*q^(-2 + \[Nu]))/
    (10*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7*b1*f1^5*k1^10*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (94019*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5444*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1^2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (164*b2*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b5*f1^4*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (509*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (77*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12811*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (968*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (488*b1^2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b2*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b5*f1^4*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (251*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12811*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (968*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (488*b1^2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (272*b2*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (40*b5*f1^4*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (251*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (35*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (94019*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3430*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5444*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (286*b1^2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (164*b2*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b5*f1^4*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (509*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    (70*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (77*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    (6*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2851*f1^4*k2^10*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2852*b1*f1^4*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (26*b1^2*f1^4*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*b2*f1^4*k2^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (f1^5*k2^10*q^(-2 + \[Nu]))/
    (10*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7*b1*f1^5*k2^10*q^(-2 + \[Nu]))/(6*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (9*f1^4*k1^14*q^(-2 + \[Nu]))/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (45*f1^4*k1^12*k2^2*q^(-2 + \[Nu]))/(14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (81*f1^4*k1^10*k2^4*q^(-2 + \[Nu]))/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (45*f1^4*k1^8*k2^6*q^(-2 + \[Nu]))/(14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (45*f1^4*k1^6*k2^8*q^(-2 + \[Nu]))/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (81*f1^4*k1^4*k2^10*q^(-2 + \[Nu]))/(14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (45*f1^4*k1^2*k2^12*q^(-2 + \[Nu]))/
    (14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*f1^4*k2^14*q^(-2 + \[Nu]))/(14*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (58*f1^4*k1^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (527*b1*f1^4*k1^12*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^5*k1^12*q^(-2 + \[Nu]))/
    (14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (284*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*f1^4*k1^10*k2^2*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^5*k1^10*k2^2*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (998*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7*b1*f1^4*k1^8*k2^4*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (141*f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/(14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1544*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*b1*f1^4*k1^6*k2^6*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (102*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (998*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7*b1*f1^4*k1^4*k2^8*q^(-2 + \[Nu]))/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (141*f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/(14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (284*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (598*b1*f1^4*k1^2*k2^10*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3*f1^5*k1^2*k2^10*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (58*f1^4*k2^12*q^(-2 + \[Nu]))/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (527*b1*f1^4*k2^12*q^(-2 + \[Nu]))/(35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3*f1^5*k2^12*q^(-2 + \[Nu]))/
    (14*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2068*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (688*b1*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50*b1^2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (153*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80144*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2608*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1^2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1096*b2*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b5*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10376*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (692*b1^2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1432*b2*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (176*b5*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (86*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80144*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2608*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (172*b1^2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1096*b2*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b5*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2068*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (688*b1*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (50*b1^2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*b2*f1^4*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (153*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3986*b1*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b2*f1^4*k1^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (279*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49*b1*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11945*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1474*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (310*b1^2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b2*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b5*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (11945*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (686*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1474*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (310*b1^2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (944*b2*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*b5*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (15*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (15*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/(2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (3986*b1*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*b1^2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (72*b2*f1^4*k2^6*k3^4*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (279*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (49*b1*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (262*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (371*b1*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/(14*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (14*b1*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2564*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (245*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (626*b1*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*b1^2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (136*b2*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b5*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (19*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (262*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (371*b1*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*b1^2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*b2*f1^4*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/(14*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (14*b1*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (451*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (38*b1*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b2*f1^4*k1^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*f1^5*k1^2*k3^8*q^(-2 + \[Nu]))/(14*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (7*b1*f1^5*k1^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (451*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/(210*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (38*b1*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*b2*f1^4*k2^2*k3^8*q^(-2 + \[Nu]))/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (27*f1^5*k2^2*k3^8*q^(-2 + \[Nu]))/(14*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (7*b1*f1^5*k2^2*k3^8*q^(-2 + \[Nu]))/
    (2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^4*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b2*f1^4*k3^10*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (6*f1^5*k3^10*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - 2*b1*f1^4*q^\[Nu] + 2*b2*f1^4*q^\[Nu] + 
   2*b5*f1^4*q^\[Nu] - (311*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2956*b1*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b2*f1^4*k1^9*k2*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66188*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1936*b1*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (520*b1^2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b2*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b5*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18586*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3512*b1*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*b1^2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (240*b2*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b5*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (28*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (66188*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (1029*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1936*b1*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (520*b1^2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (304*b2*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b5*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (311*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2956*b1*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*b1^2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*b2*f1^4*k1*k2^9*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (128*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*f1^4*k1^13*k2*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (54*f1^4*k1^11*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (135*f1^4*k1^9*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (180*f1^4*k1^7*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (135*f1^4*k1^5*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (54*f1^4*k1^3*k2^11*q^(-2 + \[Nu])*y)/
    (7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (9*f1^4*k1*k2^13*q^(-2 + \[Nu])*y)/(7*k3^4*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (116*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (982*b1*f1^4*k1^11*k2*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^5*k1^11*k2*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (36*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1746*b1*f1^4*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*f1^5*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (764*b1*f1^4*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^5*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (764*b1*f1^4*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^5*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1746*b1*f1^4*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (18*f1^5*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (982*b1*f1^4*k1*k2^11*q^(-2 + \[Nu])*y)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (6*f1^5*k1*k2^11*q^(-2 + \[Nu])*y)/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (32*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4052*b1*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^4*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (164*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26464*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8732*b1*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (464*b1^2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1072*b2*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b5*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (26464*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8732*b1*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (464*b1^2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1072*b2*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*b5*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (70*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4052*b1*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b1^2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*b2*f1^4*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (164*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (183*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1028*b1*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^4*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (122826*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7976*b1*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*b1^2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (592*b2*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*b5*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (88*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (183*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1028*b1*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*b1^2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (32*b2*f1^4*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (460*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1462*b1*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (82*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (460*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1462*b1*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*b2*f1^4*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (82*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (17*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b2*f1^4*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1*k2*k3^8*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29824*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (456*b1*f1^4*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20352*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2232*b1*f1^4*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20352*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (343*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2232*b1*f1^4*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (29824*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (456*b1*f1^4*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (264*f1^4*k1^10*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*f1^4*k1^8*k2^4*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (816*f1^4*k1^6*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (96*f1^4*k1^4*k2^8*q^(-2 + \[Nu])*y^2)/
    (5*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (264*f1^4*k1^2*k2^10*q^(-2 + \[Nu])*y^2)/
    (35*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94464*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (528*b1*f1^4*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (487936*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1056*b1*f1^4*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (192*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (94464*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (528*b1*f1^4*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (96*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208928*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^4*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (208928*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5145*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*b1*f1^4*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (48*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (7688*f1^4*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y^2)/
    (735*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42624*f1^4*k1^7*k2^3*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28416*f1^4*k1^5*k2^5*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (42624*f1^4*k1^3*k2^7*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37888*f1^4*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (37888*f1^4*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14208*f1^4*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^3)/
    (1715*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (1/105 + (8*y^2)/105 + (8*y^4)/315) + 
 ((2414*f1^5*k1^10*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (56*b1*f1^5*k1^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (848*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (98*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^8*k2^2*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4052*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (142*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^6*k1^6*k2^4*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (816*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (362*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^4*k2^6*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (3422*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (58*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^2*k2^8*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*f1^5*k1^12*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*f1^5*k1^10*k2^2*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (90*f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*f1^5*k1^2*k2^10*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (1006*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^5*k1^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^8*k3^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2354*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (166*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2546*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3118*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (154*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*f1^5*k1^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k1^6*k3^4*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (164*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (274*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (506*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^5*k1^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^4*k3^6*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (32*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^5*k1^2*k3^8*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2*f1^6*k1^2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3088*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (112*b1*f1^5*k1^9*k2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^9*k2*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (1088*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (476*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4624*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*f1^5*k1^11*k2*q^(-2 + \[Nu])*y)/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (320*f1^5*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (360*f1^5*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*f1^5*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*f1^5*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1108*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (236*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (632*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^3*k2*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (312*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1296*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (312*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (1/231 + (4*y^2)/77 + (8*y^4)/231) + 
 ((3422*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (58*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^8*k2^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (816*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (362*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^6*k2^4*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4052*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (142*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (44*f1^6*k1^4*k2^6*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (848*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (98*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^2*k2^8*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (2414*f1^5*k2^10*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*b1*f1^5*k2^10*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^6*k2^10*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (10*f1^5*k1^10*k2^2*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (90*f1^5*k1^8*k2^4*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*f1^5*k1^6*k2^6*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*f1^5*k1^4*k2^8*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (90*f1^5*k1^2*k2^10*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (10*f1^5*k2^12*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3118*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (110*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2546*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (184*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2354*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (166*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1006*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (36*b1*f1^5*k2^8*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k2^8*k3^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (506*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (70*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (164*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (274*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (154*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*b1*f1^5*k2^6*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k2^6*k3^4*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (32*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (18*b1*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/(7*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (4*b1*f1^5*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k2^4*k3^6*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (16*f1^5*k2^2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (2*f1^6*k2^2*k3^8*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (4624*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (64*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1088*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (476*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3088*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (112*b1*f1^5*k1*k2^9*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1*k2^9*q^(-2 + \[Nu])*y)/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (20*f1^5*k1^9*k2^3*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*f1^5*k1^7*k2^5*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (360*f1^5*k1^5*k2^7*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (320*f1^5*k1^3*k2^9*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (20*f1^5*k1*k2^11*q^(-2 + \[Nu])*y)/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (236*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (376*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (416*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (16*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1108*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (104*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (632*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (36*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (824*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (8*f1^6*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (152*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (21*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1*k2^3*k3^6*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (312*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1296*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (312*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (368*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (1/231 + (4*y^2)/77 + (8*y^4)/231) + 
 ((10*f1^6*k1^10*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*f1^6*k1^8*k2^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^6*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*f1^6*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^6*k1^8*k3^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (92*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34*f1^6*k1^6*k3^4*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (34*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (2*f1^6*k1^4*k3^6*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*f1^6*k1^9*k2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^6*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*f1^6*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*f1^6*k1^7*k2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1^5*k2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (1/429 + (16*y^2)/429 + (16*y^4)/429) + 
 ((10*f1^6*k1^6*k2^4*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (22*f1^6*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (22*f1^6*k1^2*k2^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (10*f1^6*k2^10*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (58*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (92*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (58*f1^6*k2^8*k3^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (34*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (34*f1^6*k2^6*k3^4*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (2*f1^6*k2^4*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*f1^6*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^6*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*f1^6*k1*k2^9*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (56*f1^6*k1*k2^7*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1*k2^5*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (1/429 + (16*y^2)/429 + (16*y^4)/429) + 
 ((4072*f1^5*k1^9*k2*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (142*b1*f1^5*k1^9*k2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^6*k1^9*k2*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (472*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (400*b1*f1^5*k1^7*k2^3*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^6*k1^7*k2^3*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (1696*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1*f1^5*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (22*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (472*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (400*b1*f1^5*k1^3*k2^7*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^6*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4072*f1^5*k1*k2^9*q^(-2 + \[Nu]))/(105*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (142*b1*f1^5*k1*k2^9*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (f1^6*k1*k2^9*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (100*f1^5*k1^11*k2*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (20*f1^5*k1^9*k2^3*q^(-2 + \[Nu]))/(k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (40*f1^5*k1^7*k2^5*q^(-2 + \[Nu]))/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (40*f1^5*k1^5*k2^7*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (20*f1^5*k1^3*k2^9*q^(-2 + \[Nu]))/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (100*f1^5*k1*k2^11*q^(-2 + \[Nu]))/(7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (936*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (90*b1*f1^5*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (214*b1*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (214*b1*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (936*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (90*b1*f1^5*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170*b1*f1^5*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*f1^6*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (72*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (340*b1*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (128*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (170*b1*f1^5*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (14*f1^6*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (14*b1*f1^5*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (24*f1^5*k1*k2*k3^8*q^(-2 + \[Nu]))/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3*f1^6*k1*k2*k3^8*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5444*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284*b1*f1^5*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1*f1^5*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (212*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (172*b1*f1^5*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (5444*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (284*b1*f1^5*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (4*f1^6*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*f1^5*k1^10*k2^2*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (480*f1^5*k1^8*k2^4*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (80*f1^5*k1^6*k2^6*q^(-2 + \[Nu])*y)/
    (k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (480*f1^5*k1^4*k2^8*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (200*f1^5*k1^2*k2^10*q^(-2 + \[Nu])*y)/
    (7*k3^2*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*f1^5*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (3928*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (512*b1*f1^5*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (92*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (15*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (256*b1*f1^5*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3076*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1*f1^5*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (3076*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    (105*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*b1*f1^5*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (12*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (76*f1^5*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    (7*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (4*f1^6*k1^2*k2^2*k3^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*f1^5*k1^7*k2^3*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (1664*f1^5*k1^5*k2^5*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*f1^5*k1^3*k2^7*q^(-2 + \[Nu])*y^2)/
    (5*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*f1^5*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (512*f1^5*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (64*f1^5*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y^2)/
    (35*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  ((5*y)/231 + (40*y^3)/693 + (8*y^5)/693) + 
 ((28*f1^6*k1^9*k2*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (52*f1^6*k1^7*k2^3*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*f1^6*k1^7*k2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (224*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100*f1^6*k1^5*k2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1^3*k2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^6*k1^8*k2^2*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*f1^6*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^6*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  ((5*y)/429 + (20*y^3)/429 + (8*y^5)/429) + 
 ((28*f1^6*k1^7*k2^3*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (52*f1^6*k1^5*k2^5*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (52*f1^6*k1^3*k2^7*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (28*f1^6*k1*k2^9*q^(-2 + \[Nu]))/((k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) - (160*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (224*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (160*f1^6*k1*k2^7*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (100*f1^6*k1*k2^5*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (8*f1^6*k1*k2^3*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^6*k1^6*k2^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (48*f1^6*k1^4*k2^6*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (56*f1^6*k1^2*k2^8*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (152*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (16*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  ((5*y)/429 + (20*y^3)/429 + (8*y^5)/429) + 
 ((116*f1^6*k1^8*k2^2*q^(-2 + \[Nu]))/(3*(k1^4 + (k2^2 - k3^2)^2 - 
      2*k1^2*(k2^2 + k3^2))*(3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + 
      k1^2*(-6*k2^2 + 2*k3^2))) + (68*f1^6*k1^6*k2^4*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (68*f1^6*k1^4*k2^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (116*f1^6*k1^2*k2^8*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (220*f1^6*k1^6*k2^2*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (296*f1^6*k1^4*k2^4*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (220*f1^6*k1^2*k2^6*k3^2*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*f1^6*k1^4*k2^2*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (140*f1^6*k1^2*k2^4*k3^4*q^(-2 + \[Nu]))/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (12*f1^6*k1^2*k2^2*k3^6*q^(-2 + \[Nu]))/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^6*k1^7*k2^3*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (176*f1^6*k1^5*k2^5*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (232*f1^6*k1^3*k2^7*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*f1^6*k1^5*k2^3*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) - 
   (208*f1^6*k1^3*k2^5*k3^2*q^(-2 + \[Nu])*y)/
    (3*(k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))) + 
   (24*f1^6*k1^3*k2^3*k3^4*q^(-2 + \[Nu])*y)/
    ((k1^4 + (k2^2 - k3^2)^2 - 2*k1^2*(k2^2 + k3^2))*
     (3*k1^4 + 3*k2^4 + 2*k2^2*k3^2 - k3^4 + k1^2*(-6*k2^2 + 2*k3^2))))*
  (5/3003 + (30*y^2)/1001 + (40*y^4)/1001 + (16*y^6)/3003)

{{k3^10, (k3^6*(-k1^4 + 2*k1^2*k2^2 - k2^4 + k3^4))/4, k3^8, 
  (k3^2*(k1^4 - 2*k1^2*k2^2 + k2^4 - k3^4)^2)/16, 
  (k3^4*(-k1^4 + 2*k1^2*k2^2 - k2^4 + k3^4))/4, k3^6}, 
 {(k3^6*(-k1^4 + 2*k1^2*k2^2 - k2^4 + k3^4))/4, 
  (k3^2*(3*k1^8 - 12*k1^6*(k2^2 - k3^2) + 
     2*k1^4*(9*k2^4 - 6*k2^2*k3^2 - 11*k3^4) + (k2^2 - k3^2)^2*
      (3*k2^4 + 18*k2^2*k3^2 + 11*k3^4) - 
     4*k1^2*(3*k2^6 + 3*k2^4*k3^2 - 15*k2^2*k3^4 + k3^6)))/160, 
  (k3^4*(-9*k1^4 - 9*k2^4 - 2*k2^2*k3^2 + 11*k3^4 + 2*k1^2*(9*k2^2 - k3^2)))/
   40, (-2*k1^10 + k1^8*(6*k2^2 - k3^2) - 
    4*k1^6*(k2^4 + 5*k2^2*k3^2 - 3*k3^4) - (k2^2 - k3^2)^3*
     (2*k2^4 + 7*k2^2*k3^2 + 3*k3^4) - 2*k1^4*(2*k2^6 - 21*k2^4*k3^2 + 
      6*k2^2*k3^4 + 5*k3^6) + 2*k1^2*(3*k2^8 - 10*k2^6*k3^2 - 6*k2^4*k3^4 + 
      14*k2^2*k3^6 - k3^8))/160, (k1^8 + k1^6*(-4*k2^2 + 7*k3^2) + 
    k1^4*(6*k2^4 - 7*k2^2*k3^2 - 11*k3^4) + (k2^2 - k3^2)^2*
     (k2^4 + 9*k2^2*k3^2 + 6*k3^4) - k1^2*(4*k2^6 + 7*k2^4*k3^2 - 
      30*k2^2*k3^4 + 3*k3^6))/80, 
  (k3^2*(-2*k1^4 - 2*k2^4 - k2^2*k3^2 + 3*k3^4 + k1^2*(4*k2^2 - k3^2)))/10}, 
 {k3^8, (k3^4*(-9*k1^4 - 9*k2^4 - 2*k2^2*k3^2 + 11*k3^4 + 
     2*k1^2*(9*k2^2 - k3^2)))/40, (6*k3^6)/5, 
  (k1^8 + k1^6*(-4*k2^2 + 3*k3^2) + k1^4*(6*k2^4 - 3*k2^2*k3^2 - 6*k3^4) + 
    (k2^2 - k3^2)^2*(k2^4 + 5*k2^2*k3^2 + 3*k3^4) - 
    k1^2*(4*k2^6 + 3*k2^4*k3^2 - 12*k2^2*k3^4 + k3^6))/40, 
  (k3^2*(-11*k1^4 - 11*k2^4 - 2*k2^2*k3^2 + 13*k3^4 + 
     k1^2*(22*k2^2 - 2*k3^2)))/40, (7*k3^4)/5}, 
 {(k3^2*(k1^4 - 2*k1^2*k2^2 + k2^4 - k3^4)^2)/16, 
  (-2*k1^10 + k1^8*(6*k2^2 - k3^2) - 4*k1^6*(k2^4 + 5*k2^2*k3^2 - 3*k3^4) - 
    (k2^2 - k3^2)^3*(2*k2^4 + 7*k2^2*k3^2 + 3*k3^4) - 
    2*k1^4*(2*k2^6 - 21*k2^4*k3^2 + 6*k2^2*k3^4 + 5*k3^6) + 
    2*k1^2*(3*k2^8 - 10*k2^6*k3^2 - 6*k2^4*k3^4 + 14*k2^2*k3^6 - k3^8))/160, 
  (k1^8 + k1^6*(-4*k2^2 + 3*k3^2) + k1^4*(6*k2^4 - 3*k2^2*k3^2 - 6*k3^4) + 
    (k2^2 - k3^2)^2*(k2^4 + 5*k2^2*k3^2 + 3*k3^4) - 
    k1^2*(4*k2^6 + 3*k2^4*k3^2 - 12*k2^2*k3^4 + k3^6))/40, 
  (2*k1^10 + k1^8*(10*k2^2 - 7*k3^2) + (k2^2 - k3^2)^4*(2*k2^2 + k3^2) - 
    4*k1^6*(3*k2^4 + k2^2*k3^2 - 2*k3^4) + 2*k1^2*(k2^2 - k3^2)^2*
     (5*k2^4 + 8*k2^2*k3^2 - k3^4) - 2*k1^4*(6*k2^6 - 27*k2^4*k3^2 + 
      12*k2^2*k3^4 + k3^6))/160, 
  (-3*k1^8 - (k2^2 - k3^2)^3*(3*k2^2 + 2*k3^2) + k1^6*(-4*k2^2 + 7*k3^2) + 
    k1^4*(14*k2^4 - 15*k2^2*k3^2 - 3*k3^4) - 
    k1^2*(4*k2^6 + 15*k2^4*k3^2 - 22*k2^2*k3^4 + 3*k3^6))/80, 
  (k1^6 - k1^4*(k2^2 + k3^2) + (k2^2 - k3^2)^2*(k2^2 + k3^2) - 
    k1^2*(k2^4 - 4*k2^2*k3^2 + k3^4))/10}, 
 {(k3^4*(-k1^4 + 2*k1^2*k2^2 - k2^4 + k3^4))/4, 
  (k1^8 + k1^6*(-4*k2^2 + 7*k3^2) + k1^4*(6*k2^4 - 7*k2^2*k3^2 - 11*k3^4) + 
    (k2^2 - k3^2)^2*(k2^4 + 9*k2^2*k3^2 + 6*k3^4) - 
    k1^2*(4*k2^6 + 7*k2^4*k3^2 - 30*k2^2*k3^4 + 3*k3^6))/80, 
  (k3^2*(-11*k1^4 - 11*k2^4 - 2*k2^2*k3^2 + 13*k3^4 + 
     k1^2*(22*k2^2 - 2*k3^2)))/40, 
  (-3*k1^8 - (k2^2 - k3^2)^3*(3*k2^2 + 2*k3^2) + k1^6*(-4*k2^2 + 7*k3^2) + 
    k1^4*(14*k2^4 - 15*k2^2*k3^2 - 3*k3^4) - 
    k1^2*(4*k2^6 + 15*k2^4*k3^2 - 22*k2^2*k3^4 + 3*k3^6))/80, 
  (13*k1^6 - 13*k1^4*(k2^2 + k3^2) + 13*(k2^2 - k3^2)^2*(k2^2 + k3^2) + 
    k1^2*(-13*k2^4 + 66*k2^2*k3^2 - 13*k3^4))/120, 
  (-7*(k1^4 + k2^4 + k2^2*k3^2 - 2*k3^4 + k1^2*(-2*k2^2 + k3^2)))/30}, 
 {k3^6, (k3^2*(-2*k1^4 - 2*k2^4 - k2^2*k3^2 + 3*k3^4 + k1^2*(4*k2^2 - k3^2)))/
   10, (7*k3^4)/5, (k1^6 - k1^4*(k2^2 + k3^2) + 
    (k2^2 - k3^2)^2*(k2^2 + k3^2) - k1^2*(k2^4 - 4*k2^2*k3^2 + k3^4))/10, 
  (-7*(k1^4 + k2^4 + k2^2*k3^2 - 2*k3^4 + k1^2*(-2*k2^2 + k3^2)))/30, 
  (7*k3^2)/3}}
